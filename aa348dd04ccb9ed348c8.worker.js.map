{"version":3,"sources":["webpack:///aa348dd04ccb9ed348c8.worker.js","webpack:///webpack/bootstrap aa348dd04ccb9ed348c8","webpack:///./src/worker.js","webpack:///./~/ramda/src/internal/_curry2.js","webpack:///./~/ramda/src/internal/_curry1.js","webpack:///./~/ramda/src/internal/_curry3.js","webpack:///./~/ramda/src/internal/_dispatchable.js","webpack:///./~/ramda/src/internal/_xfBase.js","webpack:///./~/ramda/src/curryN.js","webpack:///./~/ramda/src/internal/_has.js","webpack:///./~/ramda/src/map.js","webpack:///./~/ramda/src/equals.js","webpack:///./~/ramda/src/internal/_reduce.js","webpack:///./~/ramda/src/internal/_concat.js","webpack:///./~/ramda/src/internal/_arity.js","webpack:///./~/ramda/src/keys.js","webpack:///./~/ramda/src/reduce.js","webpack:///./~/ramda/index.js","webpack:///./~/ramda/src/internal/_isArray.js","webpack:///./~/ramda/src/internal/_reduced.js","webpack:///./~/ramda/src/internal/_contains.js","webpack:///./~/ramda/src/slice.js","webpack:///./src/ai/constants.js","webpack:///./~/ramda/src/always.js","webpack:///./~/ramda/src/max.js","webpack:///./~/ramda/src/internal/_checkForMethod.js","webpack:///./~/ramda/src/internal/_isString.js","webpack:///./~/ramda/src/invoker.js","webpack:///./~/ramda/src/nth.js","webpack:///./~/ramda/src/path.js","webpack:///./~/ramda/src/pluck.js","webpack:///./~/ramda/src/toString.js","webpack:///./~/ramda/src/add.js","webpack:///./~/ramda/src/assoc.js","webpack:///./~/ramda/src/curry.js","webpack:///./~/ramda/src/flip.js","webpack:///./~/ramda/src/internal/_containsWith.js","webpack:///./~/ramda/src/internal/_curryN.js","webpack:///./~/ramda/src/internal/_isArrayLike.js","webpack:///./~/ramda/src/internal/_isFunction.js","webpack:///./~/ramda/src/internal/_isPlaceholder.js","webpack:///./~/ramda/src/internal/_map.js","webpack:///./~/ramda/src/lens.js","webpack:///./~/ramda/src/lift.js","webpack:///./~/ramda/src/mergeDeepWithKey.js","webpack:///./~/ramda/src/nAry.js","webpack:///./~/ramda/src/reduceBy.js","webpack:///./~/ramda/src/reject.js","webpack:///./~/ramda/src/reverse.js","webpack:///./~/ramda/src/ap.js","webpack:///./~/ramda/src/chain.js","webpack:///./~/ramda/src/compose.js","webpack:///./~/ramda/src/concat.js","webpack:///./~/ramda/src/filter.js","webpack:///./~/ramda/src/identity.js","webpack:///./~/ramda/src/internal/_assign.js","webpack:///./~/ramda/src/internal/_filter.js","webpack:///./~/ramda/src/internal/_identity.js","webpack:///./~/ramda/src/internal/_isInteger.js","webpack:///./~/ramda/src/internal/_isObject.js","webpack:///./~/ramda/src/internal/_isTransformer.js","webpack:///./~/ramda/src/mergeWithKey.js","webpack:///./~/ramda/src/prop.js","webpack:///./~/ramda/src/tail.js","webpack:///./~/ramda/src/take.js","webpack:///./~/ramda/src/type.js","webpack:///./~/ramda/src/uniq.js","webpack:///./~/ramda/src/uniqWith.js","webpack:///./~/ramda/src/update.js","webpack:///./src/ai/calculateBitPosition.js","webpack:///./src/ai/getEmptyPositions.js","webpack:///./src/ai/getMask.js","webpack:///./src/ai/getPosition.js","webpack:///./src/ai/isPositionEmpty.js","webpack:///./src/ai/move.js","webpack:///./~/ramda/src/adjust.js","webpack:///./~/ramda/src/and.js","webpack:///./~/ramda/src/any.js","webpack:///./~/ramda/src/apply.js","webpack:///./~/ramda/src/assocPath.js","webpack:///./~/ramda/src/bind.js","webpack:///./~/ramda/src/composeK.js","webpack:///./~/ramda/src/constructN.js","webpack:///./~/ramda/src/converge.js","webpack:///./~/ramda/src/defaultTo.js","webpack:///./~/ramda/src/difference.js","webpack:///./~/ramda/src/differenceWith.js","webpack:///./~/ramda/src/dissoc.js","webpack:///./~/ramda/src/drop.js","webpack:///./~/ramda/src/dropRepeatsWith.js","webpack:///./~/ramda/src/empty.js","webpack:///./~/ramda/src/identical.js","webpack:///./~/ramda/src/internal/_clone.js","webpack:///./~/ramda/src/internal/_cloneRegExp.js","webpack:///./~/ramda/src/internal/_complement.js","webpack:///./~/ramda/src/internal/_createPartialApplicator.js","webpack:///./~/ramda/src/internal/_indexOf.js","webpack:///./~/ramda/src/internal/_isArguments.js","webpack:///./~/ramda/src/internal/_isNumber.js","webpack:///./~/ramda/src/internal/_makeFlat.js","webpack:///./~/ramda/src/internal/_xany.js","webpack:///./~/ramda/src/internal/_xdropRepeatsWith.js","webpack:///./~/ramda/src/internal/_xwrap.js","webpack:///./~/ramda/src/is.js","webpack:///./~/ramda/src/isNil.js","webpack:///./~/ramda/src/juxt.js","webpack:///./~/ramda/src/last.js","webpack:///./~/ramda/src/length.js","webpack:///./~/ramda/src/liftN.js","webpack:///./~/ramda/src/mean.js","webpack:///./~/ramda/src/memoizeWith.js","webpack:///./~/ramda/src/multiply.js","webpack:///./~/ramda/src/not.js","webpack:///./~/ramda/src/objOf.js","webpack:///./~/ramda/src/or.js","webpack:///./~/ramda/src/over.js","webpack:///./~/ramda/src/pickAll.js","webpack:///./~/ramda/src/pipe.js","webpack:///./~/ramda/src/pipeP.js","webpack:///./~/ramda/src/prepend.js","webpack:///./~/ramda/src/reduceRight.js","webpack:///./~/ramda/src/remove.js","webpack:///./~/ramda/src/sequence.js","webpack:///./~/ramda/src/sum.js","webpack:///./~/ramda/src/takeLast.js","webpack:///./~/ramda/src/times.js","webpack:///./~/ramda/src/uniqBy.js","webpack:///./~/ramda/src/useWith.js","webpack:///./~/ramda/src/values.js","webpack:///./~/ramda/src/where.js","webpack:///./src/ai/getAiMove.js","webpack:///./src/ai/getBestPositions.js","webpack:///./src/ai/getNClicks.js","webpack:///./src/ai/getNetwork.js","webpack:///./src/ai/getNewValue.js","webpack:///./src/ai/getPositionIndex.js","webpack:///./src/ai/getWinners.js","webpack:///./src/ai/getXYFromIndex.js","webpack:///./src/ai/setPosition.js","webpack:///./~/ptz-math/dist/index.js","webpack:///./~/ramda/src/F.js","webpack:///./~/ramda/src/T.js","webpack:///./~/ramda/src/__.js","webpack:///./~/ramda/src/addIndex.js","webpack:///./~/ramda/src/all.js","webpack:///./~/ramda/src/allPass.js","webpack:///./~/ramda/src/anyPass.js","webpack:///./~/ramda/src/aperture.js","webpack:///./~/ramda/src/append.js","webpack:///./~/ramda/src/applySpec.js","webpack:///./~/ramda/src/ascend.js","webpack:///./~/ramda/src/binary.js","webpack:///./~/ramda/src/both.js","webpack:///./~/ramda/src/call.js","webpack:///./~/ramda/src/clamp.js","webpack:///./~/ramda/src/clone.js","webpack:///./~/ramda/src/comparator.js","webpack:///./~/ramda/src/complement.js","webpack:///./~/ramda/src/composeP.js","webpack:///./~/ramda/src/cond.js","webpack:///./~/ramda/src/construct.js","webpack:///./~/ramda/src/contains.js","webpack:///./~/ramda/src/countBy.js","webpack:///./~/ramda/src/dec.js","webpack:///./~/ramda/src/descend.js","webpack:///./~/ramda/src/dissocPath.js","webpack:///./~/ramda/src/divide.js","webpack:///./~/ramda/src/dropLast.js","webpack:///./~/ramda/src/dropLastWhile.js","webpack:///./~/ramda/src/dropRepeats.js","webpack:///./~/ramda/src/dropWhile.js","webpack:///./~/ramda/src/either.js","webpack:///./~/ramda/src/endsWith.js","webpack:///./~/ramda/src/eqBy.js","webpack:///./~/ramda/src/eqProps.js","webpack:///./~/ramda/src/evolve.js","webpack:///./~/ramda/src/find.js","webpack:///./~/ramda/src/findIndex.js","webpack:///./~/ramda/src/findLast.js","webpack:///./~/ramda/src/findLastIndex.js","webpack:///./~/ramda/src/flatten.js","webpack:///./~/ramda/src/forEach.js","webpack:///./~/ramda/src/forEachObjIndexed.js","webpack:///./~/ramda/src/fromPairs.js","webpack:///./~/ramda/src/groupBy.js","webpack:///./~/ramda/src/groupWith.js","webpack:///./~/ramda/src/gt.js","webpack:///./~/ramda/src/gte.js","webpack:///./~/ramda/src/has.js","webpack:///./~/ramda/src/hasIn.js","webpack:///./~/ramda/src/head.js","webpack:///./~/ramda/src/ifElse.js","webpack:///./~/ramda/src/inc.js","webpack:///./~/ramda/src/indexBy.js","webpack:///./~/ramda/src/indexOf.js","webpack:///./~/ramda/src/init.js","webpack:///./~/ramda/src/innerJoin.js","webpack:///./~/ramda/src/insert.js","webpack:///./~/ramda/src/insertAll.js","webpack:///./~/ramda/src/internal/_Set.js","webpack:///./~/ramda/src/internal/_aperture.js","webpack:///./~/ramda/src/internal/_arrayFromIterator.js","webpack:///./~/ramda/src/internal/_dropLast.js","webpack:///./~/ramda/src/internal/_dropLastWhile.js","webpack:///./~/ramda/src/internal/_equals.js","webpack:///./~/ramda/src/internal/_flatCat.js","webpack:///./~/ramda/src/internal/_forceReduced.js","webpack:///./~/ramda/src/internal/_functionName.js","webpack:///./~/ramda/src/internal/_isRegExp.js","webpack:///./~/ramda/src/internal/_objectAssign.js","webpack:///./~/ramda/src/internal/_of.js","webpack:///./~/ramda/src/internal/_pipe.js","webpack:///./~/ramda/src/internal/_pipeP.js","webpack:///./~/ramda/src/internal/_quote.js","webpack:///./~/ramda/src/internal/_stepCat.js","webpack:///./~/ramda/src/internal/_toISOString.js","webpack:///./~/ramda/src/internal/_toString.js","webpack:///./~/ramda/src/internal/_xall.js","webpack:///./~/ramda/src/internal/_xaperture.js","webpack:///./~/ramda/src/internal/_xchain.js","webpack:///./~/ramda/src/internal/_xdrop.js","webpack:///./~/ramda/src/internal/_xdropLast.js","webpack:///./~/ramda/src/internal/_xdropLastWhile.js","webpack:///./~/ramda/src/internal/_xdropWhile.js","webpack:///./~/ramda/src/internal/_xfilter.js","webpack:///./~/ramda/src/internal/_xfind.js","webpack:///./~/ramda/src/internal/_xfindIndex.js","webpack:///./~/ramda/src/internal/_xfindLast.js","webpack:///./~/ramda/src/internal/_xfindLastIndex.js","webpack:///./~/ramda/src/internal/_xmap.js","webpack:///./~/ramda/src/internal/_xreduceBy.js","webpack:///./~/ramda/src/internal/_xtake.js","webpack:///./~/ramda/src/internal/_xtakeWhile.js","webpack:///./~/ramda/src/intersection.js","webpack:///./~/ramda/src/intersectionWith.js","webpack:///./~/ramda/src/intersperse.js","webpack:///./~/ramda/src/into.js","webpack:///./~/ramda/src/invert.js","webpack:///./~/ramda/src/invertObj.js","webpack:///./~/ramda/src/isEmpty.js","webpack:///./~/ramda/src/join.js","webpack:///./~/ramda/src/keysIn.js","webpack:///./~/ramda/src/lastIndexOf.js","webpack:///./~/ramda/src/lensIndex.js","webpack:///./~/ramda/src/lensPath.js","webpack:///./~/ramda/src/lensProp.js","webpack:///./~/ramda/src/lt.js","webpack:///./~/ramda/src/lte.js","webpack:///./~/ramda/src/mapAccum.js","webpack:///./~/ramda/src/mapAccumRight.js","webpack:///./~/ramda/src/mapObjIndexed.js","webpack:///./~/ramda/src/match.js","webpack:///./~/ramda/src/mathMod.js","webpack:///./~/ramda/src/maxBy.js","webpack:///./~/ramda/src/median.js","webpack:///./~/ramda/src/memoize.js","webpack:///./~/ramda/src/merge.js","webpack:///./~/ramda/src/mergeAll.js","webpack:///./~/ramda/src/mergeDeepLeft.js","webpack:///./~/ramda/src/mergeDeepRight.js","webpack:///./~/ramda/src/mergeDeepWith.js","webpack:///./~/ramda/src/mergeWith.js","webpack:///./~/ramda/src/min.js","webpack:///./~/ramda/src/minBy.js","webpack:///./~/ramda/src/modulo.js","webpack:///./~/ramda/src/negate.js","webpack:///./~/ramda/src/none.js","webpack:///./~/ramda/src/nthArg.js","webpack:///./~/ramda/src/o.js","webpack:///./~/ramda/src/of.js","webpack:///./~/ramda/src/omit.js","webpack:///./~/ramda/src/once.js","webpack:///./~/ramda/src/pair.js","webpack:///./~/ramda/src/partial.js","webpack:///./~/ramda/src/partialRight.js","webpack:///./~/ramda/src/partition.js","webpack:///./~/ramda/src/pathEq.js","webpack:///./~/ramda/src/pathOr.js","webpack:///./~/ramda/src/pathSatisfies.js","webpack:///./~/ramda/src/pick.js","webpack:///./~/ramda/src/pickBy.js","webpack:///./~/ramda/src/pipeK.js","webpack:///./~/ramda/src/product.js","webpack:///./~/ramda/src/project.js","webpack:///./~/ramda/src/propEq.js","webpack:///./~/ramda/src/propIs.js","webpack:///./~/ramda/src/propOr.js","webpack:///./~/ramda/src/propSatisfies.js","webpack:///./~/ramda/src/props.js","webpack:///./~/ramda/src/range.js","webpack:///./~/ramda/src/reduceWhile.js","webpack:///./~/ramda/src/reduced.js","webpack:///./~/ramda/src/repeat.js","webpack:///./~/ramda/src/replace.js","webpack:///./~/ramda/src/scan.js","webpack:///./~/ramda/src/set.js","webpack:///./~/ramda/src/sort.js","webpack:///./~/ramda/src/sortBy.js","webpack:///./~/ramda/src/sortWith.js","webpack:///./~/ramda/src/split.js","webpack:///./~/ramda/src/splitAt.js","webpack:///./~/ramda/src/splitEvery.js","webpack:///./~/ramda/src/splitWhen.js","webpack:///./~/ramda/src/startsWith.js","webpack:///./~/ramda/src/subtract.js","webpack:///./~/ramda/src/symmetricDifference.js","webpack:///./~/ramda/src/symmetricDifferenceWith.js","webpack:///./~/ramda/src/takeLastWhile.js","webpack:///./~/ramda/src/takeWhile.js","webpack:///./~/ramda/src/tap.js","webpack:///./~/ramda/src/test.js","webpack:///./~/ramda/src/toLower.js","webpack:///./~/ramda/src/toPairs.js","webpack:///./~/ramda/src/toPairsIn.js","webpack:///./~/ramda/src/toUpper.js","webpack:///./~/ramda/src/transduce.js","webpack:///./~/ramda/src/transpose.js","webpack:///./~/ramda/src/traverse.js","webpack:///./~/ramda/src/trim.js","webpack:///./~/ramda/src/tryCatch.js","webpack:///./~/ramda/src/unapply.js","webpack:///./~/ramda/src/unary.js","webpack:///./~/ramda/src/uncurryN.js","webpack:///./~/ramda/src/unfold.js","webpack:///./~/ramda/src/union.js","webpack:///./~/ramda/src/unionWith.js","webpack:///./~/ramda/src/unless.js","webpack:///./~/ramda/src/unnest.js","webpack:///./~/ramda/src/until.js","webpack:///./~/ramda/src/valuesIn.js","webpack:///./~/ramda/src/view.js","webpack:///./~/ramda/src/when.js","webpack:///./~/ramda/src/whereEq.js","webpack:///./~/ramda/src/without.js","webpack:///./~/ramda/src/xprod.js","webpack:///./~/ramda/src/zip.js","webpack:///./~/ramda/src/zipObj.js","webpack:///./~/ramda/src/zipWith.js","webpack:///./~/synaptic/dist/synaptic.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_getAiMove","_getAiMove2","onmessage","e","oldGame","data","position","postMessage","_curry1","_isPlaceholder","fn","f2","a","b","arguments","length","_b","_a","f1","apply","this","_curry2","f3","_c","_isArray","_isTransformer","methodNames","xf","args","Array","prototype","slice","pop","idx","transducer","init","result","_arity","_curryN","prop","Object","hasOwnProperty","_dispatchable","_map","_reduce","_xmap","curryN","keys","functor","toString","acc","key","_equals","_isArrayLike","_xwrap","bind","_arrayReduce","list","len","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","reduce","TypeError","set1","set2","len1","len2","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_has","_isArguments","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","_curry3","F","T","__","add","addIndex","adjust","all","allPass","always","and","any","anyPass","ap","aperture","append","applySpec","ascend","assoc","assocPath","binary","both","chain","clamp","clone","comparator","complement","compose","composeK","composeP","concat","cond","construct","constructN","converge","countBy","curry","dec","defaultTo","descend","difference","differenceWith","dissoc","dissocPath","divide","drop","dropLast","dropLastWhile","dropRepeats","dropRepeatsWith","dropWhile","either","empty","endsWith","eqBy","eqProps","equals","evolve","filter","find","findIndex","findLast","findLastIndex","flatten","flip","forEach","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","has","hasIn","head","identical","identity","ifElse","inc","indexBy","indexOf","innerJoin","insert","insertAll","intersection","intersectionWith","intersperse","into","invert","invertObj","invoker","is","isEmpty","isNil","join","juxt","keysIn","last","lastIndexOf","lens","lensIndex","lensPath","lensProp","lift","liftN","lt","lte","map","mapAccum","mapAccumRight","mapObjIndexed","match","mathMod","max","maxBy","mean","median","memoize","memoizeWith","merge","mergeAll","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeDeepWithKey","mergeWith","mergeWithKey","min","minBy","modulo","multiply","nAry","negate","none","not","nth","nthArg","o","objOf","of","omit","once","or","over","pair","partial","partialRight","partition","path","pathEq","pathOr","pathSatisfies","pick","pickAll","pickBy","pipe","pipeK","pipeP","pluck","prepend","product","project","propEq","propIs","propOr","propSatisfies","props","range","reduceBy","reduceRight","reduceWhile","reduced","reject","remove","repeat","replace","reverse","scan","sequence","set","sort","sortBy","sortWith","split","splitAt","splitEvery","splitWhen","startsWith","subtract","sum","symmetricDifference","symmetricDifferenceWith","tail","take","takeLast","takeLastWhile","takeWhile","tap","test","times","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","traverse","trim","tryCatch","type","unapply","unary","uncurryN","unfold","union","unionWith","uniq","uniqBy","uniqWith","unless","unnest","until","update","useWith","values","valuesIn","view","when","where","whereEq","without","xprod","zip","zipObj","zipWith","isArray","val","x","@@transducer/value","@@transducer/reduced","_indexOf","_checkForMethod","fromIndex","toIndex","initialScore","O","X","_","emptyValue","boardLength","boardIndexes","undefined","_ramda","methodname","_isFunction","arity","method","target","_isString","offset","charAt","paths","_toString","Number","pred","received","combined","argsIdx","left","combinedIdx","nodeType","getter","setter","toFunctorFn","focus","_isObject","lObj","rObj","k","lVal","rVal","_xreduceBy","valueFn","valueAcc","keyFn","elt","_complement","filterable","_concat","applyF","applyX","f","_makeFlat","_xchain","monad","_filter","_xfilter","_identity","_objectAssign","assign","isInteger","l","r","Infinity","_xtake","xs","_containsWith","calculateBitPosition","calculateBitPositionForXY","_getXYFromIndex2","_getXYFromIndex3","y","index","_getXYFromIndex","_constants","_isPositionEmpty","_isPositionEmpty2","getEmptyPositions","board","i","getMask","_calculateBitPosition","_calculateBitPosition2","_getMask","_getMask2","getPosition","bitPosition","mask","_getPosition","_getPosition2","isPositionEmpty","_setPosition","_setPosition2","_getNewValue","_getNewValue2","_getNClicks","_getNClicks2","_getWinners","_getWinners2","getScore","oldScore","winners","isMyTurn","move","ended","nClicks","newValue","newBoard","isNClicksOdd","started","lastMove","isAiTurn","aiStarted","score","ai","human","start","_idx","_list","_xany","_isInteger","nextObj","arr","thisObj","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","after","fns","context","d","v","_contains","first","second","out","firstLen","push","_xdrop","Math","_xdropRepeatsWith","constructor","_cloneRegExp","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","inf","recursive","flatt","jlen","j","ilen","_reduced","_xfBase","XAny","input","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","XWrap","Ctor","_isNumber","NaN","lifted","mFn","cache","Identity","names","name","_pipe","_pipeP","el","count","splice","traversable","isNaN","RangeError","_Set","appliedItem","transformers","vals","spec","testObj","_getBestPositions","_getBestPositions2","_getNetwork","_getNetwork2","_getPositionIndex","_getPositionIndex2","_move","_move2","_ptzMath","net","learningRates","invalidMove","validMove","win","lost","getAiMove","output","activate","newGame","propagate","bestPositions","bestPosition","getRandomItem","gameAfterBestMove","_getEmptyPositions","_getEmptyPositions2","getOther","getBestPositions","emptyPositions","winPositions","testGame","losePositions","testGame2","getNClicks","_synaptic","getNetwork","inputLayer","Layer","hiddenLayer1","hiddenLayer2","outputLayer","Network","hidden","getNewValue","getPositionIndex","aiOutput","bestIndex","positionsToCheck","getWinners","get","positions","p0","p1","p2","getXYFromIndex","setPosition","randomIndex","random","defineProperty","floor","@@functional/placeholder","origFn","_xall","preds","_aperture","_xaperture","aa","bb","g","pairs","elem","_dropLast","_xdropLast","_dropLastWhile","_xdropLastWhile","_xdropWhile","suffix","obj1","obj2","transformations","object","transformation","_xfind","_xfindIndex","_xfindLast","_xfindLastIndex","keyList","res","nextidx","condition","onTrue","onFalse","ys","elts","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","newSize","size","bIdx","limit","_arrayFromIterator","_functionName","stackA","stackB","message","entries","keysA","_forceReduced","preservingReduced","@@transducer/init","@@transducer/result","@@transducer/step","ret","rxf","String","nextKey","ctx","then","s","escaped","_assign","_stepCatArray","_stepCatString","_stepCatObject","pad","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_quote","_toISOString","seen","recur","mapPairs","repr","XAll","XAperture","pos","full","store","getCopy","_flatCat","XDrop","XDropLast","XDropLastWhile","retained","retain","flush","XDropWhile","XFilter","XFind","found","XFindIndex","XFindLast","XFindLastIndex","lastIdx","XMap","XReduceBy","inputs","XTake","XTakeWhile","list1","list2","lookupList","filteredList","results","separator","_stepCat","tuple","rx","str","width","_l","_r","_of","called","fst","snd","_createPartialApplicator","_path","propPath","ps","from","to","regex","replacement","array","prefix","_xtakeWhile","_isRegExp","outerlist","innerlist","ws","zeroWidth","hasProtoTrim","beginRx","endRx","tryer","catcher","depth","endIdx","currentDepth","seed","whenFalseFn","vs","Const","fantasy-land/map","whenTrueFn","rv","root","factory","configurable","enumerable","property","_classCallCheck","instance","Constructor","_createClass","defineProperties","descriptor","writable","protoProps","staticProps","_LayerConnection","_LayerConnection2","_Neuron","_Neuron2","_Network","_Network2","connectionType","ALL_TO_ALL","ONE_TO_ONE","ALL_TO_ELSE","gateType","INPUT","OUTPUT","connectedTo","neuron","activations","activation","rate","layer","weights","layers","connected","connection","gater","connections","gated","ID","gate","projected","gatedfrom","selfconnected","here","there","clear","reset","options","label","squash","bias","_typeof","_Layer","_Layer2","_Trainer","_Trainer2","optimized","optimize","unit","restore","that","neurons","propagation_sentences","hardcode","memory","variables","activation_sentences","trace_sentences","outputs","targets","Function","network","trace","check_activation","check_propagation","getValue","shift","state","old","elegibility","extended","weight","gain","hiddenLayer","bool","ignoreTraces","ids","LOGISTIC","TANH","IDENTITY","HLIM","RELU","selfconnection","edgeConnection","code","layerTo","layerID","layerToID","fakeNode","layerfrom","layerfromID","link","escape","dimension","tmp","substring","workerOptions","iterations","error","cost","crossValidate","costFunction","MSE","workerFunction","getWorkerSharedFunctions","JSON","stringify","workerSourceCode","blob","Blob","blobURL","window","URL","createObjectURL","Worker","fromJSON","toJSON","_SHARED_WORKER_FUNCTIONS","train_f","train","_trainSet_f","_trainSet","test_f","json","config","_Connection","_Connection2","derivate","fx","exp","pow","tanh","Neuron","uid","responsibility","influences","neighboors","derivative","influence","incoming","xtrace","isOutput","gradient","store_activation","store_trace","store_propagation","varID","__count","__neuron","allocate","allocated","currentLayer","getVar","buildSentence","sentence","noProjections","noGates","isInput","self_gain","self_weight","input_activation","input_weight","input_gain","eP","eN","neuron_old","initialized","incoming_weight","incoming_activation","neuron_self_weight","neuron_self_gain","gated_gain","connection_weight","neuron_responsibility","connection_gain","neuron_activation","shuffleInplace","CROSS_ENTROPY","crossentropy","log","mse","BINARY","misses","round","Trainer","currentRate","testSet","trainSet","bucketSize","abort","now","schedule","customLog","console","testSize","testError","numTrain","ceil","lastError","currentSetSize","currentBucket","every","do","shuffle","time","workerTrain","Promise","resolve","errorSum","callback","suppressWarning","warn","worker","action","ownership","memoryBuffer","terminate","scheduled","defaults","trial","correct","success","distractors","prompts","criterion","symbols","noRepeat","avoid","number","used","equal","prediction","sequenceLength","indexes","distractorsCorrect","targetsCorrect","divideError","Node","connect","node","reberGrammar","n1","n2","n3","n4","n5","n6","embededReberGrammar","reber1","reber2","generate","ch","different","array1","array2","max1","i1","max2","i2","iteration","table","B","P","S","E","read","predict","getSamples","trainingSize","t","trainingSet","trainingSamples","trainSamples","testSamples","samples","_interopRequireWildcard","newObj","Architect","_architect","Connection","LayerConnection","fromLayer","toLayer","_Perceptron","_LSTM","_Liquid","_Hopfield","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_Network3","Perceptron","_this","getPrototypeOf","previous","LSTM","option","peepholes","hiddenToHidden","outputToHidden","outputToGates","inputToOutput","hiddenLayers","inputGate","forgetGate","memoryCell","outputGate","cell","Liquid","gates","connectionList","Hopfield","trainer","patterns"],"mappings":"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","file":"aa348dd04ccb9ed348c8.worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _getAiMove = __webpack_require__(128);\n\t\n\tvar _getAiMove2 = _interopRequireDefault(_getAiMove);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// eslint-disable-next-line\n\tonmessage = function onmessage(e) {\n\t  var oldGame = e.data;\n\t  var position = (0, _getAiMove2.default)(oldGame);\n\t\n\t  postMessage({\n\t    oldGame: oldGame,\n\t    position: position\n\t  });\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _isPlaceholder = __webpack_require__(38);\n\t\n\t\n\t/**\n\t * Optimized internal two-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry2(fn) {\n\t  return function f2(a, b) {\n\t    switch (arguments.length) {\n\t      case 0:\n\t        return f2;\n\t      case 1:\n\t        return _isPlaceholder(a) ? f2\n\t             : _curry1(function(_b) { return fn(a, _b); });\n\t      default:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n\t             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n\t             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n\t             : fn(a, b);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isPlaceholder = __webpack_require__(38);\n\t\n\t\n\t/**\n\t * Optimized internal one-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry1(fn) {\n\t  return function f1(a) {\n\t    if (arguments.length === 0 || _isPlaceholder(a)) {\n\t      return f1;\n\t    } else {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isPlaceholder = __webpack_require__(38);\n\t\n\t\n\t/**\n\t * Optimized internal three-arity curry function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curry3(fn) {\n\t  return function f3(a, b, c) {\n\t    switch (arguments.length) {\n\t      case 0:\n\t        return f3;\n\t      case 1:\n\t        return _isPlaceholder(a) ? f3\n\t             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n\t      case 2:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n\t             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n\t             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n\t             : _curry1(function(_c) { return fn(a, b, _c); });\n\t      default:\n\t        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n\t             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n\t             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n\t             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n\t             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n\t             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n\t             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n\t             : fn(a, b, c);\n\t    }\n\t  };\n\t};\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArray = __webpack_require__(16);\n\tvar _isTransformer = __webpack_require__(58);\n\t\n\t\n\t/**\n\t * Returns a function that dispatches with different strategies based on the\n\t * object in list position (last argument). If it is an array, executes [fn].\n\t * Otherwise, if it has a function with one of the given method names, it will\n\t * execute that function (functor case). Otherwise, if it is a transformer,\n\t * uses transducer [xf] to return a new transformer (transducer case).\n\t * Otherwise, it will default to executing [fn].\n\t *\n\t * @private\n\t * @param {Array} methodNames properties to check for a custom implementation\n\t * @param {Function} xf transducer to initialize if object is transformer\n\t * @param {Function} fn default ramda implementation\n\t * @return {Function} A function that dispatches on object in list position\n\t */\n\tmodule.exports = function _dispatchable(methodNames, xf, fn) {\n\t  return function() {\n\t    if (arguments.length === 0) {\n\t      return fn();\n\t    }\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    var obj = args.pop();\n\t    if (!_isArray(obj)) {\n\t      var idx = 0;\n\t      while (idx < methodNames.length) {\n\t        if (typeof obj[methodNames[idx]] === 'function') {\n\t          return obj[methodNames[idx]].apply(obj, args);\n\t        }\n\t        idx += 1;\n\t      }\n\t      if (_isTransformer(obj)) {\n\t        var transducer = xf.apply(null, args);\n\t        return transducer(obj);\n\t      }\n\t    }\n\t    return fn.apply(this, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t  init: function() {\n\t    return this.xf['@@transducer/init']();\n\t  },\n\t  result: function(result) {\n\t    return this.xf['@@transducer/result'](result);\n\t  }\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry1 = __webpack_require__(2);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _curryN = __webpack_require__(35);\n\t\n\t\n\t/**\n\t * Returns a curried equivalent of the provided function, with the specified\n\t * arity. The curried function has two unusual capabilities. First, its\n\t * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n\t * following are equivalent:\n\t *\n\t *   - `g(1)(2)(3)`\n\t *   - `g(1)(2, 3)`\n\t *   - `g(1, 2)(3)`\n\t *   - `g(1, 2, 3)`\n\t *\n\t * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n\t * \"gaps\", allowing partial application of any combination of arguments,\n\t * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n\t * the following are equivalent:\n\t *\n\t *   - `g(1, 2, 3)`\n\t *   - `g(_, 2, 3)(1)`\n\t *   - `g(_, _, 3)(1)(2)`\n\t *   - `g(_, _, 3)(1, 2)`\n\t *   - `g(_, 2)(1)(3)`\n\t *   - `g(_, 2)(1, 3)`\n\t *   - `g(_, 2)(_, 3)(1)`\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.5.0\n\t * @category Function\n\t * @sig Number -> (* -> a) -> (* -> a)\n\t * @param {Number} length The arity for the returned function.\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} A new, curried function.\n\t * @see R.curry\n\t * @example\n\t *\n\t *      var sumArgs = (...args) => R.sum(args);\n\t *\n\t *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n\t *      var f = curriedAddFourNumbers(1, 2);\n\t *      var g = f(3);\n\t *      g(4); //=> 10\n\t */\n\tmodule.exports = _curry2(function curryN(length, fn) {\n\t  if (length === 1) {\n\t    return _curry1(fn);\n\t  }\n\t  return _arity(length, _curryN(length, [], fn));\n\t});\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _has(prop, obj) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _map = __webpack_require__(39);\n\tvar _reduce = __webpack_require__(10);\n\tvar _xmap = __webpack_require__(227);\n\tvar curryN = __webpack_require__(6);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Takes a function and\n\t * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n\t * applies the function to each of the functor's values, and returns\n\t * a functor of the same shape.\n\t *\n\t * Ramda provides suitable `map` implementations for `Array` and `Object`,\n\t * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n\t *\n\t * Dispatches to the `map` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * Also treats functions as functors and will compose them together.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Functor f => (a -> b) -> f a -> f b\n\t * @param {Function} fn The function to be called on every element of the input `list`.\n\t * @param {Array} list The list to be iterated over.\n\t * @return {Array} The new list.\n\t * @see R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var double = x => x * 2;\n\t *\n\t *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n\t *\n\t *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n\t * @symb R.map(f, [a, b]) = [f(a), f(b)]\n\t * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n\t * @symb R.map(f, functor_o) = functor_o.map(f)\n\t */\n\tmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n\t  switch (Object.prototype.toString.call(functor)) {\n\t    case '[object Function]':\n\t      return curryN(functor.length, function() {\n\t        return fn.call(this, functor.apply(this, arguments));\n\t      });\n\t    case '[object Object]':\n\t      return _reduce(function(acc, key) {\n\t        acc[key] = fn(functor[key]);\n\t        return acc;\n\t      }, {}, keys(functor));\n\t    default:\n\t      return _map(fn, functor);\n\t  }\n\t}));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _equals = __webpack_require__(202);\n\t\n\t\n\t/**\n\t * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n\t * cyclical data structures.\n\t *\n\t * Dispatches symmetrically to the `equals` methods of both arguments, if\n\t * present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.15.0\n\t * @category Relation\n\t * @sig a -> b -> Boolean\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      R.equals(1, 1); //=> true\n\t *      R.equals(1, '1'); //=> false\n\t *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n\t *\n\t *      var a = {}; a.v = a;\n\t *      var b = {}; b.v = b;\n\t *      R.equals(a, b); //=> true\n\t */\n\tmodule.exports = _curry2(function equals(a, b) {\n\t  return _equals(a, b, [], []);\n\t});\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArrayLike = __webpack_require__(36);\n\tvar _xwrap = __webpack_require__(100);\n\tvar bind = __webpack_require__(78);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function _arrayReduce(xf, acc, list) {\n\t    var idx = 0;\n\t    var len = list.length;\n\t    while (idx < len) {\n\t      acc = xf['@@transducer/step'](acc, list[idx]);\n\t      if (acc && acc['@@transducer/reduced']) {\n\t        acc = acc['@@transducer/value'];\n\t        break;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return xf['@@transducer/result'](acc);\n\t  }\n\t\n\t  function _iterableReduce(xf, acc, iter) {\n\t    var step = iter.next();\n\t    while (!step.done) {\n\t      acc = xf['@@transducer/step'](acc, step.value);\n\t      if (acc && acc['@@transducer/reduced']) {\n\t        acc = acc['@@transducer/value'];\n\t        break;\n\t      }\n\t      step = iter.next();\n\t    }\n\t    return xf['@@transducer/result'](acc);\n\t  }\n\t\n\t  function _methodReduce(xf, acc, obj, methodName) {\n\t    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n\t  }\n\t\n\t  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n\t  return function _reduce(fn, acc, list) {\n\t    if (typeof fn === 'function') {\n\t      fn = _xwrap(fn);\n\t    }\n\t    if (_isArrayLike(list)) {\n\t      return _arrayReduce(fn, acc, list);\n\t    }\n\t    if (typeof list['fantasy-land/reduce'] === 'function') {\n\t      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n\t    }\n\t    if (list[symIterator] != null) {\n\t      return _iterableReduce(fn, acc, list[symIterator]());\n\t    }\n\t    if (typeof list.next === 'function') {\n\t      return _iterableReduce(fn, acc, list);\n\t    }\n\t    if (typeof list.reduce === 'function') {\n\t      return _methodReduce(fn, acc, list, 'reduce');\n\t    }\n\t\n\t    throw new TypeError('reduce: list must be array or iterable');\n\t  };\n\t}());\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Private `concat` function to merge two array-like objects.\n\t *\n\t * @private\n\t * @param {Array|Arguments} [set1=[]] An array-like object.\n\t * @param {Array|Arguments} [set2=[]] An array-like object.\n\t * @return {Array} A new, merged array.\n\t * @example\n\t *\n\t *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t */\n\tmodule.exports = function _concat(set1, set2) {\n\t  set1 = set1 || [];\n\t  set2 = set2 || [];\n\t  var idx;\n\t  var len1 = set1.length;\n\t  var len2 = set2.length;\n\t  var result = [];\n\t\n\t  idx = 0;\n\t  while (idx < len1) {\n\t    result[result.length] = set1[idx];\n\t    idx += 1;\n\t  }\n\t  idx = 0;\n\t  while (idx < len2) {\n\t    result[result.length] = set2[idx];\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _arity(n, fn) {\n\t  /* eslint-disable no-unused-vars */\n\t  switch (n) {\n\t    case 0: return function() { return fn.apply(this, arguments); };\n\t    case 1: return function(a0) { return fn.apply(this, arguments); };\n\t    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n\t    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n\t    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n\t    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n\t    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n\t    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n\t    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n\t    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n\t    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n\t    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n\t  }\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _has = __webpack_require__(7);\n\tvar _isArguments = __webpack_require__(95);\n\t\n\t\n\t/**\n\t * Returns a list containing the names of all the enumerable own properties of\n\t * the supplied object.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig {k: v} -> [k]\n\t * @param {Object} obj The object to extract properties from\n\t * @return {Array} An array of the object's own properties.\n\t * @see R.keysIn, R.values\n\t * @example\n\t *\n\t *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n\t */\n\tmodule.exports = (function() {\n\t  // cover IE < 9 keys issues\n\t  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n\t                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t  // Safari bug\n\t  var hasArgsEnumBug = (function() {\n\t    'use strict';\n\t    return arguments.propertyIsEnumerable('length');\n\t  }());\n\t\n\t  var contains = function contains(list, item) {\n\t    var idx = 0;\n\t    while (idx < list.length) {\n\t      if (list[idx] === item) {\n\t        return true;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n\t    _curry1(function keys(obj) {\n\t      return Object(obj) !== obj ? [] : Object.keys(obj);\n\t    }) :\n\t    _curry1(function keys(obj) {\n\t      if (Object(obj) !== obj) {\n\t        return [];\n\t      }\n\t      var prop, nIdx;\n\t      var ks = [];\n\t      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\t      for (prop in obj) {\n\t        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n\t          ks[ks.length] = prop;\n\t        }\n\t      }\n\t      if (hasEnumBug) {\n\t        nIdx = nonEnumerableProps.length - 1;\n\t        while (nIdx >= 0) {\n\t          prop = nonEnumerableProps[nIdx];\n\t          if (_has(prop, obj) && !contains(ks, prop)) {\n\t            ks[ks.length] = prop;\n\t          }\n\t          nIdx -= 1;\n\t        }\n\t      }\n\t      return ks;\n\t    });\n\t}());\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar _reduce = __webpack_require__(10);\n\t\n\t\n\t/**\n\t * Returns a single item by iterating through the list, successively calling\n\t * the iterator function and passing it an accumulator value and the current\n\t * value from the array, and then passing the result to the next call.\n\t *\n\t * The iterator function receives two values: *(acc, value)*. It may use\n\t * [`R.reduced`](#reduced) to shortcut the iteration.\n\t *\n\t * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n\t * is *(value, acc)*.\n\t *\n\t * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n\t * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t * on this behavior, see:\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n\t *\n\t * Dispatches to the `reduce` method of the third argument, if present. When\n\t * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n\t * shortcuting, as this is not implemented by `reduce`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig ((a, b) -> a) -> a -> [b] -> a\n\t * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t *        current element from the array.\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.reduced, R.addIndex, R.reduceRight\n\t * @example\n\t *\n\t *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n\t *                -               -10\n\t *               / \\              / \\\n\t *              -   4           -6   4\n\t *             / \\              / \\\n\t *            -   3   ==>     -3   3\n\t *           / \\              / \\\n\t *          -   2           -1   2\n\t *         / \\              / \\\n\t *        0   1            0   1\n\t *\n\t * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n\t */\n\tmodule.exports = _curry3(_reduce);\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = {\n\t  F: __webpack_require__(138),\n\t  T: __webpack_require__(139),\n\t  __: __webpack_require__(140),\n\t  add: __webpack_require__(30),\n\t  addIndex: __webpack_require__(141),\n\t  adjust: __webpack_require__(73),\n\t  all: __webpack_require__(142),\n\t  allPass: __webpack_require__(143),\n\t  always: __webpack_require__(21),\n\t  and: __webpack_require__(74),\n\t  any: __webpack_require__(75),\n\t  anyPass: __webpack_require__(144),\n\t  ap: __webpack_require__(47),\n\t  aperture: __webpack_require__(145),\n\t  append: __webpack_require__(146),\n\t  apply: __webpack_require__(76),\n\t  applySpec: __webpack_require__(147),\n\t  ascend: __webpack_require__(148),\n\t  assoc: __webpack_require__(31),\n\t  assocPath: __webpack_require__(77),\n\t  binary: __webpack_require__(149),\n\t  bind: __webpack_require__(78),\n\t  both: __webpack_require__(150),\n\t  call: __webpack_require__(151),\n\t  chain: __webpack_require__(48),\n\t  clamp: __webpack_require__(152),\n\t  clone: __webpack_require__(153),\n\t  comparator: __webpack_require__(154),\n\t  complement: __webpack_require__(155),\n\t  compose: __webpack_require__(49),\n\t  composeK: __webpack_require__(79),\n\t  composeP: __webpack_require__(156),\n\t  concat: __webpack_require__(50),\n\t  cond: __webpack_require__(157),\n\t  construct: __webpack_require__(158),\n\t  constructN: __webpack_require__(80),\n\t  contains: __webpack_require__(159),\n\t  converge: __webpack_require__(81),\n\t  countBy: __webpack_require__(160),\n\t  curry: __webpack_require__(32),\n\t  curryN: __webpack_require__(6),\n\t  dec: __webpack_require__(161),\n\t  defaultTo: __webpack_require__(82),\n\t  descend: __webpack_require__(162),\n\t  difference: __webpack_require__(83),\n\t  differenceWith: __webpack_require__(84),\n\t  dissoc: __webpack_require__(85),\n\t  dissocPath: __webpack_require__(163),\n\t  divide: __webpack_require__(164),\n\t  drop: __webpack_require__(86),\n\t  dropLast: __webpack_require__(165),\n\t  dropLastWhile: __webpack_require__(166),\n\t  dropRepeats: __webpack_require__(167),\n\t  dropRepeatsWith: __webpack_require__(87),\n\t  dropWhile: __webpack_require__(168),\n\t  either: __webpack_require__(169),\n\t  empty: __webpack_require__(88),\n\t  endsWith: __webpack_require__(170),\n\t  eqBy: __webpack_require__(171),\n\t  eqProps: __webpack_require__(172),\n\t  equals: __webpack_require__(9),\n\t  evolve: __webpack_require__(173),\n\t  filter: __webpack_require__(51),\n\t  find: __webpack_require__(174),\n\t  findIndex: __webpack_require__(175),\n\t  findLast: __webpack_require__(176),\n\t  findLastIndex: __webpack_require__(177),\n\t  flatten: __webpack_require__(178),\n\t  flip: __webpack_require__(33),\n\t  forEach: __webpack_require__(179),\n\t  forEachObjIndexed: __webpack_require__(180),\n\t  fromPairs: __webpack_require__(181),\n\t  groupBy: __webpack_require__(182),\n\t  groupWith: __webpack_require__(183),\n\t  gt: __webpack_require__(184),\n\t  gte: __webpack_require__(185),\n\t  has: __webpack_require__(186),\n\t  hasIn: __webpack_require__(187),\n\t  head: __webpack_require__(188),\n\t  identical: __webpack_require__(89),\n\t  identity: __webpack_require__(52),\n\t  ifElse: __webpack_require__(189),\n\t  inc: __webpack_require__(190),\n\t  indexBy: __webpack_require__(191),\n\t  indexOf: __webpack_require__(192),\n\t  init: __webpack_require__(193),\n\t  innerJoin: __webpack_require__(194),\n\t  insert: __webpack_require__(195),\n\t  insertAll: __webpack_require__(196),\n\t  intersection: __webpack_require__(231),\n\t  intersectionWith: __webpack_require__(232),\n\t  intersperse: __webpack_require__(233),\n\t  into: __webpack_require__(234),\n\t  invert: __webpack_require__(235),\n\t  invertObj: __webpack_require__(236),\n\t  invoker: __webpack_require__(25),\n\t  is: __webpack_require__(101),\n\t  isEmpty: __webpack_require__(237),\n\t  isNil: __webpack_require__(102),\n\t  join: __webpack_require__(238),\n\t  juxt: __webpack_require__(103),\n\t  keys: __webpack_require__(13),\n\t  keysIn: __webpack_require__(239),\n\t  last: __webpack_require__(104),\n\t  lastIndexOf: __webpack_require__(240),\n\t  length: __webpack_require__(105),\n\t  lens: __webpack_require__(40),\n\t  lensIndex: __webpack_require__(241),\n\t  lensPath: __webpack_require__(242),\n\t  lensProp: __webpack_require__(243),\n\t  lift: __webpack_require__(41),\n\t  liftN: __webpack_require__(106),\n\t  lt: __webpack_require__(244),\n\t  lte: __webpack_require__(245),\n\t  map: __webpack_require__(8),\n\t  mapAccum: __webpack_require__(246),\n\t  mapAccumRight: __webpack_require__(247),\n\t  mapObjIndexed: __webpack_require__(248),\n\t  match: __webpack_require__(249),\n\t  mathMod: __webpack_require__(250),\n\t  max: __webpack_require__(22),\n\t  maxBy: __webpack_require__(251),\n\t  mean: __webpack_require__(107),\n\t  median: __webpack_require__(252),\n\t  memoize: __webpack_require__(253),\n\t  memoizeWith: __webpack_require__(108),\n\t  merge: __webpack_require__(254),\n\t  mergeAll: __webpack_require__(255),\n\t  mergeDeepLeft: __webpack_require__(256),\n\t  mergeDeepRight: __webpack_require__(257),\n\t  mergeDeepWith: __webpack_require__(258),\n\t  mergeDeepWithKey: __webpack_require__(42),\n\t  mergeWith: __webpack_require__(259),\n\t  mergeWithKey: __webpack_require__(59),\n\t  min: __webpack_require__(260),\n\t  minBy: __webpack_require__(261),\n\t  modulo: __webpack_require__(262),\n\t  multiply: __webpack_require__(109),\n\t  nAry: __webpack_require__(43),\n\t  negate: __webpack_require__(263),\n\t  none: __webpack_require__(264),\n\t  not: __webpack_require__(110),\n\t  nth: __webpack_require__(26),\n\t  nthArg: __webpack_require__(265),\n\t  o: __webpack_require__(266),\n\t  objOf: __webpack_require__(111),\n\t  of: __webpack_require__(267),\n\t  omit: __webpack_require__(268),\n\t  once: __webpack_require__(269),\n\t  or: __webpack_require__(112),\n\t  over: __webpack_require__(113),\n\t  pair: __webpack_require__(270),\n\t  partial: __webpack_require__(271),\n\t  partialRight: __webpack_require__(272),\n\t  partition: __webpack_require__(273),\n\t  path: __webpack_require__(27),\n\t  pathEq: __webpack_require__(274),\n\t  pathOr: __webpack_require__(275),\n\t  pathSatisfies: __webpack_require__(276),\n\t  pick: __webpack_require__(277),\n\t  pickAll: __webpack_require__(114),\n\t  pickBy: __webpack_require__(278),\n\t  pipe: __webpack_require__(115),\n\t  pipeK: __webpack_require__(279),\n\t  pipeP: __webpack_require__(116),\n\t  pluck: __webpack_require__(28),\n\t  prepend: __webpack_require__(117),\n\t  product: __webpack_require__(280),\n\t  project: __webpack_require__(281),\n\t  prop: __webpack_require__(60),\n\t  propEq: __webpack_require__(282),\n\t  propIs: __webpack_require__(283),\n\t  propOr: __webpack_require__(284),\n\t  propSatisfies: __webpack_require__(285),\n\t  props: __webpack_require__(286),\n\t  range: __webpack_require__(287),\n\t  reduce: __webpack_require__(14),\n\t  reduceBy: __webpack_require__(44),\n\t  reduceRight: __webpack_require__(118),\n\t  reduceWhile: __webpack_require__(288),\n\t  reduced: __webpack_require__(289),\n\t  reject: __webpack_require__(45),\n\t  remove: __webpack_require__(119),\n\t  repeat: __webpack_require__(290),\n\t  replace: __webpack_require__(291),\n\t  reverse: __webpack_require__(46),\n\t  scan: __webpack_require__(292),\n\t  sequence: __webpack_require__(120),\n\t  set: __webpack_require__(293),\n\t  slice: __webpack_require__(19),\n\t  sort: __webpack_require__(294),\n\t  sortBy: __webpack_require__(295),\n\t  sortWith: __webpack_require__(296),\n\t  split: __webpack_require__(297),\n\t  splitAt: __webpack_require__(298),\n\t  splitEvery: __webpack_require__(299),\n\t  splitWhen: __webpack_require__(300),\n\t  startsWith: __webpack_require__(301),\n\t  subtract: __webpack_require__(302),\n\t  sum: __webpack_require__(121),\n\t  symmetricDifference: __webpack_require__(303),\n\t  symmetricDifferenceWith: __webpack_require__(304),\n\t  tail: __webpack_require__(61),\n\t  take: __webpack_require__(62),\n\t  takeLast: __webpack_require__(122),\n\t  takeLastWhile: __webpack_require__(305),\n\t  takeWhile: __webpack_require__(306),\n\t  tap: __webpack_require__(307),\n\t  test: __webpack_require__(308),\n\t  times: __webpack_require__(123),\n\t  toLower: __webpack_require__(309),\n\t  toPairs: __webpack_require__(310),\n\t  toPairsIn: __webpack_require__(311),\n\t  toString: __webpack_require__(29),\n\t  toUpper: __webpack_require__(312),\n\t  transduce: __webpack_require__(313),\n\t  transpose: __webpack_require__(314),\n\t  traverse: __webpack_require__(315),\n\t  trim: __webpack_require__(316),\n\t  tryCatch: __webpack_require__(317),\n\t  type: __webpack_require__(63),\n\t  unapply: __webpack_require__(318),\n\t  unary: __webpack_require__(319),\n\t  uncurryN: __webpack_require__(320),\n\t  unfold: __webpack_require__(321),\n\t  union: __webpack_require__(322),\n\t  unionWith: __webpack_require__(323),\n\t  uniq: __webpack_require__(64),\n\t  uniqBy: __webpack_require__(124),\n\t  uniqWith: __webpack_require__(65),\n\t  unless: __webpack_require__(324),\n\t  unnest: __webpack_require__(325),\n\t  until: __webpack_require__(326),\n\t  update: __webpack_require__(66),\n\t  useWith: __webpack_require__(125),\n\t  values: __webpack_require__(126),\n\t  valuesIn: __webpack_require__(327),\n\t  view: __webpack_require__(328),\n\t  when: __webpack_require__(329),\n\t  where: __webpack_require__(127),\n\t  whereEq: __webpack_require__(330),\n\t  without: __webpack_require__(331),\n\t  xprod: __webpack_require__(332),\n\t  zip: __webpack_require__(333),\n\t  zipObj: __webpack_require__(334),\n\t  zipWith: __webpack_require__(335)\n\t};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Tests whether or not an object is an array.\n\t *\n\t * @private\n\t * @param {*} val The object to test.\n\t * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n\t * @example\n\t *\n\t *      _isArray([]); //=> true\n\t *      _isArray(null); //=> false\n\t *      _isArray({}); //=> false\n\t */\n\tmodule.exports = Array.isArray || function _isArray(val) {\n\t  return (val != null &&\n\t          val.length >= 0 &&\n\t          Object.prototype.toString.call(val) === '[object Array]');\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _reduced(x) {\n\t  return x && x['@@transducer/reduced'] ? x :\n\t    {\n\t      '@@transducer/value': x,\n\t      '@@transducer/reduced': true\n\t    };\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _indexOf = __webpack_require__(94);\n\t\n\t\n\tmodule.exports = function _contains(a, list) {\n\t  return _indexOf(list, a, 0) >= 0;\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _checkForMethod = __webpack_require__(23);\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Returns the elements of the given list or string (or object with a `slice`\n\t * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n\t *\n\t * Dispatches to the `slice` method of the third argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.4\n\t * @category List\n\t * @sig Number -> Number -> [a] -> [a]\n\t * @sig Number -> Number -> String -> String\n\t * @param {Number} fromIndex The start index (inclusive).\n\t * @param {Number} toIndex The end index (exclusive).\n\t * @param {*} list\n\t * @return {*}\n\t * @example\n\t *\n\t *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n\t *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n\t *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n\t *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n\t *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n\t */\n\tmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n\t  return Array.prototype.slice.call(list, fromIndex, toIndex);\n\t}));\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.initialScore = exports.O = exports.X = exports._ = exports.emptyValue = exports.boardLength = exports.boardIndexes = undefined;\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tvar emptyValue = 0;\n\t\n\t/**\n\t * Empty value alias\n\t */\n\tvar _ = emptyValue;\n\t\n\tvar X = 1;\n\t\n\tvar O = 2;\n\t\n\t/**\n\t * Use it to map the positions\n\t */\n\tvar boardIndexes = (0, _ramda.range)(0, 9);\n\tvar boardLength = (0, _ramda.length)(boardIndexes);\n\t\n\tvar initialScore = {\n\t  x: 0,\n\t  o: 0\n\t};\n\t\n\texports.boardIndexes = boardIndexes;\n\texports.boardLength = boardLength;\n\texports.emptyValue = emptyValue;\n\texports._ = _;\n\texports.X = X;\n\texports.O = O;\n\texports.initialScore = initialScore;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Returns a function that always returns the given value. Note that for\n\t * non-primitives the value returned is a reference to the original value.\n\t *\n\t * This function is known as `const`, `constant`, or `K` (for K combinator) in\n\t * other languages and libraries.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig a -> (* -> a)\n\t * @param {*} val The value to wrap in a function\n\t * @return {Function} A Function :: * -> val.\n\t * @example\n\t *\n\t *      var t = R.always('Tee');\n\t *      t(); //=> 'Tee'\n\t */\n\tmodule.exports = _curry1(function always(val) {\n\t  return function() {\n\t    return val;\n\t  };\n\t});\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns the larger of its two arguments.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> a\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {*}\n\t * @see R.maxBy, R.min\n\t * @example\n\t *\n\t *      R.max(789, 123); //=> 789\n\t *      R.max('a', 'b'); //=> 'b'\n\t */\n\tmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArray = __webpack_require__(16);\n\t\n\t\n\t/**\n\t * This checks whether a function has a [methodname] function. If it isn't an\n\t * array it will execute that function otherwise it will default to the ramda\n\t * implementation.\n\t *\n\t * @private\n\t * @param {Function} fn ramda implemtation\n\t * @param {String} methodname property to check for a custom implementation\n\t * @return {Object} Whatever the return value of the method is.\n\t */\n\tmodule.exports = function _checkForMethod(methodname, fn) {\n\t  return function() {\n\t    var length = arguments.length;\n\t    if (length === 0) {\n\t      return fn();\n\t    }\n\t    var obj = arguments[length - 1];\n\t    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n\t      fn.apply(this, arguments) :\n\t      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n\t  };\n\t};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isString(x) {\n\t  return Object.prototype.toString.call(x) === '[object String]';\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isFunction = __webpack_require__(37);\n\tvar curryN = __webpack_require__(6);\n\tvar toString = __webpack_require__(29);\n\t\n\t\n\t/**\n\t * Turns a named method with a specified arity into a function that can be\n\t * called directly supplied with arguments and a target object.\n\t *\n\t * The returned function is curried and accepts `arity + 1` parameters where\n\t * the final parameter is the target object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n\t * @param {Number} arity Number of arguments the returned function should take\n\t *        before the target object.\n\t * @param {String} method Name of the method to call.\n\t * @return {Function} A new curried function.\n\t * @see R.construct\n\t * @example\n\t *\n\t *      var sliceFrom = R.invoker(1, 'slice');\n\t *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n\t *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n\t *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n\t * @symb R.invoker(0, 'method')(o) = o['method']()\n\t * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n\t * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n\t */\n\tmodule.exports = _curry2(function invoker(arity, method) {\n\t  return curryN(arity + 1, function() {\n\t    var target = arguments[arity];\n\t    if (target != null && _isFunction(target[method])) {\n\t      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n\t    }\n\t    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n\t  });\n\t});\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isString = __webpack_require__(24);\n\t\n\t\n\t/**\n\t * Returns the nth element of the given list or string. If n is negative the\n\t * element at index length + n is returned.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Number -> [a] -> a | Undefined\n\t * @sig Number -> String -> String\n\t * @param {Number} offset\n\t * @param {*} list\n\t * @return {*}\n\t * @example\n\t *\n\t *      var list = ['foo', 'bar', 'baz', 'quux'];\n\t *      R.nth(1, list); //=> 'bar'\n\t *      R.nth(-1, list); //=> 'quux'\n\t *      R.nth(-99, list); //=> undefined\n\t *\n\t *      R.nth(2, 'abc'); //=> 'c'\n\t *      R.nth(3, 'abc'); //=> ''\n\t * @symb R.nth(-1, [a, b, c]) = c\n\t * @symb R.nth(0, [a, b, c]) = a\n\t * @symb R.nth(1, [a, b, c]) = b\n\t */\n\tmodule.exports = _curry2(function nth(offset, list) {\n\t  var idx = offset < 0 ? list.length + offset : offset;\n\t  return _isString(list) ? list.charAt(idx) : list[idx];\n\t});\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Retrieve the value at a given path.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category Object\n\t * @typedefn Idx = String | Int\n\t * @sig [Idx] -> {a} -> a | Undefined\n\t * @param {Array} path The path to use.\n\t * @param {Object} obj The object to retrieve the nested property from.\n\t * @return {*} The data at `path`.\n\t * @see R.prop\n\t * @example\n\t *\n\t *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n\t *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n\t */\n\tmodule.exports = _curry2(function path(paths, obj) {\n\t  var val = obj;\n\t  var idx = 0;\n\t  while (idx < paths.length) {\n\t    if (val == null) {\n\t      return;\n\t    }\n\t    val = val[paths[idx]];\n\t    idx += 1;\n\t  }\n\t  return val;\n\t});\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar map = __webpack_require__(8);\n\tvar prop = __webpack_require__(60);\n\t\n\t\n\t/**\n\t * Returns a new list by plucking the same named property off all objects in\n\t * the list supplied.\n\t *\n\t * `pluck` will work on\n\t * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n\t * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Functor f => k -> f {k: v} -> f v\n\t * @param {Number|String} key The key name to pluck off of each object.\n\t * @param {Array} f The array or functor to consider.\n\t * @return {Array} The list of values for the given key.\n\t * @see R.props\n\t * @example\n\t *\n\t *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n\t *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n\t *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n\t * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n\t * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n\t */\n\tmodule.exports = _curry2(function pluck(p, list) {\n\t  return map(prop(p), list);\n\t});\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _toString = __webpack_require__(214);\n\t\n\t\n\t/**\n\t * Returns the string representation of the given value. `eval`'ing the output\n\t * should result in a value equivalent to the input value. Many of the built-in\n\t * `toString` methods do not satisfy this requirement.\n\t *\n\t * If the given value is an `[object Object]` with a `toString` method other\n\t * than `Object.prototype.toString`, this method is invoked with no arguments\n\t * to produce the return value. This means user-defined constructor functions\n\t * can provide a suitable `toString` method. For example:\n\t *\n\t *     function Point(x, y) {\n\t *       this.x = x;\n\t *       this.y = y;\n\t *     }\n\t *\n\t *     Point.prototype.toString = function() {\n\t *       return 'new Point(' + this.x + ', ' + this.y + ')';\n\t *     };\n\t *\n\t *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category String\n\t * @sig * -> String\n\t * @param {*} val\n\t * @return {String}\n\t * @example\n\t *\n\t *      R.toString(42); //=> '42'\n\t *      R.toString('abc'); //=> '\"abc\"'\n\t *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n\t *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n\t *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n\t */\n\tmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Adds two values.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @return {Number}\n\t * @see R.subtract\n\t * @example\n\t *\n\t *      R.add(2, 3);       //=>  5\n\t *      R.add(7)(10);      //=> 17\n\t */\n\tmodule.exports = _curry2(function add(a, b) {\n\t  return Number(a) + Number(b);\n\t});\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Makes a shallow clone of an object, setting or overriding the specified\n\t * property with the given value. Note that this copies and flattens prototype\n\t * properties onto the new object as well. All non-primitive properties are\n\t * copied by reference.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Object\n\t * @sig String -> a -> {k: v} -> {k: v}\n\t * @param {String} prop The property name to set\n\t * @param {*} val The new value\n\t * @param {Object} obj The object to clone\n\t * @return {Object} A new object equivalent to the original except for the changed property.\n\t * @see R.dissoc\n\t * @example\n\t *\n\t *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n\t */\n\tmodule.exports = _curry3(function assoc(prop, val, obj) {\n\t  var result = {};\n\t  for (var p in obj) {\n\t    result[p] = obj[p];\n\t  }\n\t  result[prop] = val;\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Returns a curried equivalent of the provided function. The curried function\n\t * has two unusual capabilities. First, its arguments needn't be provided one\n\t * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n\t * following are equivalent:\n\t *\n\t *   - `g(1)(2)(3)`\n\t *   - `g(1)(2, 3)`\n\t *   - `g(1, 2)(3)`\n\t *   - `g(1, 2, 3)`\n\t *\n\t * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n\t * \"gaps\", allowing partial application of any combination of arguments,\n\t * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n\t * the following are equivalent:\n\t *\n\t *   - `g(1, 2, 3)`\n\t *   - `g(_, 2, 3)(1)`\n\t *   - `g(_, _, 3)(1)(2)`\n\t *   - `g(_, _, 3)(1, 2)`\n\t *   - `g(_, 2)(1)(3)`\n\t *   - `g(_, 2)(1, 3)`\n\t *   - `g(_, 2)(_, 3)(1)`\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (* -> a) -> (* -> a)\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} A new, curried function.\n\t * @see R.curryN\n\t * @example\n\t *\n\t *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n\t *\n\t *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n\t *      var f = curriedAddFourNumbers(1, 2);\n\t *      var g = f(3);\n\t *      g(4); //=> 10\n\t */\n\tmodule.exports = _curry1(function curry(fn) {\n\t  return curryN(fn.length, fn);\n\t});\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar curry = __webpack_require__(32);\n\t\n\t\n\t/**\n\t * Returns a new function much like the supplied one, except that the first two\n\t * arguments' order is reversed.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n\t * @param {Function} fn The function to invoke with its first two parameters reversed.\n\t * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n\t * @example\n\t *\n\t *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n\t *\n\t *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n\t *\n\t *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n\t * @symb R.flip(f)(a, b, c) = f(b, a, c)\n\t */\n\tmodule.exports = _curry1(function flip(fn) {\n\t  return curry(function(a, b) {\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    args[0] = b;\n\t    args[1] = a;\n\t    return fn.apply(this, args);\n\t  });\n\t});\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _containsWith(pred, x, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t\n\t  while (idx < len) {\n\t    if (pred(x, list[idx])) {\n\t      return true;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return false;\n\t};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _isPlaceholder = __webpack_require__(38);\n\t\n\t\n\t/**\n\t * Internal curryN function.\n\t *\n\t * @private\n\t * @category Function\n\t * @param {Number} length The arity of the curried function.\n\t * @param {Array} received An array of arguments received thus far.\n\t * @param {Function} fn The function to curry.\n\t * @return {Function} The curried function.\n\t */\n\tmodule.exports = function _curryN(length, received, fn) {\n\t  return function() {\n\t    var combined = [];\n\t    var argsIdx = 0;\n\t    var left = length;\n\t    var combinedIdx = 0;\n\t    while (combinedIdx < received.length || argsIdx < arguments.length) {\n\t      var result;\n\t      if (combinedIdx < received.length &&\n\t          (!_isPlaceholder(received[combinedIdx]) ||\n\t           argsIdx >= arguments.length)) {\n\t        result = received[combinedIdx];\n\t      } else {\n\t        result = arguments[argsIdx];\n\t        argsIdx += 1;\n\t      }\n\t      combined[combinedIdx] = result;\n\t      if (!_isPlaceholder(result)) {\n\t        left -= 1;\n\t      }\n\t      combinedIdx += 1;\n\t    }\n\t    return left <= 0 ? fn.apply(this, combined)\n\t                     : _arity(left, _curryN(length, combined, fn));\n\t  };\n\t};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _isArray = __webpack_require__(16);\n\tvar _isString = __webpack_require__(24);\n\t\n\t\n\t/**\n\t * Tests whether or not an object is similar to an array.\n\t *\n\t * @private\n\t * @category Type\n\t * @category List\n\t * @sig * -> Boolean\n\t * @param {*} x The object to test.\n\t * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n\t * @example\n\t *\n\t *      _isArrayLike([]); //=> true\n\t *      _isArrayLike(true); //=> false\n\t *      _isArrayLike({}); //=> false\n\t *      _isArrayLike({length: 10}); //=> false\n\t *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n\t */\n\tmodule.exports = _curry1(function isArrayLike(x) {\n\t  if (_isArray(x)) { return true; }\n\t  if (!x) { return false; }\n\t  if (typeof x !== 'object') { return false; }\n\t  if (_isString(x)) { return false; }\n\t  if (x.nodeType === 1) { return !!x.length; }\n\t  if (x.length === 0) { return true; }\n\t  if (x.length > 0) {\n\t    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n\t  }\n\t  return false;\n\t});\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isFunction(x) {\n\t  return Object.prototype.toString.call(x) === '[object Function]';\n\t};\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isPlaceholder(a) {\n\t  return a != null &&\n\t         typeof a === 'object' &&\n\t         a['@@functional/placeholder'] === true;\n\t};\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _map(fn, functor) {\n\t  var idx = 0;\n\t  var len = functor.length;\n\t  var result = Array(len);\n\t  while (idx < len) {\n\t    result[idx] = fn(functor[idx]);\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Returns a lens for the given getter and setter functions. The getter \"gets\"\n\t * the value of the focus; the setter \"sets\" the value of the focus. The setter\n\t * should not mutate the data structure.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n\t * @param {Function} getter\n\t * @param {Function} setter\n\t * @return {Lens}\n\t * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n\t * @example\n\t *\n\t *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n\t *\n\t *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t */\n\tmodule.exports = _curry2(function lens(getter, setter) {\n\t  return function(toFunctorFn) {\n\t    return function(target) {\n\t      return map(\n\t        function(focus) {\n\t          return setter(focus, target);\n\t        },\n\t        toFunctorFn(getter(target))\n\t      );\n\t    };\n\t  };\n\t});\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar liftN = __webpack_require__(106);\n\t\n\t\n\t/**\n\t * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n\t * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Function\n\t * @sig (*... -> *) -> ([*]... -> [*])\n\t * @param {Function} fn The function to lift into higher context\n\t * @return {Function} The lifted function.\n\t * @see R.liftN\n\t * @example\n\t *\n\t *      var madd3 = R.lift((a, b, c) => a + b + c);\n\t *\n\t *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t *\n\t *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n\t *\n\t *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n\t */\n\tmodule.exports = _curry1(function lift(fn) {\n\t  return liftN(fn.length, fn);\n\t});\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar _isObject = __webpack_require__(57);\n\tvar mergeWithKey = __webpack_require__(59);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the two provided objects.\n\t * If a key exists in both objects:\n\t * - and both associated values are also objects then the values will be\n\t *   recursively merged.\n\t * - otherwise the provided function is applied to the key and associated values\n\t *   using the resulting value as the new value associated with the key.\n\t * If a key only exists in one object, the value will be associated with the key\n\t * of the resulting object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Object\n\t * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n\t * @param {Function} fn\n\t * @param {Object} lObj\n\t * @param {Object} rObj\n\t * @return {Object}\n\t * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n\t * @example\n\t *\n\t *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n\t *      R.mergeDeepWithKey(concatValues,\n\t *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n\t *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n\t *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n\t */\n\tmodule.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n\t  return mergeWithKey(function(k, lVal, rVal) {\n\t    if (_isObject(lVal) && _isObject(rVal)) {\n\t      return mergeDeepWithKey(fn, lVal, rVal);\n\t    } else {\n\t      return fn(k, lVal, rVal);\n\t    }\n\t  }, lObj, rObj);\n\t});\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Wraps a function of any arity (including nullary) in a function that accepts\n\t * exactly `n` parameters. Any extraneous parameters will not be passed to the\n\t * supplied function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig Number -> (* -> a) -> (* -> a)\n\t * @param {Number} n The desired arity of the new function.\n\t * @param {Function} fn The function to wrap.\n\t * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t *         arity `n`.\n\t * @see R.binary, R.unary\n\t * @example\n\t *\n\t *      var takesTwoArgs = (a, b) => [a, b];\n\t *\n\t *      takesTwoArgs.length; //=> 2\n\t *      takesTwoArgs(1, 2); //=> [1, 2]\n\t *\n\t *      var takesOneArg = R.nAry(1, takesTwoArgs);\n\t *      takesOneArg.length; //=> 1\n\t *      // Only `n` arguments are passed to the wrapped function\n\t *      takesOneArg(1, 2); //=> [1, undefined]\n\t * @symb R.nAry(0, f)(a, b) = f()\n\t * @symb R.nAry(1, f)(a, b) = f(a)\n\t * @symb R.nAry(2, f)(a, b) = f(a, b)\n\t */\n\tmodule.exports = _curry2(function nAry(n, fn) {\n\t  switch (n) {\n\t    case 0: return function() {return fn.call(this);};\n\t    case 1: return function(a0) {return fn.call(this, a0);};\n\t    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n\t    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n\t    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n\t    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n\t    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n\t    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n\t    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n\t    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n\t    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n\t    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n\t  }\n\t});\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curryN = __webpack_require__(35);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _has = __webpack_require__(7);\n\tvar _reduce = __webpack_require__(10);\n\tvar _xreduceBy = __webpack_require__(228);\n\t\n\t\n\t/**\n\t * Groups the elements of the list according to the result of calling\n\t * the String-returning function `keyFn` on each element and reduces the elements\n\t * of each group to a single value via the reducer function `valueFn`.\n\t *\n\t * This function is basically a more general [`groupBy`](#groupBy) function.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.20.0\n\t * @category List\n\t * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n\t * @param {Function} valueFn The function that reduces the elements of each group to a single\n\t *        value. Receives two values, accumulator for a particular group and the current element.\n\t * @param {*} acc The (initial) accumulator value for each group.\n\t * @param {Function} keyFn The function that maps the list's element into a key.\n\t * @param {Array} list The array to group.\n\t * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n\t *         `valueFn` for elements which produced that key when passed to `keyFn`.\n\t * @see R.groupBy, R.reduce\n\t * @example\n\t *\n\t *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n\t *      var namesByGrade = reduceToNamesBy(function(student) {\n\t *        var score = student.score;\n\t *        return score < 65 ? 'F' :\n\t *               score < 70 ? 'D' :\n\t *               score < 80 ? 'C' :\n\t *               score < 90 ? 'B' : 'A';\n\t *      });\n\t *      var students = [{name: 'Lucy', score: 92},\n\t *                      {name: 'Drew', score: 85},\n\t *                      // ...\n\t *                      {name: 'Bart', score: 62}];\n\t *      namesByGrade(students);\n\t *      // {\n\t *      //   'A': ['Lucy'],\n\t *      //   'B': ['Drew']\n\t *      //   // ...,\n\t *      //   'F': ['Bart']\n\t *      // }\n\t */\n\tmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n\t  function reduceBy(valueFn, valueAcc, keyFn, list) {\n\t    return _reduce(function(acc, elt) {\n\t      var key = keyFn(elt);\n\t      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n\t      return acc;\n\t    }, {}, list);\n\t  }));\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _complement = __webpack_require__(92);\n\tvar _curry2 = __webpack_require__(1);\n\tvar filter = __webpack_require__(51);\n\t\n\t\n\t/**\n\t * The complement of [`filter`](#filter).\n\t *\n\t * Acts as a transducer if a transformer is given in list position. Filterable\n\t * objects include plain objects or any object that has a filter method such\n\t * as `Array`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t * @param {Function} pred\n\t * @param {Array} filterable\n\t * @return {Array}\n\t * @see R.filter, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var isOdd = (n) => n % 2 === 1;\n\t *\n\t *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n\t *\n\t *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t */\n\tmodule.exports = _curry2(function reject(pred, filterable) {\n\t  return filter(_complement(pred), filterable);\n\t});\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _isString = __webpack_require__(24);\n\t\n\t\n\t/**\n\t * Returns a new list or string with the elements or characters in reverse\n\t * order.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [a]\n\t * @sig String -> String\n\t * @param {Array|String} list\n\t * @return {Array|String}\n\t * @example\n\t *\n\t *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n\t *      R.reverse([1, 2]);     //=> [2, 1]\n\t *      R.reverse([1]);        //=> [1]\n\t *      R.reverse([]);         //=> []\n\t *\n\t *      R.reverse('abc');      //=> 'cba'\n\t *      R.reverse('ab');       //=> 'ba'\n\t *      R.reverse('a');        //=> 'a'\n\t *      R.reverse('');         //=> ''\n\t */\n\tmodule.exports = _curry1(function reverse(list) {\n\t  return _isString(list) ? list.split('').reverse().join('') :\n\t                           Array.prototype.slice.call(list, 0).reverse();\n\t});\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduce = __webpack_require__(10);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * ap applies a list of functions to a list of values.\n\t *\n\t * Dispatches to the `ap` method of the second argument, if present. Also\n\t * treats curried functions as applicatives.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category Function\n\t * @sig [a -> b] -> [a] -> [b]\n\t * @sig Apply f => f (a -> b) -> f a -> f b\n\t * @param {*} applyF\n\t * @param {*} applyX\n\t * @return {*}\n\t * @example\n\t *\n\t *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n\t *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n\t * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n\t */\n\tmodule.exports = _curry2(function ap(applyF, applyX) {\n\t  return (\n\t    typeof applyX['fantasy-land/ap'] === 'function' ?\n\t      applyX['fantasy-land/ap'](applyF) :\n\t    typeof applyF.ap === 'function' ?\n\t      applyF.ap(applyX) :\n\t    typeof applyF === 'function' ?\n\t      function(x) { return applyF(x)(applyX(x)); } :\n\t    // else\n\t      _reduce(function(acc, f) { return _concat(acc, map(f, applyX)); }, [], applyF)\n\t  );\n\t});\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _makeFlat = __webpack_require__(97);\n\tvar _xchain = __webpack_require__(217);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * `chain` maps a function over a list and concatenates the results. `chain`\n\t * is also known as `flatMap` in some libraries\n\t *\n\t * Dispatches to the `chain` method of the second argument, if present,\n\t * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category List\n\t * @sig Chain m => (a -> m b) -> m a -> m b\n\t * @param {Function} fn The function to map with\n\t * @param {Array} list The list to map over\n\t * @return {Array} The result of flat-mapping `list` with `fn`\n\t * @example\n\t *\n\t *      var duplicate = n => [n, n];\n\t *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n\t *\n\t *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n\t */\n\tmodule.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n\t  if (typeof monad === 'function') {\n\t    return function(x) { return fn(monad(x))(x); };\n\t  }\n\t  return _makeFlat(false)(map(fn, monad));\n\t}));\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar pipe = __webpack_require__(115);\n\tvar reverse = __webpack_require__(46);\n\t\n\t\n\t/**\n\t * Performs right-to-left function composition. The rightmost function may have\n\t * any arity; the remaining functions must be unary.\n\t *\n\t * **Note:** The result of compose is not automatically curried.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n\t * @param {...Function} ...functions The functions to compose\n\t * @return {Function}\n\t * @see R.pipe\n\t * @example\n\t *\n\t *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n\t *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n\t *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n\t *\n\t *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n\t *\n\t * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n\t */\n\tmodule.exports = function compose() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('compose requires at least one argument');\n\t  }\n\t  return pipe.apply(this, reverse(arguments));\n\t};\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isArray = __webpack_require__(16);\n\tvar _isFunction = __webpack_require__(37);\n\tvar _isString = __webpack_require__(24);\n\tvar toString = __webpack_require__(29);\n\t\n\t\n\t/**\n\t * Returns the result of concatenating the given lists or strings.\n\t *\n\t * Note: `R.concat` expects both arguments to be of the same type,\n\t * unlike the native `Array.prototype.concat` method. It will throw\n\t * an error if you `concat` an Array with a non-Array value.\n\t *\n\t * Dispatches to the `concat` method of the first argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [a] -> [a]\n\t * @sig String -> String -> String\n\t * @param {Array|String} firstList The first list\n\t * @param {Array|String} secondList The second list\n\t * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n\t * `secondList`.\n\t *\n\t * @example\n\t *\n\t *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n\t *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t *      R.concat([], []); //=> []\n\t */\n\tmodule.exports = _curry2(function concat(a, b) {\n\t  if (_isArray(a)) {\n\t    if (_isArray(b)) {\n\t      return a.concat(b);\n\t    }\n\t    throw new TypeError(toString(b) + ' is not an array');\n\t  }\n\t  if (_isString(a)) {\n\t    if (_isString(b)) {\n\t      return a + b;\n\t    }\n\t    throw new TypeError(toString(b) + ' is not a string');\n\t  }\n\t  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n\t    return a['fantasy-land/concat'](b);\n\t  }\n\t  if (a != null && _isFunction(a.concat)) {\n\t    return a.concat(b);\n\t  }\n\t  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n\t});\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _filter = __webpack_require__(54);\n\tvar _isObject = __webpack_require__(57);\n\tvar _reduce = __webpack_require__(10);\n\tvar _xfilter = __webpack_require__(222);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Takes a predicate and a `Filterable`, and returns a new filterable of the\n\t * same type containing the members of the given filterable which satisfy the\n\t * given predicate. Filterable objects include plain objects or any object\n\t * that has a filter method such as `Array`.\n\t *\n\t * Dispatches to the `filter` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t * @param {Function} pred\n\t * @param {Array} filterable\n\t * @return {Array} Filterable\n\t * @see R.reject, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var isEven = n => n % 2 === 0;\n\t *\n\t *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n\t *\n\t *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t */\n\tmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n\t  return (\n\t    _isObject(filterable) ?\n\t      _reduce(function(acc, key) {\n\t        if (pred(filterable[key])) {\n\t          acc[key] = filterable[key];\n\t        }\n\t        return acc;\n\t      }, {}, keys(filterable)) :\n\t    // else\n\t      _filter(pred, filterable)\n\t  );\n\t}));\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _identity = __webpack_require__(55);\n\t\n\t\n\t/**\n\t * A function that does nothing but return the parameter supplied to it. Good\n\t * as a default or placeholder function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig a -> a\n\t * @param {*} x The value to return.\n\t * @return {*} The input value, `x`.\n\t * @example\n\t *\n\t *      R.identity(1); //=> 1\n\t *\n\t *      var obj = {};\n\t *      R.identity(obj) === obj; //=> true\n\t * @symb R.identity(a) = a\n\t */\n\tmodule.exports = _curry1(_identity);\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _objectAssign = __webpack_require__(207);\n\t\n\tmodule.exports =\n\t  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _filter(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var result = [];\n\t\n\t  while (idx < len) {\n\t    if (fn(list[idx])) {\n\t      result[result.length] = list[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t};\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _identity(x) { return x; };\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Determine if the passed argument is an integer.\n\t *\n\t * @private\n\t * @param {*} n\n\t * @category Type\n\t * @return {Boolean}\n\t */\n\tmodule.exports = Number.isInteger || function _isInteger(n) {\n\t  return (n << 0) === n;\n\t};\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isObject(x) {\n\t  return Object.prototype.toString.call(x) === '[object Object]';\n\t};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isTransformer(obj) {\n\t  return typeof obj['@@transducer/step'] === 'function';\n\t};\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the two provided objects. If\n\t * a key exists in both objects, the provided function is applied to the key\n\t * and the values associated with the key in each object, with the result being\n\t * used as the value associated with the key in the returned object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Object\n\t * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n\t * @param {Function} fn\n\t * @param {Object} l\n\t * @param {Object} r\n\t * @return {Object}\n\t * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n\t * @example\n\t *\n\t *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n\t *      R.mergeWithKey(concatValues,\n\t *                     { a: true, thing: 'foo', values: [10, 20] },\n\t *                     { b: true, thing: 'bar', values: [15, 35] });\n\t *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n\t * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n\t */\n\tmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n\t  var result = {};\n\t  var k;\n\t\n\t  for (k in l) {\n\t    if (_has(k, l)) {\n\t      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n\t    }\n\t  }\n\t\n\t  for (k in r) {\n\t    if (_has(k, r) && !(_has(k, result))) {\n\t      result[k] = r[k];\n\t    }\n\t  }\n\t\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a function that when supplied an object returns the indicated\n\t * property of that object, if it exists.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig s -> {s: a} -> a | Undefined\n\t * @param {String} p The property name\n\t * @param {Object} obj The object to query\n\t * @return {*} The value at `obj.p`.\n\t * @see R.path\n\t * @example\n\t *\n\t *      R.prop('x', {x: 100}); //=> 100\n\t *      R.prop('x', {}); //=> undefined\n\t */\n\tmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _checkForMethod = __webpack_require__(23);\n\tvar _curry1 = __webpack_require__(2);\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Returns all but the first element of the given list or string (or object\n\t * with a `tail` method).\n\t *\n\t * Dispatches to the `slice` method of the first argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [a]\n\t * @sig String -> String\n\t * @param {*} list\n\t * @return {*}\n\t * @see R.head, R.init, R.last\n\t * @example\n\t *\n\t *      R.tail([1, 2, 3]);  //=> [2, 3]\n\t *      R.tail([1, 2]);     //=> [2]\n\t *      R.tail([1]);        //=> []\n\t *      R.tail([]);         //=> []\n\t *\n\t *      R.tail('abc');  //=> 'bc'\n\t *      R.tail('ab');   //=> 'b'\n\t *      R.tail('a');    //=> ''\n\t *      R.tail('');     //=> ''\n\t */\n\tmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xtake = __webpack_require__(229);\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Returns the first `n` elements of the given list, string, or\n\t * transducer/transformer (or object with a `take` method).\n\t *\n\t * Dispatches to the `take` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Number -> [a] -> [a]\n\t * @sig Number -> String -> String\n\t * @param {Number} n\n\t * @param {*} list\n\t * @return {*}\n\t * @see R.drop\n\t * @example\n\t *\n\t *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n\t *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t *      R.take(3, 'ramda');               //=> 'ram'\n\t *\n\t *      var personnel = [\n\t *        'Dave Brubeck',\n\t *        'Paul Desmond',\n\t *        'Eugene Wright',\n\t *        'Joe Morello',\n\t *        'Gerry Mulligan',\n\t *        'Bob Bates',\n\t *        'Joe Dodge',\n\t *        'Ron Crotty'\n\t *      ];\n\t *\n\t *      var takeFive = R.take(5);\n\t *      takeFive(personnel);\n\t *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n\t * @symb R.take(-1, [a, b]) = [a, b]\n\t * @symb R.take(0, [a, b]) = []\n\t * @symb R.take(1, [a, b]) = [a]\n\t * @symb R.take(2, [a, b]) = [a, b]\n\t */\n\tmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n\t  return slice(0, n < 0 ? Infinity : n, xs);\n\t}));\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Gives a single-word string description of the (native) type of a value,\n\t * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n\t * attempt to distinguish user Object types any further, reporting them all as\n\t * 'Object'.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Type\n\t * @sig (* -> {*}) -> String\n\t * @param {*} val The value to test\n\t * @return {String}\n\t * @example\n\t *\n\t *      R.type({}); //=> \"Object\"\n\t *      R.type(1); //=> \"Number\"\n\t *      R.type(false); //=> \"Boolean\"\n\t *      R.type('s'); //=> \"String\"\n\t *      R.type(null); //=> \"Null\"\n\t *      R.type([]); //=> \"Array\"\n\t *      R.type(/[A-z]/); //=> \"RegExp\"\n\t *      R.type(() => {}); //=> \"Function\"\n\t */\n\tmodule.exports = _curry1(function type(val) {\n\t  return val === null      ? 'Null'      :\n\t         val === undefined ? 'Undefined' :\n\t         Object.prototype.toString.call(val).slice(8, -1);\n\t});\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar identity = __webpack_require__(52);\n\tvar uniqBy = __webpack_require__(124);\n\t\n\t\n\t/**\n\t * Returns a new list containing only one copy of each element in the original\n\t * list. [`R.equals`](#equals) is used to determine equality.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [a]\n\t * @param {Array} list The array to consider.\n\t * @return {Array} The list of unique items.\n\t * @example\n\t *\n\t *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n\t *      R.uniq([1, '1']);     //=> [1, '1']\n\t *      R.uniq([[42], [42]]); //=> [[42]]\n\t */\n\tmodule.exports = uniqBy(identity);\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _containsWith = __webpack_require__(34);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new list containing only one copy of each element in the original\n\t * list, based upon the value returned by applying the supplied predicate to\n\t * two list elements. Prefers the first item if two items compare equal based\n\t * on the predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category List\n\t * @sig (a, a -> Boolean) -> [a] -> [a]\n\t * @param {Function} pred A predicate used to test whether two items are equal.\n\t * @param {Array} list The array to consider.\n\t * @return {Array} The list of unique items.\n\t * @example\n\t *\n\t *      var strEq = R.eqBy(String);\n\t *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n\t *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n\t *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n\t *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n\t */\n\tmodule.exports = _curry2(function uniqWith(pred, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var result = [];\n\t  var item;\n\t  while (idx < len) {\n\t    item = list[idx];\n\t    if (!_containsWith(pred, item, result)) {\n\t      result[result.length] = item;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar adjust = __webpack_require__(73);\n\tvar always = __webpack_require__(21);\n\t\n\t\n\t/**\n\t * Returns a new copy of the array with the element at the provided index\n\t * replaced with the given value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category List\n\t * @sig Number -> a -> [a] -> [a]\n\t * @param {Number} idx The index to update.\n\t * @param {*} x The value to exist at the given index of the returned array.\n\t * @param {Array|Arguments} list The source array-like object to be updated.\n\t * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n\t * @see R.adjust\n\t * @example\n\t *\n\t *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n\t *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n\t * @symb R.update(-1, a, [b, c]) = [b, a]\n\t * @symb R.update(0, a, [b, c]) = [a, c]\n\t * @symb R.update(1, a, [b, c]) = [b, a]\n\t */\n\tmodule.exports = _curry3(function update(idx, x, list) {\n\t  return adjust(always(x), idx, list);\n\t});\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.calculateBitPosition = exports.calculateBitPositionForXY = undefined;\n\t\n\tvar _getXYFromIndex2 = __webpack_require__(135);\n\t\n\tvar _getXYFromIndex3 = _interopRequireDefault(_getXYFromIndex2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Calculate bit position\n\t * @param {*} x row from 0 to 2\n\t * @param {*} y col from 0 to 2\n\t * @return {Number} bit position\n\t */\n\tvar calculateBitPositionForXY = function calculateBitPositionForXY(x, y) {\n\t  return (x + y * 3) * 2;\n\t};\n\t\n\t/**\n\t * Calculate bit position\n\t * @param {*} index position index\n\t * @return {Number} bit position\n\t */\n\tvar calculateBitPosition = function calculateBitPosition(index) {\n\t  var _getXYFromIndex = (0, _getXYFromIndex3.default)(index),\n\t      x = _getXYFromIndex.x,\n\t      y = _getXYFromIndex.y;\n\t\n\t  return calculateBitPositionForXY(x, y);\n\t};\n\t\n\texports.default = calculateBitPosition;\n\texports.calculateBitPositionForXY = calculateBitPositionForXY;\n\texports.calculateBitPosition = calculateBitPosition;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\tvar _isPositionEmpty = __webpack_require__(71);\n\t\n\tvar _isPositionEmpty2 = _interopRequireDefault(_isPositionEmpty);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get all empty positions indexes\n\t * @param {Number} board board bits\n\t * @return {[Number]} indexes array\n\t */\n\tvar getEmptyPositions = function getEmptyPositions(board) {\n\t  return (0, _ramda.filter)(function (i) {\n\t    return (0, _isPositionEmpty2.default)(board, i);\n\t  }, _constants.boardIndexes);\n\t};\n\t\n\texports.default = getEmptyPositions;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t/**\n\t * Get mask position bits\n\t * @param {Number} position bit position\n\t * @return {Number} bit mask\n\t */\n\t// eslint-disable-next-line no-bitwise\n\tvar getMask = function getMask(position) {\n\t  return 3 << position;\n\t};\n\t\n\texports.default = getMask;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _calculateBitPosition = __webpack_require__(67);\n\t\n\tvar _calculateBitPosition2 = _interopRequireDefault(_calculateBitPosition);\n\t\n\tvar _getMask = __webpack_require__(69);\n\t\n\tvar _getMask2 = _interopRequireDefault(_getMask);\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get position from board\n\t * @func\n\t * @param {Number} board board bits\n\t * @param {Number} index position index 0 to 8\n\t * @return {Number} position value\n\t */\n\tvar getPosition = (0, _ramda.curry)(function (board, index) {\n\t  if (!(index >= 0 && index < _constants.boardLength)) {\n\t    return null;\n\t  }\n\t\n\t  var bitPosition = (0, _calculateBitPosition2.default)(index);\n\t  var mask = (0, _getMask2.default)(bitPosition);\n\t  // eslint-disable-next-line no-bitwise\n\t  return (board & mask) >> bitPosition;\n\t});\n\t\n\texports.default = getPosition;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _getPosition = __webpack_require__(70);\n\t\n\tvar _getPosition2 = _interopRequireDefault(_getPosition);\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Check if board position is empty\n\t * @param {*} board bits board\n\t * @param {*} index position\n\t * @return {Boolean} is empty\n\t */\n\tvar isPositionEmpty = function isPositionEmpty(board, index) {\n\t  return (0, _getPosition2.default)(board, index) === _constants.emptyValue;\n\t};\n\t\n\texports.default = isPositionEmpty;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _setPosition = __webpack_require__(136);\n\t\n\tvar _setPosition2 = _interopRequireDefault(_setPosition);\n\t\n\tvar _getNewValue = __webpack_require__(132);\n\t\n\tvar _getNewValue2 = _interopRequireDefault(_getNewValue);\n\t\n\tvar _getNClicks = __webpack_require__(130);\n\t\n\tvar _getNClicks2 = _interopRequireDefault(_getNClicks);\n\t\n\tvar _getWinners = __webpack_require__(134);\n\t\n\tvar _getWinners2 = _interopRequireDefault(_getWinners);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar getScore = function getScore(oldScore, winners, isMyTurn) {\n\t  if (winners) {\n\t    return oldScore + (isMyTurn ? 1 : 0);\n\t  } else {\n\t    return oldScore;\n\t  }\n\t};\n\t\n\t/**\n\t * Move\n\t * @param {*} oldGame game\n\t * @param {Number} index position\n\t * @return {*} new game\n\t */\n\tvar move = function move(oldGame, index) {\n\t  if (oldGame.ended) {\n\t    return oldGame;\n\t  }\n\t\n\t  var nClicks = (0, _getNClicks2.default)(oldGame.board);\n\t\n\t  var newValue = (0, _getNewValue2.default)(nClicks);\n\t\n\t  var newBoard = (0, _setPosition2.default)(oldGame.board, index, newValue);\n\t\n\t  if ((0, _ramda.isNil)(newBoard)) {\n\t    return null;\n\t  }\n\t\n\t  var winners = (0, _getWinners2.default)(newBoard);\n\t\n\t  var isNClicksOdd = nClicks % 2 === 0;\n\t\n\t  var ended = winners || nClicks > 7 ? true : false;\n\t\n\t  return {\n\t    board: newBoard,\n\t    ended: ended,\n\t    started: true,\n\t    lastMove: index,\n\t    winners: winners,\n\t    isAiTurn: !oldGame.isAiTurn,\n\t    aiStarted: oldGame.aiStarted,\n\t    score: ended ? {\n\t      ai: getScore(oldGame.score.ai, winners, oldGame.aiStarted ? isNClicksOdd : !isNClicksOdd),\n\t      human: getScore(oldGame.score.human, winners, oldGame.aiStarted ? !isNClicksOdd : isNClicksOdd)\n\t    } : oldGame.score\n\t  };\n\t};\n\t\n\texports.default = move;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Applies a function to the value at the given index of an array, returning a\n\t * new copy of the array with the element at the given index replaced with the\n\t * result of the function application.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category List\n\t * @sig (a -> a) -> Number -> [a] -> [a]\n\t * @param {Function} fn The function to apply.\n\t * @param {Number} idx The index.\n\t * @param {Array|Arguments} list An array-like object whose value\n\t *        at the supplied index will be replaced.\n\t * @return {Array} A copy of the supplied array-like object with\n\t *         the element at index `idx` replaced with the value\n\t *         returned by applying `fn` to the existing element.\n\t * @see R.update\n\t * @example\n\t *\n\t *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n\t *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n\t * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n\t * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n\t */\n\tmodule.exports = _curry3(function adjust(fn, idx, list) {\n\t  if (idx >= list.length || idx < -list.length) {\n\t    return list;\n\t  }\n\t  var start = idx < 0 ? list.length : 0;\n\t  var _idx = start + idx;\n\t  var _list = _concat(list);\n\t  _list[_idx] = fn(list[_idx]);\n\t  return _list;\n\t});\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if both arguments are `true`; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Logic\n\t * @sig a -> b -> a | b\n\t * @param {Any} a\n\t * @param {Any} b\n\t * @return {Any} the first argument if it is falsy, otherwise the second argument.\n\t * @see R.both\n\t * @example\n\t *\n\t *      R.and(true, true); //=> true\n\t *      R.and(true, false); //=> false\n\t *      R.and(false, true); //=> false\n\t *      R.and(false, false); //=> false\n\t */\n\tmodule.exports = _curry2(function and(a, b) {\n\t  return a && b;\n\t});\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xany = __webpack_require__(98);\n\t\n\t\n\t/**\n\t * Returns `true` if at least one of elements of the list match the predicate,\n\t * `false` otherwise.\n\t *\n\t * Dispatches to the `any` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> Boolean\n\t * @param {Function} fn The predicate function.\n\t * @param {Array} list The array to consider.\n\t * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n\t *         otherwise.\n\t * @see R.all, R.none, R.transduce\n\t * @example\n\t *\n\t *      var lessThan0 = R.flip(R.lt)(0);\n\t *      var lessThan2 = R.flip(R.lt)(2);\n\t *      R.any(lessThan0)([1, 2]); //=> false\n\t *      R.any(lessThan2)([1, 2]); //=> true\n\t */\n\tmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n\t  var idx = 0;\n\t  while (idx < list.length) {\n\t    if (fn(list[idx])) {\n\t      return true;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return false;\n\t}));\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Applies function `fn` to the argument list `args`. This is useful for\n\t * creating a fixed-arity function from a variadic function. `fn` should be a\n\t * bound function if context is significant.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Function\n\t * @sig (*... -> a) -> [*] -> a\n\t * @param {Function} fn The function which will be called with `args`\n\t * @param {Array} args The arguments to call `fn` with\n\t * @return {*} result The result, equivalent to `fn(...args)`\n\t * @see R.call, R.unapply\n\t * @example\n\t *\n\t *      var nums = [1, 2, 3, -99, 42, 6, 7];\n\t *      R.apply(Math.max, nums); //=> 42\n\t * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n\t */\n\tmodule.exports = _curry2(function apply(fn, args) {\n\t  return fn.apply(this, args);\n\t});\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar _has = __webpack_require__(7);\n\tvar _isArray = __webpack_require__(16);\n\tvar _isInteger = __webpack_require__(56);\n\tvar assoc = __webpack_require__(31);\n\tvar isNil = __webpack_require__(102);\n\t\n\t\n\t/**\n\t * Makes a shallow clone of an object, setting or overriding the nodes required\n\t * to create the given path, and placing the specific value at the tail end of\n\t * that path. Note that this copies and flattens prototype properties onto the\n\t * new object as well. All non-primitive properties are copied by reference.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Object\n\t * @typedefn Idx = String | Int\n\t * @sig [Idx] -> a -> {a} -> {a}\n\t * @param {Array} path the path to set\n\t * @param {*} val The new value\n\t * @param {Object} obj The object to clone\n\t * @return {Object} A new object equivalent to the original except along the specified path.\n\t * @see R.dissocPath\n\t * @example\n\t *\n\t *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n\t *\n\t *      // Any missing or non-object keys in path will be overridden\n\t *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n\t */\n\tmodule.exports = _curry3(function assocPath(path, val, obj) {\n\t  if (path.length === 0) {\n\t    return val;\n\t  }\n\t  var idx = path[0];\n\t  if (path.length > 1) {\n\t    var nextObj = (!isNil(obj) && _has(idx, obj)) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n\t    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n\t  }\n\t  if (_isInteger(idx) && _isArray(obj)) {\n\t    var arr = [].concat(obj);\n\t    arr[idx] = val;\n\t    return arr;\n\t  } else {\n\t    return assoc(idx, val, obj);\n\t  }\n\t});\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a function that is bound to a context.\n\t * Note: `R.bind` does not provide the additional argument-binding capabilities of\n\t * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category Function\n\t * @category Object\n\t * @sig (* -> *) -> {*} -> (* -> *)\n\t * @param {Function} fn The function to bind to context\n\t * @param {Object} thisObj The context to bind `fn` to\n\t * @return {Function} A function that will execute in the context of `thisObj`.\n\t * @see R.partial\n\t * @example\n\t *\n\t *      var log = R.bind(console.log, console);\n\t *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n\t *      // logs {a: 2}\n\t * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n\t */\n\tmodule.exports = _curry2(function bind(fn, thisObj) {\n\t  return _arity(fn.length, function() {\n\t    return fn.apply(thisObj, arguments);\n\t  });\n\t});\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar chain = __webpack_require__(48);\n\tvar compose = __webpack_require__(49);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * Returns the right-to-left Kleisli composition of the provided functions,\n\t * each of which must return a value of a type supported by [`chain`](#chain).\n\t *\n\t * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Function\n\t * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n\t * @param {...Function} ...functions The functions to compose\n\t * @return {Function}\n\t * @see R.pipeK\n\t * @example\n\t *\n\t *       //  get :: String -> Object -> Maybe *\n\t *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n\t *\n\t *       //  getStateCode :: Maybe String -> Maybe String\n\t *       var getStateCode = R.composeK(\n\t *         R.compose(Maybe.of, R.toUpper),\n\t *         get('state'),\n\t *         get('address'),\n\t *         get('user'),\n\t *       );\n\t *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n\t *       getStateCode({}); //=> Maybe.Nothing()\n\t * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n\t */\n\tmodule.exports = function composeK() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('composeK requires at least one argument');\n\t  }\n\t  var init = Array.prototype.slice.call(arguments);\n\t  var last = init.pop();\n\t  return compose(compose.apply(this, map(chain, init)), last);\n\t};\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar curry = __webpack_require__(32);\n\tvar nAry = __webpack_require__(43);\n\t\n\t\n\t/**\n\t * Wraps a constructor function inside a curried function that can be called\n\t * with the same arguments and returns the same type. The arity of the function\n\t * returned is specified to allow using variadic constructor functions.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.4.0\n\t * @category Function\n\t * @sig Number -> (* -> {*}) -> (* -> {*})\n\t * @param {Number} n The arity of the constructor function.\n\t * @param {Function} Fn The constructor function to wrap.\n\t * @return {Function} A wrapped, curried constructor function.\n\t * @example\n\t *\n\t *      // Variadic Constructor function\n\t *      function Salad() {\n\t *        this.ingredients = arguments;\n\t *      };\n\t *      Salad.prototype.recipe = function() {\n\t *        var instructions = R.map((ingredient) => (\n\t *          'Add a whollop of ' + ingredient, this.ingredients)\n\t *        )\n\t *        return R.join('\\n', instructions)\n\t *      }\n\t *\n\t *      var ThreeLayerSalad = R.constructN(3, Salad)\n\t *\n\t *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n\t *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n\t *      console.log(salad.recipe());\n\t *      // Add a whollop of Mayonnaise\n\t *      // Add a whollop of Potato Chips\n\t *      // Add a whollop of Potato Ketchup\n\t */\n\tmodule.exports = _curry2(function constructN(n, Fn) {\n\t  if (n > 10) {\n\t    throw new Error('Constructor with greater than ten arguments');\n\t  }\n\t  if (n === 0) {\n\t    return function() { return new Fn(); };\n\t  }\n\t  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n\t    switch (arguments.length) {\n\t      case  1: return new Fn($0);\n\t      case  2: return new Fn($0, $1);\n\t      case  3: return new Fn($0, $1, $2);\n\t      case  4: return new Fn($0, $1, $2, $3);\n\t      case  5: return new Fn($0, $1, $2, $3, $4);\n\t      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n\t      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n\t      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\t      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\t      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n\t    }\n\t  }));\n\t});\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _map = __webpack_require__(39);\n\tvar curryN = __webpack_require__(6);\n\tvar max = __webpack_require__(22);\n\tvar pluck = __webpack_require__(28);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Accepts a converging function and a list of branching functions and returns\n\t * a new function. When invoked, this new function is applied to some\n\t * arguments, each branching function is applied to those same arguments. The\n\t * results of each branching function are passed as arguments to the converging\n\t * function to produce the return value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.4.2\n\t * @category Function\n\t * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n\t * @param {Function} after A function. `after` will be invoked with the return values of\n\t *        `fn1` and `fn2` as its arguments.\n\t * @param {Array} functions A list of functions.\n\t * @return {Function} A new function.\n\t * @see R.useWith\n\t * @example\n\t *\n\t *      var average = R.converge(R.divide, [R.sum, R.length])\n\t *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n\t *\n\t *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n\t *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n\t *\n\t * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n\t */\n\tmodule.exports = _curry2(function converge(after, fns) {\n\t  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n\t    var args = arguments;\n\t    var context = this;\n\t    return after.apply(context, _map(function(fn) {\n\t      return fn.apply(context, args);\n\t    }, fns));\n\t  });\n\t});\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n\t * otherwise the first argument is returned.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Logic\n\t * @sig a -> b -> a | b\n\t * @param {a} default The default value.\n\t * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n\t * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n\t * @example\n\t *\n\t *      var defaultTo42 = R.defaultTo(42);\n\t *\n\t *      defaultTo42(null);  //=> 42\n\t *      defaultTo42(undefined);  //=> 42\n\t *      defaultTo42('Ramda');  //=> 'Ramda'\n\t *      // parseInt('string') results in NaN\n\t *      defaultTo42(parseInt('string')); //=> 42\n\t */\n\tmodule.exports = _curry2(function defaultTo(d, v) {\n\t  return v == null || v !== v ? d : v;\n\t});\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t * contained in the second list. Objects and Arrays are compared in terms of\n\t * value equality, not reference equality.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig [*] -> [*] -> [*]\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The elements in `list1` that are not in `list2`.\n\t * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n\t * @example\n\t *\n\t *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n\t *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n\t *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n\t */\n\tmodule.exports = _curry2(function difference(first, second) {\n\t  var out = [];\n\t  var idx = 0;\n\t  var firstLen = first.length;\n\t  while (idx < firstLen) {\n\t    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n\t      out[out.length] = first[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _containsWith = __webpack_require__(34);\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t * contained in the second list. Duplication is determined according to the\n\t * value returned by applying the supplied predicate to two list elements.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n\t * @param {Function} pred A predicate used to test whether two items are equal.\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The elements in `list1` that are not in `list2`.\n\t * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n\t * @example\n\t *\n\t *      var cmp = (x, y) => x.a === y.a;\n\t *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n\t *      var l2 = [{a: 3}, {a: 4}];\n\t *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n\t */\n\tmodule.exports = _curry3(function differenceWith(pred, first, second) {\n\t  var out = [];\n\t  var idx = 0;\n\t  var firstLen = first.length;\n\t  while (idx < firstLen) {\n\t    if (!_containsWith(pred, first[idx], second) &&\n\t        !_containsWith(pred, first[idx], out)) {\n\t      out.push(first[idx]);\n\t    }\n\t    idx += 1;\n\t  }\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new object that does not contain a `prop` property.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Object\n\t * @sig String -> {k: v} -> {k: v}\n\t * @param {String} prop The name of the property to dissociate\n\t * @param {Object} obj The object to clone\n\t * @return {Object} A new object equivalent to the original but without the specified property\n\t * @see R.assoc\n\t * @example\n\t *\n\t *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n\t */\n\tmodule.exports = _curry2(function dissoc(prop, obj) {\n\t  var result = {};\n\t  for (var p in obj) {\n\t    result[p] = obj[p];\n\t  }\n\t  delete result[prop];\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xdrop = __webpack_require__(218);\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Returns all but the first `n` elements of the given list, string, or\n\t * transducer/transformer (or object with a `drop` method).\n\t *\n\t * Dispatches to the `drop` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Number -> [a] -> [a]\n\t * @sig Number -> String -> String\n\t * @param {Number} n\n\t * @param {*} list\n\t * @return {*} A copy of list without the first `n` elements\n\t * @see R.take, R.transduce, R.dropLast, R.dropWhile\n\t * @example\n\t *\n\t *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n\t *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n\t *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n\t *      R.drop(3, 'ramda');               //=> 'da'\n\t */\n\tmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n\t  return slice(Math.max(0, n), Infinity, xs);\n\t}));\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xdropRepeatsWith = __webpack_require__(99);\n\tvar last = __webpack_require__(104);\n\t\n\t\n\t/**\n\t * Returns a new list without any consecutively repeating elements. Equality is\n\t * determined by applying the supplied predicate to each pair of consecutive elements. The\n\t * first element in a series of equal elements will be preserved.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category List\n\t * @sig (a, a -> Boolean) -> [a] -> [a]\n\t * @param {Function} pred A predicate used to test whether two items are equal.\n\t * @param {Array} list The array to consider.\n\t * @return {Array} `list` without repeating elements.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n\t *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n\t  var result = [];\n\t  var idx = 1;\n\t  var len = list.length;\n\t  if (len !== 0) {\n\t    result[0] = list[0];\n\t    while (idx < len) {\n\t      if (!pred(last(result), list[idx])) {\n\t        result[result.length] = list[idx];\n\t      }\n\t      idx += 1;\n\t    }\n\t  }\n\t  return result;\n\t}));\n\t\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _isArguments = __webpack_require__(95);\n\tvar _isArray = __webpack_require__(16);\n\tvar _isObject = __webpack_require__(57);\n\tvar _isString = __webpack_require__(24);\n\t\n\t\n\t/**\n\t * Returns the empty value of its argument's type. Ramda defines the empty\n\t * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n\t * types are supported if they define `<Type>.empty` and/or\n\t * `<Type>.prototype.empty`.\n\t *\n\t * Dispatches to the `empty` method of the first argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category Function\n\t * @sig a -> a\n\t * @param {*} x\n\t * @return {*}\n\t * @example\n\t *\n\t *      R.empty(Just(42));      //=> Nothing()\n\t *      R.empty([1, 2, 3]);     //=> []\n\t *      R.empty('unicorns');    //=> ''\n\t *      R.empty({x: 1, y: 2});  //=> {}\n\t */\n\tmodule.exports = _curry1(function empty(x) {\n\t  return (\n\t    (x != null && typeof x['fantasy-land/empty'] === 'function') ?\n\t      x['fantasy-land/empty']() :\n\t    (x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function') ?\n\t      x.constructor['fantasy-land/empty']() :\n\t    (x != null && typeof x.empty === 'function') ?\n\t      x.empty() :\n\t    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n\t      x.constructor.empty() :\n\t    _isArray(x) ?\n\t      [] :\n\t    _isString(x) ?\n\t      '' :\n\t    _isObject(x) ?\n\t      {} :\n\t    _isArguments(x) ?\n\t      (function() { return arguments; }()) :\n\t    // else\n\t      void 0\n\t  );\n\t});\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns true if its arguments are identical, false otherwise. Values are\n\t * identical if they reference the same memory. `NaN` is identical to `NaN`;\n\t * `0` and `-0` are not identical.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.15.0\n\t * @category Relation\n\t * @sig a -> a -> Boolean\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      var o = {};\n\t *      R.identical(o, o); //=> true\n\t *      R.identical(1, 1); //=> true\n\t *      R.identical(1, '1'); //=> false\n\t *      R.identical([], []); //=> false\n\t *      R.identical(0, -0); //=> false\n\t *      R.identical(NaN, NaN); //=> true\n\t */\n\tmodule.exports = _curry2(function identical(a, b) {\n\t  // SameValue algorithm\n\t  if (a === b) { // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    return a !== 0 || 1 / a === 1 / b;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return a !== a && b !== b;\n\t  }\n\t});\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _cloneRegExp = __webpack_require__(91);\n\tvar type = __webpack_require__(63);\n\t\n\t\n\t/**\n\t * Copies an object.\n\t *\n\t * @private\n\t * @param {*} value The value to be copied\n\t * @param {Array} refFrom Array containing the source references\n\t * @param {Array} refTo Array containing the copied source references\n\t * @param {Boolean} deep Whether or not to perform deep cloning.\n\t * @return {*} The copied value.\n\t */\n\tmodule.exports = function _clone(value, refFrom, refTo, deep) {\n\t  var copy = function copy(copiedValue) {\n\t    var len = refFrom.length;\n\t    var idx = 0;\n\t    while (idx < len) {\n\t      if (value === refFrom[idx]) {\n\t        return refTo[idx];\n\t      }\n\t      idx += 1;\n\t    }\n\t    refFrom[idx + 1] = value;\n\t    refTo[idx + 1] = copiedValue;\n\t    for (var key in value) {\n\t      copiedValue[key] = deep ?\n\t        _clone(value[key], refFrom, refTo, true) : value[key];\n\t    }\n\t    return copiedValue;\n\t  };\n\t  switch (type(value)) {\n\t    case 'Object':  return copy({});\n\t    case 'Array':   return copy([]);\n\t    case 'Date':    return new Date(value.valueOf());\n\t    case 'RegExp':  return _cloneRegExp(value);\n\t    default:        return value;\n\t  }\n\t};\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _cloneRegExp(pattern) {\n\t  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n\t                                    (pattern.ignoreCase ? 'i' : '') +\n\t                                    (pattern.multiline  ? 'm' : '') +\n\t                                    (pattern.sticky     ? 'y' : '') +\n\t                                    (pattern.unicode    ? 'u' : ''));\n\t};\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _complement(f) {\n\t  return function() {\n\t    return !f.apply(this, arguments);\n\t  };\n\t};\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\tmodule.exports = function _createPartialApplicator(concat) {\n\t  return _curry2(function(fn, args) {\n\t    return _arity(Math.max(0, fn.length - args.length), function() {\n\t      return fn.apply(this, concat(args, arguments));\n\t    });\n\t  });\n\t};\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\tmodule.exports = function _indexOf(list, a, idx) {\n\t  var inf, item;\n\t  // Array.prototype.indexOf doesn't exist below IE9\n\t  if (typeof list.indexOf === 'function') {\n\t    switch (typeof a) {\n\t      case 'number':\n\t        if (a === 0) {\n\t          // manually crawl the list to distinguish between +0 and -0\n\t          inf = 1 / a;\n\t          while (idx < list.length) {\n\t            item = list[idx];\n\t            if (item === 0 && 1 / item === inf) {\n\t              return idx;\n\t            }\n\t            idx += 1;\n\t          }\n\t          return -1;\n\t        } else if (a !== a) {\n\t          // NaN\n\t          while (idx < list.length) {\n\t            item = list[idx];\n\t            if (typeof item === 'number' && item !== item) {\n\t              return idx;\n\t            }\n\t            idx += 1;\n\t          }\n\t          return -1;\n\t        }\n\t        // non-zero numbers can utilise Set\n\t        return list.indexOf(a, idx);\n\t\n\t      // all these types can utilise Set\n\t      case 'string':\n\t      case 'boolean':\n\t      case 'function':\n\t      case 'undefined':\n\t        return list.indexOf(a, idx);\n\t\n\t      case 'object':\n\t        if (a === null) {\n\t          // null can utilise Set\n\t          return list.indexOf(a, idx);\n\t        }\n\t    }\n\t  }\n\t  // anything else not covered above, defer to R.equals\n\t  while (idx < list.length) {\n\t    if (equals(list[idx], a)) {\n\t      return idx;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return -1;\n\t};\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\tmodule.exports = (function() {\n\t  var toString = Object.prototype.toString;\n\t  return toString.call(arguments) === '[object Arguments]' ?\n\t    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n\t    function _isArguments(x) { return _has('callee', x); };\n\t}());\n\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isNumber(x) {\n\t  return Object.prototype.toString.call(x) === '[object Number]';\n\t};\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _isArrayLike = __webpack_require__(36);\n\t\n\t\n\t/**\n\t * `_makeFlat` is a helper function that returns a one-level or fully recursive\n\t * function based on the flag passed in.\n\t *\n\t * @private\n\t */\n\tmodule.exports = function _makeFlat(recursive) {\n\t  return function flatt(list) {\n\t    var value, jlen, j;\n\t    var result = [];\n\t    var idx = 0;\n\t    var ilen = list.length;\n\t\n\t    while (idx < ilen) {\n\t      if (_isArrayLike(list[idx])) {\n\t        value = recursive ? flatt(list[idx]) : list[idx];\n\t        j = 0;\n\t        jlen = value.length;\n\t        while (j < jlen) {\n\t          result[result.length] = value[j];\n\t          j += 1;\n\t        }\n\t      } else {\n\t        result[result.length] = list[idx];\n\t      }\n\t      idx += 1;\n\t    }\n\t    return result;\n\t  };\n\t};\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XAny(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.any = false;\n\t  }\n\t  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\t  XAny.prototype['@@transducer/result'] = function(result) {\n\t    if (!this.any) {\n\t      result = this.xf['@@transducer/step'](result, false);\n\t    }\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XAny.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.f(input)) {\n\t      this.any = true;\n\t      result = _reduced(this.xf['@@transducer/step'](result, true));\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XDropRepeatsWith(pred, xf) {\n\t    this.xf = xf;\n\t    this.pred = pred;\n\t    this.lastValue = undefined;\n\t    this.seenFirstValue = false;\n\t  }\n\t\n\t  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n\t  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\t  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n\t    var sameAsLast = false;\n\t    if (!this.seenFirstValue) {\n\t      this.seenFirstValue = true;\n\t    } else if (this.pred(this.lastValue, input)) {\n\t      sameAsLast = true;\n\t    }\n\t    this.lastValue = input;\n\t    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n\t  };\n\t\n\t  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n\t}());\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = (function() {\n\t  function XWrap(fn) {\n\t    this.f = fn;\n\t  }\n\t  XWrap.prototype['@@transducer/init'] = function() {\n\t    throw new Error('init not implemented on XWrap');\n\t  };\n\t  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n\t  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n\t    return this.f(acc, x);\n\t  };\n\t\n\t  return function _xwrap(fn) { return new XWrap(fn); };\n\t}());\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * See if an object (`val`) is an instance of the supplied constructor. This\n\t * function will check up the inheritance chain, if any.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category Type\n\t * @sig (* -> {*}) -> a -> Boolean\n\t * @param {Object} ctor A constructor\n\t * @param {*} val The value to test\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      R.is(Object, {}); //=> true\n\t *      R.is(Number, 1); //=> true\n\t *      R.is(Object, 1); //=> false\n\t *      R.is(String, 's'); //=> true\n\t *      R.is(String, new String('')); //=> true\n\t *      R.is(Object, new String('')); //=> true\n\t *      R.is(Object, 's'); //=> false\n\t *      R.is(Number, {}); //=> false\n\t */\n\tmodule.exports = _curry2(function is(Ctor, val) {\n\t  return val != null && val.constructor === Ctor || val instanceof Ctor;\n\t});\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Checks if the input value is `null` or `undefined`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Type\n\t * @sig * -> Boolean\n\t * @param {*} x The value to test.\n\t * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n\t * @example\n\t *\n\t *      R.isNil(null); //=> true\n\t *      R.isNil(undefined); //=> true\n\t *      R.isNil(0); //=> false\n\t *      R.isNil([]); //=> false\n\t */\n\tmodule.exports = _curry1(function isNil(x) { return x == null; });\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar converge = __webpack_require__(81);\n\t\n\t\n\t/**\n\t * juxt applies a list of functions to a list of values.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Function\n\t * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n\t * @param {Array} fns An array of functions\n\t * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n\t * @see R.applySpec\n\t * @example\n\t *\n\t *      var getRange = R.juxt([Math.min, Math.max]);\n\t *      getRange(3, 4, 9, -3); //=> [-3, 9]\n\t * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n\t */\n\tmodule.exports = _curry1(function juxt(fns) {\n\t  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n\t});\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nth = __webpack_require__(26);\n\t\n\t\n\t/**\n\t * Returns the last element of the given list or string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.4\n\t * @category List\n\t * @sig [a] -> a | Undefined\n\t * @sig String -> String\n\t * @param {*} list\n\t * @return {*}\n\t * @see R.init, R.head, R.tail\n\t * @example\n\t *\n\t *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n\t *      R.last([]); //=> undefined\n\t *\n\t *      R.last('abc'); //=> 'c'\n\t *      R.last(''); //=> ''\n\t */\n\tmodule.exports = nth(-1);\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _isNumber = __webpack_require__(96);\n\t\n\t\n\t/**\n\t * Returns the number of elements in the array by returning `list.length`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category List\n\t * @sig [a] -> Number\n\t * @param {Array} list The array to inspect.\n\t * @return {Number} The length of the array.\n\t * @example\n\t *\n\t *      R.length([]); //=> 0\n\t *      R.length([1, 2, 3]); //=> 3\n\t */\n\tmodule.exports = _curry1(function length(list) {\n\t  return list != null && _isNumber(list.length) ? list.length : NaN;\n\t});\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduce = __webpack_require__(10);\n\tvar ap = __webpack_require__(47);\n\tvar curryN = __webpack_require__(6);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\t/**\n\t * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n\t * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Function\n\t * @sig Number -> (*... -> *) -> ([*]... -> [*])\n\t * @param {Function} fn The function to lift into higher context\n\t * @return {Function} The lifted function.\n\t * @see R.lift, R.ap\n\t * @example\n\t *\n\t *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n\t *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t */\n\tmodule.exports = _curry2(function liftN(arity, fn) {\n\t  var lifted = curryN(arity, fn);\n\t  return curryN(arity, function() {\n\t    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n\t  });\n\t});\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar sum = __webpack_require__(121);\n\t\n\t\n\t/**\n\t * Returns the mean of the given list of numbers.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Math\n\t * @sig [Number] -> Number\n\t * @param {Array} list\n\t * @return {Number}\n\t * @see R.median\n\t * @example\n\t *\n\t *      R.mean([2, 7, 9]); //=> 6\n\t *      R.mean([]); //=> NaN\n\t */\n\tmodule.exports = _curry1(function mean(list) {\n\t  return sum(list) / list.length;\n\t});\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n\t * additional function that will be applied to a given argument set and used to\n\t * create the cache key under which the results of the function to be memoized\n\t * will be stored. Care must be taken when implementing key generation to avoid\n\t * clashes that may overwrite previous entries erroneously.\n\t *\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Function\n\t * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n\t * @param {Function} fn The function to generate the cache key.\n\t * @param {Function} fn The function to memoize.\n\t * @return {Function} Memoized version of `fn`.\n\t * @see R.memoize\n\t * @example\n\t *\n\t *      let count = 0;\n\t *      const factorial = R.memoizeWith(R.identity, n => {\n\t *        count += 1;\n\t *        return R.product(R.range(1, n + 1));\n\t *      });\n\t *      factorial(5); //=> 120\n\t *      factorial(5); //=> 120\n\t *      factorial(5); //=> 120\n\t *      count; //=> 1\n\t */\n\tmodule.exports = _curry2(function memoizeWith(mFn, fn) {\n\t  var cache = {};\n\t  return _arity(fn.length, function() {\n\t    var key = mFn.apply(this, arguments);\n\t    if (!_has(key, cache)) {\n\t      cache[key] = fn.apply(this, arguments);\n\t    }\n\t    return cache[key];\n\t  });\n\t});\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Multiplies two numbers. Equivalent to `a * b` but curried.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} a The first value.\n\t * @param {Number} b The second value.\n\t * @return {Number} The result of `a * b`.\n\t * @see R.divide\n\t * @example\n\t *\n\t *      var double = R.multiply(2);\n\t *      var triple = R.multiply(3);\n\t *      double(3);       //=>  6\n\t *      triple(4);       //=> 12\n\t *      R.multiply(2, 5);  //=> 10\n\t */\n\tmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * A function that returns the `!` of its argument. It will return `true` when\n\t * passed false-y value, and `false` when passed a truth-y one.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Logic\n\t * @sig * -> Boolean\n\t * @param {*} a any value\n\t * @return {Boolean} the logical inverse of passed argument.\n\t * @see R.complement\n\t * @example\n\t *\n\t *      R.not(true); //=> false\n\t *      R.not(false); //=> true\n\t *      R.not(0); //=> true\n\t *      R.not(1); //=> false\n\t */\n\tmodule.exports = _curry1(function not(a) {\n\t  return !a;\n\t});\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates an object containing a single key:value pair.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category Object\n\t * @sig String -> a -> {String:a}\n\t * @param {String} key\n\t * @param {*} val\n\t * @return {Object}\n\t * @see R.pair\n\t * @example\n\t *\n\t *      var matchPhrases = R.compose(\n\t *        R.objOf('must'),\n\t *        R.map(R.objOf('match_phrase'))\n\t *      );\n\t *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n\t */\n\tmodule.exports = _curry2(function objOf(key, val) {\n\t  var obj = {};\n\t  obj[key] = val;\n\t  return obj;\n\t});\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if one or both of its arguments are `true`. Returns `false`\n\t * if both arguments are `false`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Logic\n\t * @sig a -> b -> a | b\n\t * @param {Any} a\n\t * @param {Any} b\n\t * @return {Any} the first argument if truthy, otherwise the second argument.\n\t * @see R.either\n\t * @example\n\t *\n\t *      R.or(true, true); //=> true\n\t *      R.or(true, false); //=> true\n\t *      R.or(false, true); //=> true\n\t *      R.or(false, false); //=> false\n\t */\n\tmodule.exports = _curry2(function or(a, b) {\n\t  return a || b;\n\t});\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Returns the result of \"setting\" the portion of the given data structure\n\t * focused by the given lens to the result of applying the given function to\n\t * the focused value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig Lens s a -> (a -> a) -> s -> s\n\t * @param {Lens} lens\n\t * @param {*} v\n\t * @param {*} x\n\t * @return {*}\n\t * @see R.prop, R.lensIndex, R.lensProp\n\t * @example\n\t *\n\t *      var headLens = R.lensIndex(0);\n\t *\n\t *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n\t */\n\tmodule.exports = (function() {\n\t  // `Identity` is a functor that holds a single value, where `map` simply\n\t  // transforms the held value with the provided function.\n\t  var Identity = function(x) {\n\t    return {value: x, map: function(f) { return Identity(f(x)); }};\n\t  };\n\t\n\t  return _curry3(function over(lens, f, x) {\n\t    // The value returned by the getter function is first transformed with `f`,\n\t    // then set as the value of an `Identity`. This is then mapped over with the\n\t    // setter function of the lens.\n\t    return lens(function(y) { return Identity(f(y)); })(x).value;\n\t  });\n\t}());\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Similar to `pick` except that this one includes a `key: undefined` pair for\n\t * properties that don't exist.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig [k] -> {k: v} -> {k: v}\n\t * @param {Array} names an array of String property names to copy onto a new object\n\t * @param {Object} obj The object to copy from\n\t * @return {Object} A new object with only properties from `names` on it.\n\t * @see R.pick\n\t * @example\n\t *\n\t *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n\t */\n\tmodule.exports = _curry2(function pickAll(names, obj) {\n\t  var result = {};\n\t  var idx = 0;\n\t  var len = names.length;\n\t  while (idx < len) {\n\t    var name = names[idx];\n\t    result[name] = obj[name];\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _pipe = __webpack_require__(209);\n\tvar reduce = __webpack_require__(14);\n\tvar tail = __webpack_require__(61);\n\t\n\t\n\t/**\n\t * Performs left-to-right function composition. The leftmost function may have\n\t * any arity; the remaining functions must be unary.\n\t *\n\t * In some libraries this function is named `sequence`.\n\t *\n\t * **Note:** The result of pipe is not automatically curried.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n\t * @param {...Function} functions\n\t * @return {Function}\n\t * @see R.compose\n\t * @example\n\t *\n\t *      var f = R.pipe(Math.pow, R.negate, R.inc);\n\t *\n\t *      f(3, 4); // -(3^4) + 1\n\t * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n\t */\n\tmodule.exports = function pipe() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('pipe requires at least one argument');\n\t  }\n\t  return _arity(arguments[0].length,\n\t                reduce(_pipe, arguments[0], tail(arguments)));\n\t};\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _pipeP = __webpack_require__(210);\n\tvar reduce = __webpack_require__(14);\n\tvar tail = __webpack_require__(61);\n\t\n\t\n\t/**\n\t * Performs left-to-right composition of one or more Promise-returning\n\t * functions. The leftmost function may have any arity; the remaining functions\n\t * must be unary.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Function\n\t * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n\t * @param {...Function} functions\n\t * @return {Function}\n\t * @see R.composeP\n\t * @example\n\t *\n\t *      //  followersForUser :: String -> Promise [User]\n\t *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n\t */\n\tmodule.exports = function pipeP() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('pipeP requires at least one argument');\n\t  }\n\t  return _arity(arguments[0].length,\n\t                reduce(_pipeP, arguments[0], tail(arguments)));\n\t};\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new list with the given element at the front, followed by the\n\t * contents of the list.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig a -> [a] -> [a]\n\t * @param {*} el The item to add to the head of the output list.\n\t * @param {Array} list The array to add to the tail of the output list.\n\t * @return {Array} A new array.\n\t * @see R.append\n\t * @example\n\t *\n\t *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n\t */\n\tmodule.exports = _curry2(function prepend(el, list) {\n\t  return _concat([el], list);\n\t});\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Returns a single item by iterating through the list, successively calling\n\t * the iterator function and passing it an accumulator value and the current\n\t * value from the array, and then passing the result to the next call.\n\t *\n\t * Similar to [`reduce`](#reduce), except moves through the input list from the\n\t * right to the left.\n\t *\n\t * The iterator function receives two values: *(value, acc)*, while the arguments'\n\t * order of `reduce`'s iterator function is *(acc, value)*.\n\t *\n\t * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n\t * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n\t * on this behavior, see:\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a, b -> b) -> b -> [a] -> b\n\t * @param {Function} fn The iterator function. Receives two values, the current element from the array\n\t *        and the accumulator.\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.reduce, R.addIndex\n\t * @example\n\t *\n\t *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n\t *          -               -2\n\t *         / \\              / \\\n\t *        1   -            1   3\n\t *           / \\              / \\\n\t *          2   -     ==>    2  -1\n\t *             / \\              / \\\n\t *            3   -            3   4\n\t *               / \\              / \\\n\t *              4   0            4   0\n\t *\n\t * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n\t */\n\tmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n\t  var idx = list.length - 1;\n\t  while (idx >= 0) {\n\t    acc = fn(list[idx], acc);\n\t    idx -= 1;\n\t  }\n\t  return acc;\n\t});\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Removes the sub-list of `list` starting at index `start` and containing\n\t * `count` elements. _Note that this is not destructive_: it returns a copy of\n\t * the list with the changes.\n\t * <small>No lists have been harmed in the application of this function.</small>\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.2\n\t * @category List\n\t * @sig Number -> Number -> [a] -> [a]\n\t * @param {Number} start The position to start removing elements\n\t * @param {Number} count The number of elements to remove\n\t * @param {Array} list The list to remove from\n\t * @return {Array} A new Array with `count` elements from `start` removed.\n\t * @example\n\t *\n\t *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n\t */\n\tmodule.exports = _curry3(function remove(start, count, list) {\n\t  var result = Array.prototype.slice.call(list, 0);\n\t  result.splice(start, count);\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar ap = __webpack_require__(47);\n\tvar map = __webpack_require__(8);\n\tvar prepend = __webpack_require__(117);\n\tvar reduceRight = __webpack_require__(118);\n\t\n\t\n\t/**\n\t * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n\t * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n\t * Applicative of Traversable.\n\t *\n\t * Dispatches to the `sequence` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n\t * @param {Function} of\n\t * @param {*} traversable\n\t * @return {*}\n\t * @see R.traverse\n\t * @example\n\t *\n\t *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n\t *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t *\n\t *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n\t *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n\t */\n\tmodule.exports = _curry2(function sequence(of, traversable) {\n\t  return typeof traversable.sequence === 'function' ?\n\t    traversable.sequence(of) :\n\t    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n\t                of([]),\n\t                traversable);\n\t});\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar add = __webpack_require__(30);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Adds together all the elements of a list.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig [Number] -> Number\n\t * @param {Array} list An array of numbers\n\t * @return {Number} The sum of all the numbers in the list.\n\t * @see R.reduce\n\t * @example\n\t *\n\t *      R.sum([2,4,6,8,100,1]); //=> 121\n\t */\n\tmodule.exports = reduce(add, 0);\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar drop = __webpack_require__(86);\n\t\n\t\n\t/**\n\t * Returns a new list containing the last `n` elements of the given list.\n\t * If `n > list.length`, returns a list of `list.length` elements.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig Number -> [a] -> [a]\n\t * @sig Number -> String -> String\n\t * @param {Number} n The number of elements to return.\n\t * @param {Array} xs The collection to consider.\n\t * @return {Array}\n\t * @see R.dropLast\n\t * @example\n\t *\n\t *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n\t *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t *      R.takeLast(3, 'ramda');               //=> 'mda'\n\t */\n\tmodule.exports = _curry2(function takeLast(n, xs) {\n\t  return drop(n >= 0 ? xs.length - n : 0, xs);\n\t});\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Calls an input function `n` times, returning an array containing the results\n\t * of those function calls.\n\t *\n\t * `fn` is passed one argument: The current value of `n`, which begins at `0`\n\t * and is gradually incremented to `n - 1`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.3\n\t * @category List\n\t * @sig (Number -> a) -> Number -> [a]\n\t * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n\t * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n\t * @return {Array} An array containing the return values of all calls to `fn`.\n\t * @see R.repeat\n\t * @example\n\t *\n\t *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n\t * @symb R.times(f, 0) = []\n\t * @symb R.times(f, 1) = [f(0)]\n\t * @symb R.times(f, 2) = [f(0), f(1)]\n\t */\n\tmodule.exports = _curry2(function times(fn, n) {\n\t  var len = Number(n);\n\t  var idx = 0;\n\t  var list;\n\t\n\t  if (len < 0 || isNaN(len)) {\n\t    throw new RangeError('n must be a non-negative number');\n\t  }\n\t  list = new Array(len);\n\t  while (idx < len) {\n\t    list[idx] = fn(idx);\n\t    idx += 1;\n\t  }\n\t  return list;\n\t});\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _Set = __webpack_require__(197);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new list containing only one copy of each element in the original\n\t * list, based upon the value returned by applying the supplied function to\n\t * each list element. Prefers the first item if the supplied function produces\n\t * the same value on two items. [`R.equals`](#equals) is used for comparison.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig (a -> b) -> [a] -> [a]\n\t * @param {Function} fn A function used to produce a value to use during comparisons.\n\t * @param {Array} list The array to consider.\n\t * @return {Array} The list of unique items.\n\t * @example\n\t *\n\t *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n\t */\n\tmodule.exports = _curry2(function uniqBy(fn, list) {\n\t  var set = new _Set();\n\t  var result = [];\n\t  var idx = 0;\n\t  var appliedItem, item;\n\t\n\t  while (idx < list.length) {\n\t    item = list[idx];\n\t    appliedItem = fn(item);\n\t    if (set.add(appliedItem)) {\n\t      result.push(item);\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Accepts a function `fn` and a list of transformer functions and returns a\n\t * new curried function. When the new function is invoked, it calls the\n\t * function `fn` with parameters consisting of the result of calling each\n\t * supplied handler on successive arguments to the new function.\n\t *\n\t * If more arguments are passed to the returned function than transformer\n\t * functions, those arguments are passed directly to `fn` as additional\n\t * parameters. If you expect additional arguments that don't need to be\n\t * transformed, although you can ignore them, it's best to pass an identity\n\t * function so that the new function reports the correct arity.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n\t * @param {Function} fn The function to wrap.\n\t * @param {Array} transformers A list of transformer functions\n\t * @return {Function} The wrapped function.\n\t * @see R.converge\n\t * @example\n\t *\n\t *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n\t *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n\t *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n\t *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n\t * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n\t */\n\tmodule.exports = _curry2(function useWith(fn, transformers) {\n\t  return curryN(transformers.length, function() {\n\t    var args = [];\n\t    var idx = 0;\n\t    while (idx < transformers.length) {\n\t      args.push(transformers[idx].call(this, arguments[idx]));\n\t      idx += 1;\n\t    }\n\t    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n\t  });\n\t});\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Returns a list of all the enumerable own properties of the supplied object.\n\t * Note that the order of the output array is not guaranteed across different\n\t * JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig {k: v} -> [v]\n\t * @param {Object} obj The object to extract values from\n\t * @return {Array} An array of the values of the object's own properties.\n\t * @see R.valuesIn, R.keys\n\t * @example\n\t *\n\t *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n\t */\n\tmodule.exports = _curry1(function values(obj) {\n\t  var props = keys(obj);\n\t  var len = props.length;\n\t  var vals = [];\n\t  var idx = 0;\n\t  while (idx < len) {\n\t    vals[idx] = obj[props[idx]];\n\t    idx += 1;\n\t  }\n\t  return vals;\n\t});\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * Takes a spec object and a test object; returns true if the test satisfies\n\t * the spec. Each of the spec's own properties must be a predicate function.\n\t * Each predicate is applied to the value of the corresponding property of the\n\t * test object. `where` returns true if all the predicates return true, false\n\t * otherwise.\n\t *\n\t * `where` is well suited to declaratively expressing constraints for other\n\t * functions such as [`filter`](#filter) and [`find`](#find).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category Object\n\t * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n\t * @param {Object} spec\n\t * @param {Object} testObj\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      // pred :: Object -> Boolean\n\t *      var pred = R.where({\n\t *        a: R.equals('foo'),\n\t *        b: R.complement(R.equals('bar')),\n\t *        x: R.gt(R.__, 10),\n\t *        y: R.lt(R.__, 20)\n\t *      });\n\t *\n\t *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n\t *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n\t *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n\t *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n\t *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n\t */\n\tmodule.exports = _curry2(function where(spec, testObj) {\n\t  for (var prop in spec) {\n\t    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t});\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _getBestPositions = __webpack_require__(129);\n\t\n\tvar _getBestPositions2 = _interopRequireDefault(_getBestPositions);\n\t\n\tvar _getNetwork = __webpack_require__(131);\n\t\n\tvar _getNetwork2 = _interopRequireDefault(_getNetwork);\n\t\n\tvar _getPositionIndex = __webpack_require__(133);\n\t\n\tvar _getPositionIndex2 = _interopRequireDefault(_getPositionIndex);\n\t\n\tvar _move = __webpack_require__(72);\n\t\n\tvar _move2 = _interopRequireDefault(_move);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tvar _ptzMath = __webpack_require__(137);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar net = (0, _getNetwork2.default)();\n\t\n\tvar learningRates = {\n\t  invalidMove: 0.1,\n\t  validMove: 0.6,\n\t  win: 1,\n\t  lost: 0\n\t};\n\t\n\t/**\n\t * Get ai move index position\n\t * @param {*} oldGame game\n\t * @return {Number} position index\n\t */\n\tvar getAiMove = function getAiMove(oldGame) {\n\t  if ((0, _ramda.isNil)(oldGame)) {\n\t    return oldGame;\n\t  }\n\t\n\t  var output = net.activate([oldGame.board]);\n\t\n\t  var index = (0, _getPositionIndex2.default)(output);\n\t\n\t  var newGame = (0, _move2.default)(oldGame, index);\n\t\n\t  if (newGame && newGame.ended) {\n\t    net.propagate(learningRates.win, newGame.board);\n\t    return index;\n\t  } else {\n\t\n\t    var bestPositions = (0, _getBestPositions2.default)(oldGame);\n\t\n\t    if ((0, _ramda.any)(function (p) {\n\t      return index === p;\n\t    }, bestPositions)) {\n\t      net.propagate(learningRates.validMove, newGame.board);\n\t      return index;\n\t    } else {\n\t      var bestPosition = (0, _ptzMath.getRandomItem)(bestPositions);\n\t      var gameAfterBestMove = (0, _move2.default)(oldGame, bestPosition);\n\t      net.propagate(learningRates.invalidMove, gameAfterBestMove.board);\n\t\n\t      return bestPosition;\n\t    }\n\t  }\n\t};\n\t\n\texports.default = getAiMove;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _getEmptyPositions = __webpack_require__(68);\n\t\n\tvar _getEmptyPositions2 = _interopRequireDefault(_getEmptyPositions);\n\t\n\tvar _move = __webpack_require__(72);\n\t\n\tvar _move2 = _interopRequireDefault(_move);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get another item from the list\n\t * \n\t * #TODO: Move to ptz-fp\n\t * \n\t * @param {*} item item to be excluded\n\t * @param {*} list list to get a different item\n\t * @return {*} another item\n\t */\n\tvar getOther = function getOther(item, list) {\n\t  return (0, _ramda.pipe)((0, _ramda.filter)(function (i) {\n\t    return i !== item;\n\t  }), _ramda.head)(list);\n\t};\n\t\n\t/**\n\t * Get Win Positions or Empty Positions\n\t * @func\n\t * @param {[Number]} oldGame old game\n\t * @return {Number} random empty position\n\t */\n\tvar getBestPositions = function getBestPositions(oldGame) {\n\t  var emptyPositions = (0, _getEmptyPositions2.default)(oldGame.board);\n\t\n\t  var winPositions = emptyPositions.filter(function (position) {\n\t    var testGame = (0, _move2.default)(oldGame, position);\n\t    return testGame.ended;\n\t  });\n\t\n\t  if (winPositions.length > 0) {\n\t    return winPositions;\n\t  }\n\t\n\t  var losePositions = emptyPositions.filter(function (position) {\n\t    var testGame = (0, _move2.default)(oldGame, getOther(position, emptyPositions));\n\t    var testGame2 = (0, _move2.default)(testGame, position);\n\t    return testGame2.ended;\n\t  });\n\t\n\t  return losePositions.length > 0 ? losePositions : emptyPositions;\n\t};\n\t\n\texports.default = getBestPositions;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\tvar _getEmptyPositions = __webpack_require__(68);\n\t\n\tvar _getEmptyPositions2 = _interopRequireDefault(_getEmptyPositions);\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get number o clicks / moves\n\t * @func\n\t * @param {[Number]} board board array\n\t * @return {Number} n clicks\n\t */\n\tvar getNClicks = function getNClicks(board) {\n\t  return _constants.boardLength - (0, _ramda.length)((0, _getEmptyPositions2.default)(board));\n\t};\n\t\n\texports.default = getNClicks;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _synaptic = __webpack_require__(336);\n\t\n\t/**\n\t * Get AI Neural Network\n\t * @return {*} Neural Network\n\t */\n\tvar getNetwork = function getNetwork() {\n\t  var inputLayer = new _synaptic.Layer(1);\n\t  var hiddenLayer1 = new _synaptic.Layer(9);\n\t  var hiddenLayer2 = new _synaptic.Layer(9);\n\t  var outputLayer = new _synaptic.Layer(9);\n\t\n\t  inputLayer.project(hiddenLayer1);\n\t  hiddenLayer1.project(hiddenLayer2);\n\t  hiddenLayer2.project(outputLayer);\n\t\n\t  return new _synaptic.Network({\n\t    input: inputLayer,\n\t    hidden: [hiddenLayer1, hiddenLayer2],\n\t    output: outputLayer\n\t  });\n\t};\n\t\n\texports.default = getNetwork;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\t/**\n\t * get new player value\n\t * @param {Number} nClicks number of previous clicks / moves\n\t * @return {Number} X or O value\n\t */\n\tvar getNewValue = function getNewValue(nClicks) {\n\t  return nClicks % 2 ? _constants.O : _constants.X;\n\t};\n\t\n\texports.default = getNewValue;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tvar getPositionIndex = function getPositionIndex(aiOutput) {\n\t  return aiOutput.reduce(function (bestIndex, value, index) {\n\t    return value > aiOutput[bestIndex] ? index : bestIndex;\n\t  }, 0);\n\t};\n\t\n\texports.default = getPositionIndex;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _ramda = __webpack_require__(15);\n\t\n\tvar _constants = __webpack_require__(20);\n\t\n\tvar _getPosition = __webpack_require__(70);\n\t\n\tvar _getPosition2 = _interopRequireDefault(_getPosition);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar positionsToCheck = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\t\n\t/**\n\t * Check winners for 3 winning positions\n\t * @param {Number} board board\n\t * @return {[Number]} winners\n\t */\n\tvar getWinners = function getWinners(board) {\n\t  var get = (0, _getPosition2.default)(board);\n\t\n\t  return (0, _ramda.head)((0, _ramda.filter)(function (positions) {\n\t    var p0 = get(positions[0]);\n\t    var p1 = get(positions[1]);\n\t    var p2 = get(positions[2]);\n\t\n\t    return p0 !== _constants.emptyValue && p0 === p1 && p1 === p2;\n\t  }, positionsToCheck)) || null;\n\t};\n\t\n\texports.default = getWinners;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t/**\n\t * Get {x, y} coordinates from index\n\t * \n\t * x,y:\n\t * \n\t * 0,0  1,0  2,0\n\t * \n\t * 0,1  1,1  2,1\n\t * \n\t * 0,2  1,2  2,2\n\t * \n\t * @param {Number} index position index 0 to 8\n\t * @return {*} {x,y}\n\t */\n\tvar getXYFromIndex = function getXYFromIndex(index) {\n\t  switch (index) {\n\t    case 0:\n\t      return { x: 0, y: 0 };\n\t    case 1:\n\t      return { x: 1, y: 0 };\n\t    case 2:\n\t      return { x: 2, y: 0 };\n\t    case 3:\n\t      return { x: 0, y: 1 };\n\t    case 4:\n\t      return { x: 1, y: 1 };\n\t    case 5:\n\t      return { x: 2, y: 1 };\n\t    case 6:\n\t      return { x: 0, y: 2 };\n\t    case 7:\n\t      return { x: 1, y: 2 };\n\t    case 8:\n\t      return { x: 2, y: 2 };\n\t    default:\n\t      return null;\n\t  }\n\t};\n\t\n\texports.default = getXYFromIndex;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _calculateBitPosition = __webpack_require__(67);\n\t\n\tvar _calculateBitPosition2 = _interopRequireDefault(_calculateBitPosition);\n\t\n\tvar _getMask = __webpack_require__(69);\n\t\n\tvar _getMask2 = _interopRequireDefault(_getMask);\n\t\n\tvar _isPositionEmpty = __webpack_require__(71);\n\t\n\tvar _isPositionEmpty2 = _interopRequireDefault(_isPositionEmpty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Get board after move, return null for invalid move\n\t * @param {Number} board old board bits\n\t * @param {Number} index position\n\t * @param {Number} value X=1, O=2\n\t * @return {Number} new board bits\n\t */\n\tvar setPosition = function setPosition(board, index, value) {\n\t  if (!(0, _isPositionEmpty2.default)(board, index)) {\n\t    return null;\n\t  }\n\t\n\t  var position = (0, _calculateBitPosition2.default)(index);\n\t  // eslint-disable-next-line no-bitwise\n\t  return board & ~(0, _getMask2.default)(position) | value << position;\n\t};\n\t\n\texports.default = setPosition;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Takes min and max then returns\n\t * an random number between them.\n\t */\n\tvar random = function random(min, max) {\n\t    return Math.floor(Math.random() * max) + min;\n\t};\n\t/**\n\t * Gets some random item from the given array.\n\t * @param list\n\t */\n\tfunction getRandomItem(list) {\n\t    if (!list) return null;\n\t    if (list.length === 0) return list[0];\n\t    var randomIndex = random(1, list.length) - 1;\n\t    return list[randomIndex];\n\t}\n\texports.random = random;\n\texports.getRandomItem = getRandomItem;\n\t//# sourceMappingURL=index.js.map\n\t//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar always = __webpack_require__(21);\n\t\n\t\n\t/**\n\t * A function that always returns `false`. Any passed in parameters are ignored.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Function\n\t * @sig * -> Boolean\n\t * @param {*}\n\t * @return {Boolean}\n\t * @see R.always, R.T\n\t * @example\n\t *\n\t *      R.F(); //=> false\n\t */\n\tmodule.exports = always(false);\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar always = __webpack_require__(21);\n\t\n\t\n\t/**\n\t * A function that always returns `true`. Any passed in parameters are ignored.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Function\n\t * @sig * -> Boolean\n\t * @param {*}\n\t * @return {Boolean}\n\t * @see R.always, R.F\n\t * @example\n\t *\n\t *      R.T(); //=> true\n\t */\n\tmodule.exports = always(true);\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * A special placeholder value used to specify \"gaps\" within curried functions,\n\t * allowing partial application of any combination of arguments, regardless of\n\t * their positions.\n\t *\n\t * If `g` is a curried ternary function and `_` is `R.__`, the following are\n\t * equivalent:\n\t *\n\t *   - `g(1, 2, 3)`\n\t *   - `g(_, 2, 3)(1)`\n\t *   - `g(_, _, 3)(1)(2)`\n\t *   - `g(_, _, 3)(1, 2)`\n\t *   - `g(_, 2, _)(1, 3)`\n\t *   - `g(_, 2)(1)(3)`\n\t *   - `g(_, 2)(1, 3)`\n\t *   - `g(_, 2)(_, 3)(1)`\n\t *\n\t * @constant\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category Function\n\t * @example\n\t *\n\t *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n\t *      greet('Alice'); //=> 'Hello, Alice!'\n\t */\n\tmodule.exports = {'@@functional/placeholder': true};\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry1 = __webpack_require__(2);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Creates a new list iteration function from an existing one by adding two new\n\t * parameters to its callback function: the current index, and the entire list.\n\t *\n\t * This would turn, for instance, [`R.map`](#map) function into one that\n\t * more closely resembles `Array.prototype.map`. Note that this will only work\n\t * for functions in which the iteration callback function is the first\n\t * parameter, and where the list is the last parameter. (This latter might be\n\t * unimportant if the list parameter is not used.)\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.15.0\n\t * @category Function\n\t * @category List\n\t * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n\t * @param {Function} fn A list iteration function that does not pass index or list to its callback\n\t * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n\t * @example\n\t *\n\t *      var mapIndexed = R.addIndex(R.map);\n\t *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n\t *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n\t */\n\tmodule.exports = _curry1(function addIndex(fn) {\n\t  return curryN(fn.length, function() {\n\t    var idx = 0;\n\t    var origFn = arguments[0];\n\t    var list = arguments[arguments.length - 1];\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    args[0] = function() {\n\t      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n\t      idx += 1;\n\t      return result;\n\t    };\n\t    return fn.apply(this, args);\n\t  });\n\t});\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xall = __webpack_require__(215);\n\t\n\t\n\t/**\n\t * Returns `true` if all elements of the list match the predicate, `false` if\n\t * there are any that don't.\n\t *\n\t * Dispatches to the `all` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> Boolean\n\t * @param {Function} fn The predicate function.\n\t * @param {Array} list The array to consider.\n\t * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n\t *         otherwise.\n\t * @see R.any, R.none, R.transduce\n\t * @example\n\t *\n\t *      var equals3 = R.equals(3);\n\t *      R.all(equals3)([3, 3, 3, 3]); //=> true\n\t *      R.all(equals3)([3, 3, 1, 3]); //=> false\n\t */\n\tmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n\t  var idx = 0;\n\t  while (idx < list.length) {\n\t    if (!fn(list[idx])) {\n\t      return false;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return true;\n\t}));\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar curryN = __webpack_require__(6);\n\tvar max = __webpack_require__(22);\n\tvar pluck = __webpack_require__(28);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Takes a list of predicates and returns a predicate that returns true for a\n\t * given list of arguments if every one of the provided predicates is satisfied\n\t * by those arguments.\n\t *\n\t * The function returned is a curried function whose arity matches that of the\n\t * highest-arity predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Logic\n\t * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t * @param {Array} predicates An array of predicates to check\n\t * @return {Function} The combined predicate\n\t * @see R.anyPass\n\t * @example\n\t *\n\t *      var isQueen = R.propEq('rank', 'Q');\n\t *      var isSpade = R.propEq('suit', '♠︎');\n\t *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n\t *\n\t *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n\t *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n\t */\n\tmodule.exports = _curry1(function allPass(preds) {\n\t  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n\t    var idx = 0;\n\t    var len = preds.length;\n\t    while (idx < len) {\n\t      if (!preds[idx].apply(this, arguments)) {\n\t        return false;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return true;\n\t  });\n\t});\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar curryN = __webpack_require__(6);\n\tvar max = __webpack_require__(22);\n\tvar pluck = __webpack_require__(28);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Takes a list of predicates and returns a predicate that returns true for a\n\t * given list of arguments if at least one of the provided predicates is\n\t * satisfied by those arguments.\n\t *\n\t * The function returned is a curried function whose arity matches that of the\n\t * highest-arity predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Logic\n\t * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t * @param {Array} predicates An array of predicates to check\n\t * @return {Function} The combined predicate\n\t * @see R.allPass\n\t * @example\n\t *\n\t *      var isClub = R.propEq('suit', '♣');\n\t *      var isSpade = R.propEq('suit', '♠');\n\t *      var isBlackCard = R.anyPass([isClub, isSpade]);\n\t *\n\t *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n\t *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n\t *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n\t */\n\tmodule.exports = _curry1(function anyPass(preds) {\n\t  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n\t    var idx = 0;\n\t    var len = preds.length;\n\t    while (idx < len) {\n\t      if (preds[idx].apply(this, arguments)) {\n\t        return true;\n\t      }\n\t      idx += 1;\n\t    }\n\t    return false;\n\t  });\n\t});\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _aperture = __webpack_require__(198);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xaperture = __webpack_require__(216);\n\t\n\t\n\t/**\n\t * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n\t * greater than the length of the list, an empty list is returned.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category List\n\t * @sig Number -> [a] -> [[a]]\n\t * @param {Number} n The size of the tuples to create\n\t * @param {Array} list The list to split into `n`-length tuples\n\t * @return {Array} The resulting list of `n`-length tuples\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n\t *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n\t *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new list containing the contents of the given list, followed by\n\t * the given element.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig a -> [a] -> [a]\n\t * @param {*} el The element to add to the end of the new list.\n\t * @param {Array} list The list of elements to add a new item to.\n\t *        list.\n\t * @return {Array} A new list containing the elements of the old list followed by `el`.\n\t * @see R.prepend\n\t * @example\n\t *\n\t *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n\t *      R.append('tests', []); //=> ['tests']\n\t *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n\t */\n\tmodule.exports = _curry2(function append(el, list) {\n\t  return _concat(list, [el]);\n\t});\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar apply = __webpack_require__(76);\n\tvar curryN = __webpack_require__(6);\n\tvar map = __webpack_require__(8);\n\tvar max = __webpack_require__(22);\n\tvar pluck = __webpack_require__(28);\n\tvar reduce = __webpack_require__(14);\n\tvar values = __webpack_require__(126);\n\t\n\t\n\t/**\n\t * Given a spec object recursively mapping properties to functions, creates a\n\t * function producing an object of the same structure, by mapping each property\n\t * to the result of calling its associated function with the supplied arguments.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.20.0\n\t * @category Function\n\t * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n\t * @param {Object} spec an object recursively mapping properties to functions for\n\t *        producing the values for these properties.\n\t * @return {Function} A function that returns an object of the same structure\n\t * as `spec', with each property set to the value returned by calling its\n\t * associated function with the supplied arguments.\n\t * @see R.converge, R.juxt\n\t * @example\n\t *\n\t *      var getMetrics = R.applySpec({\n\t *                                      sum: R.add,\n\t *                                      nested: { mul: R.multiply }\n\t *                                   });\n\t *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n\t * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n\t */\n\tmodule.exports = _curry1(function applySpec(spec) {\n\t  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n\t             spec);\n\t  return curryN(reduce(max, 0, pluck('length', values(spec))),\n\t                function() {\n\t                  var args = arguments;\n\t                  return map(function(f) { return apply(f, args); }, spec);\n\t                });\n\t});\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Makes an ascending comparator function out of a function that returns a value\n\t * that can be compared with `<` and `>`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.23.0\n\t * @category Function\n\t * @sig Ord b => (a -> b) -> a -> a -> Number\n\t * @param {Function} fn A function of arity one that returns a value that can be compared\n\t * @param {*} a The first item to be compared.\n\t * @param {*} b The second item to be compared.\n\t * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n\t * @see R.descend\n\t * @example\n\t *\n\t *      var byAge = R.ascend(R.prop('age'));\n\t *      var people = [\n\t *        // ...\n\t *      ];\n\t *      var peopleByYoungestFirst = R.sort(byAge, people);\n\t */\n\tmodule.exports = _curry3(function ascend(fn, a, b) {\n\t  var aa = fn(a);\n\t  var bb = fn(b);\n\t  return aa < bb ? -1 : aa > bb ? 1 : 0;\n\t});\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar nAry = __webpack_require__(43);\n\t\n\t\n\t/**\n\t * Wraps a function of any arity (including nullary) in a function that accepts\n\t * exactly 2 parameters. Any extraneous parameters will not be passed to the\n\t * supplied function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category Function\n\t * @sig (* -> c) -> (a, b -> c)\n\t * @param {Function} fn The function to wrap.\n\t * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t *         arity 2.\n\t * @see R.nAry, R.unary\n\t * @example\n\t *\n\t *      var takesThreeArgs = function(a, b, c) {\n\t *        return [a, b, c];\n\t *      };\n\t *      takesThreeArgs.length; //=> 3\n\t *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n\t *\n\t *      var takesTwoArgs = R.binary(takesThreeArgs);\n\t *      takesTwoArgs.length; //=> 2\n\t *      // Only 2 arguments are passed to the wrapped function\n\t *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n\t * @symb R.binary(f)(a, b, c) = f(a, b)\n\t */\n\tmodule.exports = _curry1(function binary(fn) {\n\t  return nAry(2, fn);\n\t});\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isFunction = __webpack_require__(37);\n\tvar and = __webpack_require__(74);\n\tvar lift = __webpack_require__(41);\n\t\n\t\n\t/**\n\t * A function which calls the two provided functions and returns the `&&`\n\t * of the results.\n\t * It returns the result of the first function if it is false-y and the result\n\t * of the second function otherwise. Note that this is short-circuited,\n\t * meaning that the second function will not be invoked if the first returns a\n\t * false-y value.\n\t *\n\t * In addition to functions, `R.both` also accepts any fantasy-land compatible\n\t * applicative functor.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category Logic\n\t * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t * @param {Function} f A predicate\n\t * @param {Function} g Another predicate\n\t * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n\t * @see R.and\n\t * @example\n\t *\n\t *      var gt10 = R.gt(R.__, 10)\n\t *      var lt20 = R.lt(R.__, 20)\n\t *      var f = R.both(gt10, lt20);\n\t *      f(15); //=> true\n\t *      f(30); //=> false\n\t */\n\tmodule.exports = _curry2(function both(f, g) {\n\t  return _isFunction(f) ?\n\t    function _both() {\n\t      return f.apply(this, arguments) && g.apply(this, arguments);\n\t    } :\n\t    lift(and)(f, g);\n\t});\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar curry = __webpack_require__(32);\n\t\n\t\n\t/**\n\t * Returns the result of calling its first argument with the remaining\n\t * arguments. This is occasionally useful as a converging function for\n\t * [`R.converge`](#converge): the first branch can produce a function while the\n\t * remaining branches produce values to be passed to that function as its\n\t * arguments.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Function\n\t * @sig (*... -> a),*... -> a\n\t * @param {Function} fn The function to apply to the remaining arguments.\n\t * @param {...*} args Any number of positional arguments.\n\t * @return {*}\n\t * @see R.apply\n\t * @example\n\t *\n\t *      R.call(R.add, 1, 2); //=> 3\n\t *\n\t *      var indentN = R.pipe(R.times(R.always(' ')),\n\t *                           R.join(''),\n\t *                           R.replace(/^(?!$)/gm));\n\t *\n\t *      var format = R.converge(R.call, [\n\t *                                  R.pipe(R.prop('indent'), indentN),\n\t *                                  R.prop('value')\n\t *                              ]);\n\t *\n\t *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n\t * @symb R.call(f, a, b) = f(a, b)\n\t */\n\tmodule.exports = curry(function call(fn) {\n\t  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n\t});\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t/**\n\t * Restricts a number to be within a range.\n\t *\n\t * Also works for other ordered types such as Strings and Dates.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.20.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> a -> a\n\t * @param {Number} minimum The lower limit of the clamp (inclusive)\n\t * @param {Number} maximum The upper limit of the clamp (inclusive)\n\t * @param {Number} value Value to be clamped\n\t * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n\t * @example\n\t *\n\t *      R.clamp(1, 10, -5) // => 1\n\t *      R.clamp(1, 10, 15) // => 10\n\t *      R.clamp(1, 10, 4)  // => 4\n\t */\n\tmodule.exports = _curry3(function clamp(min, max, value) {\n\t  if (min > max) {\n\t    throw new Error('min must not be greater than max in clamp(min, max, value)');\n\t  }\n\t  return value < min ? min :\n\t         value > max ? max :\n\t         value;\n\t});\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _clone = __webpack_require__(90);\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Creates a deep copy of the value which may contain (nested) `Array`s and\n\t * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n\t * assigned by reference rather than copied\n\t *\n\t * Dispatches to a `clone` method if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig {*} -> {*}\n\t * @param {*} value The object or array to clone\n\t * @return {*} A deeply cloned copy of `val`\n\t * @example\n\t *\n\t *      var objects = [{}, {}, {}];\n\t *      var objectsClone = R.clone(objects);\n\t *      objects === objectsClone; //=> false\n\t *      objects[0] === objectsClone[0]; //=> false\n\t */\n\tmodule.exports = _curry1(function clone(value) {\n\t  return value != null && typeof value.clone === 'function' ?\n\t    value.clone() :\n\t    _clone(value, [], [], true);\n\t});\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Makes a comparator function out of a function that reports whether the first\n\t * element is less than the second.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (a, b -> Boolean) -> (a, b -> Number)\n\t * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n\t * is less than the second, `false` otherwise\n\t * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n\t * @example\n\t *\n\t *      var byAge = R.comparator((a, b) => a.age < b.age);\n\t *      var people = [\n\t *        // ...\n\t *      ];\n\t *      var peopleByIncreasingAge = R.sort(byAge, people);\n\t */\n\tmodule.exports = _curry1(function comparator(pred) {\n\t  return function(a, b) {\n\t    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n\t  };\n\t});\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar lift = __webpack_require__(41);\n\tvar not = __webpack_require__(110);\n\t\n\t\n\t/**\n\t * Takes a function `f` and returns a function `g` such that if called with the same arguments\n\t * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n\t *\n\t * `R.complement` may be applied to any functor\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category Logic\n\t * @sig (*... -> *) -> (*... -> Boolean)\n\t * @param {Function} f\n\t * @return {Function}\n\t * @see R.not\n\t * @example\n\t *\n\t *      var isNotNil = R.complement(R.isNil);\n\t *      isNil(null); //=> true\n\t *      isNotNil(null); //=> false\n\t *      isNil(7); //=> false\n\t *      isNotNil(7); //=> true\n\t */\n\tmodule.exports = lift(not);\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar pipeP = __webpack_require__(116);\n\tvar reverse = __webpack_require__(46);\n\t\n\t\n\t/**\n\t * Performs right-to-left composition of one or more Promise-returning\n\t * functions. The rightmost function may have any arity; the remaining\n\t * functions must be unary.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Function\n\t * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n\t * @param {...Function} functions The functions to compose\n\t * @return {Function}\n\t * @see R.pipeP\n\t * @example\n\t *\n\t *      var db = {\n\t *        users: {\n\t *          JOE: {\n\t *            name: 'Joe',\n\t *            followers: ['STEVE', 'SUZY']\n\t *          }\n\t *        }\n\t *      }\n\t *\n\t *      // We'll pretend to do a db lookup which returns a promise\n\t *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n\t *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n\t *      lookupUser('JOE').then(lookupFollowers)\n\t *\n\t *      //  followersForUser :: String -> Promise [UserId]\n\t *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n\t *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n\t *      // Followers: [\"STEVE\",\"SUZY\"]\n\t */\n\tmodule.exports = function composeP() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('composeP requires at least one argument');\n\t  }\n\t  return pipeP.apply(this, reverse(arguments));\n\t};\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry1 = __webpack_require__(2);\n\tvar map = __webpack_require__(8);\n\tvar max = __webpack_require__(22);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n\t * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n\t * to `fn` are applied to each of the predicates in turn until one returns a\n\t * \"truthy\" value, at which point `fn` returns the result of applying its\n\t * arguments to the corresponding transformer. If none of the predicates\n\t * matches, `fn` returns undefined.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category Logic\n\t * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n\t * @param {Array} pairs A list of [predicate, transformer]\n\t * @return {Function}\n\t * @example\n\t *\n\t *      var fn = R.cond([\n\t *        [R.equals(0),   R.always('water freezes at 0°C')],\n\t *        [R.equals(100), R.always('water boils at 100°C')],\n\t *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n\t *      ]);\n\t *      fn(0); //=> 'water freezes at 0°C'\n\t *      fn(50); //=> 'nothing special happens at 50°C'\n\t *      fn(100); //=> 'water boils at 100°C'\n\t */\n\tmodule.exports = _curry1(function cond(pairs) {\n\t  var arity = reduce(max,\n\t                     0,\n\t                     map(function(pair) { return pair[0].length; }, pairs));\n\t  return _arity(arity, function() {\n\t    var idx = 0;\n\t    while (idx < pairs.length) {\n\t      if (pairs[idx][0].apply(this, arguments)) {\n\t        return pairs[idx][1].apply(this, arguments);\n\t      }\n\t      idx += 1;\n\t    }\n\t  });\n\t});\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar constructN = __webpack_require__(80);\n\t\n\t\n\t/**\n\t * Wraps a constructor function inside a curried function that can be called\n\t * with the same arguments and returns the same type.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (* -> {*}) -> (* -> {*})\n\t * @param {Function} fn The constructor function to wrap.\n\t * @return {Function} A wrapped, curried constructor function.\n\t * @see R.invoker\n\t * @example\n\t *\n\t *      // Constructor function\n\t *      function Animal(kind) {\n\t *        this.kind = kind;\n\t *      };\n\t *      Animal.prototype.sighting = function() {\n\t *        return \"It's a \" + this.kind + \"!\";\n\t *      }\n\t *\n\t *      var AnimalConstructor = R.construct(Animal)\n\t *\n\t *      // Notice we no longer need the 'new' keyword:\n\t *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n\t *\n\t *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n\t *      var animalSighting = R.invoker(0, 'sighting');\n\t *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n\t *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n\t */\n\tmodule.exports = _curry1(function construct(Fn) {\n\t  return constructN(Fn.length, Fn);\n\t});\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n\t * terms, to at least one element of the given list; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig a -> [a] -> Boolean\n\t * @param {Object} a The item to compare against.\n\t * @param {Array} list The array to consider.\n\t * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n\t * @see R.any\n\t * @example\n\t *\n\t *      R.contains(3, [1, 2, 3]); //=> true\n\t *      R.contains(4, [1, 2, 3]); //=> false\n\t *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n\t *      R.contains([42], [[42]]); //=> true\n\t */\n\tmodule.exports = _curry2(_contains);\n\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar reduceBy = __webpack_require__(44);\n\t\n\t\n\t/**\n\t * Counts the elements of a list according to how many match each value of a\n\t * key generated by the supplied function. Returns an object mapping the keys\n\t * produced by `fn` to the number of occurrences in the list. Note that all\n\t * keys are coerced to strings because of how JavaScript objects work.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig (a -> String) -> [a] -> {*}\n\t * @param {Function} fn The function used to map values to keys.\n\t * @param {Array} list The list to count elements from.\n\t * @return {Object} An object mapping keys to number of occurrences in the list.\n\t * @example\n\t *\n\t *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n\t *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n\t *\n\t *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n\t *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n\t */\n\tmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar add = __webpack_require__(30);\n\t\n\t\n\t/**\n\t * Decrements its argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Math\n\t * @sig Number -> Number\n\t * @param {Number} n\n\t * @return {Number} n - 1\n\t * @see R.inc\n\t * @example\n\t *\n\t *      R.dec(42); //=> 41\n\t */\n\tmodule.exports = add(-1);\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Makes a descending comparator function out of a function that returns a value\n\t * that can be compared with `<` and `>`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.23.0\n\t * @category Function\n\t * @sig Ord b => (a -> b) -> a -> a -> Number\n\t * @param {Function} fn A function of arity one that returns a value that can be compared\n\t * @param {*} a The first item to be compared.\n\t * @param {*} b The second item to be compared.\n\t * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n\t * @see R.ascend\n\t * @example\n\t *\n\t *      var byAge = R.descend(R.prop('age'));\n\t *      var people = [\n\t *        // ...\n\t *      ];\n\t *      var peopleByOldestFirst = R.sort(byAge, people);\n\t */\n\tmodule.exports = _curry3(function descend(fn, a, b) {\n\t  var aa = fn(a);\n\t  var bb = fn(b);\n\t  return aa > bb ? -1 : aa < bb ? 1 : 0;\n\t});\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isInteger = __webpack_require__(56);\n\tvar assoc = __webpack_require__(31);\n\tvar dissoc = __webpack_require__(85);\n\tvar remove = __webpack_require__(119);\n\tvar update = __webpack_require__(66);\n\t\n\t\n\t/**\n\t * Makes a shallow clone of an object, omitting the property at the given path.\n\t * Note that this copies and flattens prototype properties onto the new object\n\t * as well. All non-primitive properties are copied by reference.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.11.0\n\t * @category Object\n\t * @typedefn Idx = String | Int\n\t * @sig [Idx] -> {k: v} -> {k: v}\n\t * @param {Array} path The path to the value to omit\n\t * @param {Object} obj The object to clone\n\t * @return {Object} A new object without the property at path\n\t * @see R.assocPath\n\t * @example\n\t *\n\t *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n\t */\n\tmodule.exports = _curry2(function dissocPath(path, obj) {\n\t  switch (path.length) {\n\t    case 0:\n\t      return obj;\n\t    case 1:\n\t      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\t    default:\n\t      var head = path[0];\n\t      var tail = Array.prototype.slice.call(path, 1);\n\t      if (obj[head] == null) {\n\t        return obj;\n\t      } else if (_isInteger(path[0])) {\n\t        return update(head, dissocPath(tail, obj[head]), obj);\n\t      } else {\n\t        return assoc(head, dissocPath(tail, obj[head]), obj);\n\t      }\n\t  }\n\t});\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Divides two numbers. Equivalent to `a / b`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} a The first value.\n\t * @param {Number} b The second value.\n\t * @return {Number} The result of `a / b`.\n\t * @see R.multiply\n\t * @example\n\t *\n\t *      R.divide(71, 100); //=> 0.71\n\t *\n\t *      var half = R.divide(R.__, 2);\n\t *      half(42); //=> 21\n\t *\n\t *      var reciprocal = R.divide(1);\n\t *      reciprocal(4);   //=> 0.25\n\t */\n\tmodule.exports = _curry2(function divide(a, b) { return a / b; });\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _dropLast = __webpack_require__(200);\n\tvar _xdropLast = __webpack_require__(219);\n\t\n\t\n\t/**\n\t * Returns a list containing all but the last `n` elements of the given `list`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig Number -> [a] -> [a]\n\t * @sig Number -> String -> String\n\t * @param {Number} n The number of elements of `list` to skip.\n\t * @param {Array} list The list of elements to consider.\n\t * @return {Array} A copy of the list with only the first `list.length - n` elements\n\t * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n\t * @example\n\t *\n\t *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n\t *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n\t *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n\t *      R.dropLast(3, 'ramda');               //=> 'ra'\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _dropLastWhile = __webpack_require__(201);\n\tvar _xdropLastWhile = __webpack_require__(220);\n\t\n\t\n\t/**\n\t * Returns a new list excluding all the tailing elements of a given list which\n\t * satisfy the supplied predicate function. It passes each value from the right\n\t * to the supplied predicate function, skipping elements until the predicate\n\t * function returns a `falsy` value. The predicate function is applied to one argument:\n\t * *(value)*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> [a]\n\t * @param {Function} predicate The function to be called on each element\n\t * @param {Array} list The collection to iterate over.\n\t * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n\t * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n\t * @example\n\t *\n\t *      var lteThree = x => x <= 3;\n\t *\n\t *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xdropRepeatsWith = __webpack_require__(99);\n\tvar dropRepeatsWith = __webpack_require__(87);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Returns a new list without any consecutively repeating elements.\n\t * [`R.equals`](#equals) is used to determine equality.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category List\n\t * @sig [a] -> [a]\n\t * @param {Array} list The array to consider.\n\t * @return {Array} `list` without repeating elements.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n\t */\n\tmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xdropWhile = __webpack_require__(221);\n\t\n\t\n\t/**\n\t * Returns a new list excluding the leading elements of a given list which\n\t * satisfy the supplied predicate function. It passes each value to the supplied\n\t * predicate function, skipping elements while the predicate function returns\n\t * `true`. The predicate function is applied to one argument: *(value)*.\n\t *\n\t * Dispatches to the `dropWhile` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> [a]\n\t * @param {Function} fn The function called per iteration.\n\t * @param {Array} list The collection to iterate over.\n\t * @return {Array} A new array.\n\t * @see R.takeWhile, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var lteTwo = x => x <= 2;\n\t *\n\t *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n\t */\n\tmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len && pred(list[idx])) {\n\t    idx += 1;\n\t  }\n\t  return Array.prototype.slice.call(list, idx);\n\t}));\n\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isFunction = __webpack_require__(37);\n\tvar lift = __webpack_require__(41);\n\tvar or = __webpack_require__(112);\n\t\n\t\n\t/**\n\t * A function wrapping calls to the two functions in an `||` operation,\n\t * returning the result of the first function if it is truth-y and the result\n\t * of the second function otherwise. Note that this is short-circuited,\n\t * meaning that the second function will not be invoked if the first returns a\n\t * truth-y value.\n\t *\n\t * In addition to functions, `R.either` also accepts any fantasy-land compatible\n\t * applicative functor.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category Logic\n\t * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t * @param {Function} f a predicate\n\t * @param {Function} g another predicate\n\t * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n\t * @see R.or\n\t * @example\n\t *\n\t *      var gt10 = x => x > 10;\n\t *      var even = x => x % 2 === 0;\n\t *      var f = R.either(gt10, even);\n\t *      f(101); //=> true\n\t *      f(8); //=> true\n\t */\n\tmodule.exports = _curry2(function either(f, g) {\n\t  return _isFunction(f) ?\n\t    function _either() {\n\t      return f.apply(this, arguments) || g.apply(this, arguments);\n\t    } :\n\t    lift(or)(f, g);\n\t});\n\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar equals = __webpack_require__(9);\n\tvar takeLast = __webpack_require__(122);\n\t\n\t/**\n\t * Checks if a list ends with the provided values\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category List\n\t * @sig [a] -> Boolean\n\t * @sig String -> Boolean\n\t * @param {*} suffix\n\t * @param {*} list\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      R.endsWith('c', 'abc')                //=> true\n\t *      R.endsWith('b', 'abc')                //=> false\n\t *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n\t *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n\t */\n\tmodule.exports = _curry2(function(suffix, list) {\n\t  return equals(takeLast(suffix.length, list), suffix);\n\t});\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Takes a function and two values in its domain and returns `true` if the\n\t * values map to the same value in the codomain; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category Relation\n\t * @sig (a -> b) -> a -> a -> Boolean\n\t * @param {Function} f\n\t * @param {*} x\n\t * @param {*} y\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      R.eqBy(Math.abs, 5, -5); //=> true\n\t */\n\tmodule.exports = _curry3(function eqBy(f, x, y) {\n\t  return equals(f(x), f(y));\n\t});\n\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Reports whether two objects have the same value, in [`R.equals`](#equals)\n\t * terms, for the specified property. Useful as a curried predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig k -> {k: v} -> {k: v} -> Boolean\n\t * @param {String} prop The name of the property to compare\n\t * @param {Object} obj1\n\t * @param {Object} obj2\n\t * @return {Boolean}\n\t *\n\t * @example\n\t *\n\t *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n\t *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n\t *      R.eqProps('a', o1, o2); //=> false\n\t *      R.eqProps('c', o1, o2); //=> true\n\t */\n\tmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n\t  return equals(obj1[prop], obj2[prop]);\n\t});\n\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a new object by recursively evolving a shallow copy of `object`,\n\t * according to the `transformation` functions. All non-primitive properties\n\t * are copied by reference.\n\t *\n\t * A `transformation` function will not be invoked if its corresponding key\n\t * does not exist in the evolved object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Object\n\t * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n\t * @param {Object} transformations The object specifying transformation functions to apply\n\t *        to the object.\n\t * @param {Object} object The object to be transformed.\n\t * @return {Object} The transformed object.\n\t * @example\n\t *\n\t *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n\t *      var transformations = {\n\t *        firstName: R.trim,\n\t *        lastName: R.trim, // Will not get invoked.\n\t *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n\t *      };\n\t *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n\t */\n\tmodule.exports = _curry2(function evolve(transformations, object) {\n\t  var result = {};\n\t  var transformation, key, type;\n\t  for (key in object) {\n\t    transformation = transformations[key];\n\t    type = typeof transformation;\n\t    result[key] = type === 'function'                 ? transformation(object[key])\n\t                : transformation && type === 'object' ? evolve(transformation, object[key])\n\t                                                      : object[key];\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xfind = __webpack_require__(223);\n\t\n\t\n\t/**\n\t * Returns the first element of the list which matches the predicate, or\n\t * `undefined` if no element matches.\n\t *\n\t * Dispatches to the `find` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> a | undefined\n\t * @param {Function} fn The predicate function used to determine if the element is the\n\t *        desired one.\n\t * @param {Array} list The array to consider.\n\t * @return {Object} The element found, or `undefined`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n\t *      R.find(R.propEq('a', 4))(xs); //=> undefined\n\t */\n\tmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len) {\n\t    if (fn(list[idx])) {\n\t      return list[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t}));\n\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xfindIndex = __webpack_require__(224);\n\t\n\t\n\t/**\n\t * Returns the index of the first element of the list which matches the\n\t * predicate, or `-1` if no element matches.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> Number\n\t * @param {Function} fn The predicate function used to determine if the element is the\n\t * desired one.\n\t * @param {Array} list The array to consider.\n\t * @return {Number} The index of the element found, or `-1`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n\t *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len) {\n\t    if (fn(list[idx])) {\n\t      return idx;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return -1;\n\t}));\n\n\n/***/ }),\n/* 176 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xfindLast = __webpack_require__(225);\n\t\n\t\n\t/**\n\t * Returns the last element of the list which matches the predicate, or\n\t * `undefined` if no element matches.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> a | undefined\n\t * @param {Function} fn The predicate function used to determine if the element is the\n\t * desired one.\n\t * @param {Array} list The array to consider.\n\t * @return {Object} The element found, or `undefined`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n\t *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n\t  var idx = list.length - 1;\n\t  while (idx >= 0) {\n\t    if (fn(list[idx])) {\n\t      return list[idx];\n\t    }\n\t    idx -= 1;\n\t  }\n\t}));\n\n\n/***/ }),\n/* 177 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xfindLastIndex = __webpack_require__(226);\n\t\n\t\n\t/**\n\t * Returns the index of the last element of the list which matches the\n\t * predicate, or `-1` if no element matches.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> Number\n\t * @param {Function} fn The predicate function used to determine if the element is the\n\t * desired one.\n\t * @param {Array} list The array to consider.\n\t * @return {Number} The index of the element found, or `-1`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n\t *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n\t */\n\tmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n\t  var idx = list.length - 1;\n\t  while (idx >= 0) {\n\t    if (fn(list[idx])) {\n\t      return idx;\n\t    }\n\t    idx -= 1;\n\t  }\n\t  return -1;\n\t}));\n\n\n/***/ }),\n/* 178 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _makeFlat = __webpack_require__(97);\n\t\n\t\n\t/**\n\t * Returns a new list by pulling every item out of it (and all its sub-arrays)\n\t * and putting them in a new array, depth-first.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [b]\n\t * @param {Array} list The array to consider.\n\t * @return {Array} The flattened list.\n\t * @see R.unnest\n\t * @example\n\t *\n\t *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n\t *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\t */\n\tmodule.exports = _curry1(_makeFlat(true));\n\n\n/***/ }),\n/* 179 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _checkForMethod = __webpack_require__(23);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Iterate over an input `list`, calling a provided function `fn` for each\n\t * element in the list.\n\t *\n\t * `fn` receives one argument: *(value)*.\n\t *\n\t * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n\t * arrays), unlike the native `Array.prototype.forEach` method. For more\n\t * details on this behavior, see:\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n\t *\n\t * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n\t * the original array. In some libraries this function is named `each`.\n\t *\n\t * Dispatches to the `forEach` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category List\n\t * @sig (a -> *) -> [a] -> [a]\n\t * @param {Function} fn The function to invoke. Receives one argument, `value`.\n\t * @param {Array} list The list to iterate over.\n\t * @return {Array} The original list.\n\t * @see R.addIndex\n\t * @example\n\t *\n\t *      var printXPlusFive = x => console.log(x + 5);\n\t *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n\t *      // logs 6\n\t *      // logs 7\n\t *      // logs 8\n\t * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n\t */\n\tmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n\t  var len = list.length;\n\t  var idx = 0;\n\t  while (idx < len) {\n\t    fn(list[idx]);\n\t    idx += 1;\n\t  }\n\t  return list;\n\t}));\n\n\n/***/ }),\n/* 180 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Iterate over an input `object`, calling a provided function `fn` for each\n\t * key and value in the object.\n\t *\n\t * `fn` receives three argument: *(value, key, obj)*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.23.0\n\t * @category Object\n\t * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n\t * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n\t * @param {Object} obj The object to iterate over.\n\t * @return {Object} The original object.\n\t * @example\n\t *\n\t *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n\t *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n\t *      // logs x:1\n\t *      // logs y:2\n\t * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n\t */\n\tmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n\t  var keyList = keys(obj);\n\t  var idx = 0;\n\t  while (idx < keyList.length) {\n\t    var key = keyList[idx];\n\t    fn(obj[key], key, obj);\n\t    idx += 1;\n\t  }\n\t  return obj;\n\t});\n\n\n/***/ }),\n/* 181 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Creates a new object from a list key-value pairs. If a key appears in\n\t * multiple pairs, the rightmost pair is included in the object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category List\n\t * @sig [[k,v]] -> {k: v}\n\t * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n\t * @return {Object} The object made by pairing up `keys` and `values`.\n\t * @see R.toPairs, R.pair\n\t * @example\n\t *\n\t *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n\t */\n\tmodule.exports = _curry1(function fromPairs(pairs) {\n\t  var result = {};\n\t  var idx = 0;\n\t  while (idx < pairs.length) {\n\t    result[pairs[idx][0]] = pairs[idx][1];\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 182 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _checkForMethod = __webpack_require__(23);\n\tvar _curry2 = __webpack_require__(1);\n\tvar reduceBy = __webpack_require__(44);\n\t\n\t/**\n\t * Splits a list into sub-lists stored in an object, based on the result of\n\t * calling a String-returning function on each element, and grouping the\n\t * results according to values returned.\n\t *\n\t * Dispatches to the `groupBy` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> String) -> [a] -> {String: [a]}\n\t * @param {Function} fn Function :: a -> String\n\t * @param {Array} list The array to group\n\t * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n\t *         that produced that key when passed to `fn`.\n\t * @see R.transduce\n\t * @example\n\t *\n\t *      var byGrade = R.groupBy(function(student) {\n\t *        var score = student.score;\n\t *        return score < 65 ? 'F' :\n\t *               score < 70 ? 'D' :\n\t *               score < 80 ? 'C' :\n\t *               score < 90 ? 'B' : 'A';\n\t *      });\n\t *      var students = [{name: 'Abby', score: 84},\n\t *                      {name: 'Eddy', score: 58},\n\t *                      // ...\n\t *                      {name: 'Jack', score: 69}];\n\t *      byGrade(students);\n\t *      // {\n\t *      //   'A': [{name: 'Dianne', score: 99}],\n\t *      //   'B': [{name: 'Abby', score: 84}]\n\t *      //   // ...,\n\t *      //   'F': [{name: 'Eddy', score: 58}]\n\t *      // }\n\t */\n\tmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n\t  if (acc == null) {\n\t    acc = [];\n\t  }\n\t  acc.push(item);\n\t  return acc;\n\t}, null)));\n\n\n/***/ }),\n/* 183 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t/**\n\t * Takes a list and returns a list of lists where each sublist's elements are\n\t * all satisfied pairwise comparison according to the provided function.\n\t * Only adjacent elements are passed to the comparison function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.21.0\n\t * @category List\n\t * @sig ((a, a) → Boolean) → [a] → [[a]]\n\t * @param {Function} fn Function for determining whether two given (adjacent)\n\t *        elements should be in the same group\n\t * @param {Array} list The array to group. Also accepts a string, which will be\n\t *        treated as a list of characters.\n\t * @return {List} A list that contains sublists of elements,\n\t *         whose concatenations are equal to the original list.\n\t * @example\n\t *\n\t * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n\t * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n\t *\n\t * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n\t * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n\t *\n\t * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n\t * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n\t *\n\t * R.groupWith(R.eqBy(isVowel), 'aestiou')\n\t * //=> ['ae', 'st', 'iou']\n\t */\n\tmodule.exports = _curry2(function(fn, list) {\n\t  var res = [];\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len) {\n\t    var nextidx = idx + 1;\n\t    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n\t      nextidx += 1;\n\t    }\n\t    res.push(list.slice(idx, nextidx));\n\t    idx = nextidx;\n\t  }\n\t  return res;\n\t});\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if the first argument is greater than the second; `false`\n\t * otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> Boolean\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t * @see R.lt\n\t * @example\n\t *\n\t *      R.gt(2, 1); //=> true\n\t *      R.gt(2, 2); //=> false\n\t *      R.gt(2, 3); //=> false\n\t *      R.gt('a', 'z'); //=> false\n\t *      R.gt('z', 'a'); //=> true\n\t */\n\tmodule.exports = _curry2(function gt(a, b) { return a > b; });\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if the first argument is greater than or equal to the second;\n\t * `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> Boolean\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @return {Boolean}\n\t * @see R.lte\n\t * @example\n\t *\n\t *      R.gte(2, 1); //=> true\n\t *      R.gte(2, 2); //=> true\n\t *      R.gte(2, 3); //=> false\n\t *      R.gte('a', 'z'); //=> false\n\t *      R.gte('z', 'a'); //=> true\n\t */\n\tmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * Returns whether or not an object has an own property with the specified name\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Object\n\t * @sig s -> {s: x} -> Boolean\n\t * @param {String} prop The name of the property to check for.\n\t * @param {Object} obj The object to query.\n\t * @return {Boolean} Whether the property exists.\n\t * @example\n\t *\n\t *      var hasName = R.has('name');\n\t *      hasName({name: 'alice'});   //=> true\n\t *      hasName({name: 'bob'});     //=> true\n\t *      hasName({});                //=> false\n\t *\n\t *      var point = {x: 0, y: 0};\n\t *      var pointHas = R.has(R.__, point);\n\t *      pointHas('x');  //=> true\n\t *      pointHas('y');  //=> true\n\t *      pointHas('z');  //=> false\n\t */\n\tmodule.exports = _curry2(_has);\n\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns whether or not an object or its prototype chain has a property with\n\t * the specified name\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Object\n\t * @sig s -> {s: x} -> Boolean\n\t * @param {String} prop The name of the property to check for.\n\t * @param {Object} obj The object to query.\n\t * @return {Boolean} Whether the property exists.\n\t * @example\n\t *\n\t *      function Rectangle(width, height) {\n\t *        this.width = width;\n\t *        this.height = height;\n\t *      }\n\t *      Rectangle.prototype.area = function() {\n\t *        return this.width * this.height;\n\t *      };\n\t *\n\t *      var square = new Rectangle(2, 2);\n\t *      R.hasIn('width', square);  //=> true\n\t *      R.hasIn('area', square);  //=> true\n\t */\n\tmodule.exports = _curry2(function hasIn(prop, obj) {\n\t  return prop in obj;\n\t});\n\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar nth = __webpack_require__(26);\n\t\n\t\n\t/**\n\t * Returns the first element of the given list or string. In some libraries\n\t * this function is named `first`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> a | Undefined\n\t * @sig String -> String\n\t * @param {Array|String} list\n\t * @return {*}\n\t * @see R.tail, R.init, R.last\n\t * @example\n\t *\n\t *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n\t *      R.head([]); //=> undefined\n\t *\n\t *      R.head('abc'); //=> 'a'\n\t *      R.head(''); //=> ''\n\t */\n\tmodule.exports = nth(0);\n\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Creates a function that will process either the `onTrue` or the `onFalse`\n\t * function depending upon the result of the `condition` predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Logic\n\t * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n\t * @param {Function} condition A predicate function\n\t * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n\t * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n\t * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n\t *                    function depending upon the result of the `condition` predicate.\n\t * @see R.unless, R.when\n\t * @example\n\t *\n\t *      var incCount = R.ifElse(\n\t *        R.has('count'),\n\t *        R.over(R.lensProp('count'), R.inc),\n\t *        R.assoc('count', 1)\n\t *      );\n\t *      incCount({});           //=> { count: 1 }\n\t *      incCount({ count: 1 }); //=> { count: 2 }\n\t */\n\tmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n\t  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n\t    function _ifElse() {\n\t      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n\t    }\n\t  );\n\t});\n\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar add = __webpack_require__(30);\n\t\n\t\n\t/**\n\t * Increments its argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Math\n\t * @sig Number -> Number\n\t * @param {Number} n\n\t * @return {Number} n + 1\n\t * @see R.dec\n\t * @example\n\t *\n\t *      R.inc(42); //=> 43\n\t */\n\tmodule.exports = add(1);\n\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar reduceBy = __webpack_require__(44);\n\t\n\t\n\t/**\n\t * Given a function that generates a key, turns a list of objects into an\n\t * object indexing the objects by the given key. Note that if multiple\n\t * objects generate the same value for the indexing key only the last value\n\t * will be included in the generated object.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n\t * @param {Function} fn Function :: a -> String\n\t * @param {Array} array The array of objects to index\n\t * @return {Object} An object indexing each array element by the given property.\n\t * @example\n\t *\n\t *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n\t *      R.indexBy(R.prop('id'), list);\n\t *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n\t */\n\tmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _indexOf = __webpack_require__(94);\n\tvar _isArray = __webpack_require__(16);\n\t\n\t\n\t/**\n\t * Returns the position of the first occurrence of an item in an array, or -1\n\t * if the item is not included in the array. [`R.equals`](#equals) is used to\n\t * determine equality.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig a -> [a] -> Number\n\t * @param {*} target The item to find.\n\t * @param {Array} xs The array to search in.\n\t * @return {Number} the index of the target, or -1 if the target is not found.\n\t * @see R.lastIndexOf\n\t * @example\n\t *\n\t *      R.indexOf(3, [1,2,3,4]); //=> 2\n\t *      R.indexOf(10, [1,2,3,4]); //=> -1\n\t */\n\tmodule.exports = _curry2(function indexOf(target, xs) {\n\t  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n\t    xs.indexOf(target) :\n\t    _indexOf(xs, target, 0);\n\t});\n\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Returns all but the last element of the given list or string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category List\n\t * @sig [a] -> [a]\n\t * @sig String -> String\n\t * @param {*} list\n\t * @return {*}\n\t * @see R.last, R.head, R.tail\n\t * @example\n\t *\n\t *      R.init([1, 2, 3]);  //=> [1, 2]\n\t *      R.init([1, 2]);     //=> [1]\n\t *      R.init([1]);        //=> []\n\t *      R.init([]);         //=> []\n\t *\n\t *      R.init('abc');  //=> 'ab'\n\t *      R.init('ab');   //=> 'a'\n\t *      R.init('a');    //=> ''\n\t *      R.init('');     //=> ''\n\t */\n\tmodule.exports = slice(0, -1);\n\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _containsWith = __webpack_require__(34);\n\tvar _curry3 = __webpack_require__(3);\n\tvar _filter = __webpack_require__(54);\n\t\n\t\n\t/**\n\t * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n\t * `xs'` comprising each of the elements of `xs` which is equal to one or more\n\t * elements of `ys` according to `pred`.\n\t *\n\t * `pred` must be a binary function expecting an element from each list.\n\t *\n\t * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n\t * not be significant, but since `xs'` is ordered the implementation guarantees\n\t * that its values are in the same order as they appear in `xs`. Duplicates are\n\t * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Relation\n\t * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]\n\t * @param {Function} pred\n\t * @param {Array} xs\n\t * @param {Array} ys\n\t * @return {Array}\n\t * @see R.intersection\n\t * @example\n\t *\n\t *      R.innerJoin(\n\t *        (record, id) => record.id === id,\n\t *        [{id: 824, name: 'Richie Furay'},\n\t *         {id: 956, name: 'Dewey Martin'},\n\t *         {id: 313, name: 'Bruce Palmer'},\n\t *         {id: 456, name: 'Stephen Stills'},\n\t *         {id: 177, name: 'Neil Young'}],\n\t *        [177, 456, 999]\n\t *      );\n\t *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n\t */\n\tmodule.exports = _curry3(function innerJoin(pred, xs, ys) {\n\t  return _filter(function(x) { return _containsWith(pred, x, ys); }, xs);\n\t});\n\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Inserts the supplied element into the list, at the specified `index`. _Note that\n\t\n\t * this is not destructive_: it returns a copy of the list with the changes.\n\t * <small>No lists have been harmed in the application of this function.</small>\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.2\n\t * @category List\n\t * @sig Number -> a -> [a] -> [a]\n\t * @param {Number} index The position to insert the element\n\t * @param {*} elt The element to insert into the Array\n\t * @param {Array} list The list to insert into\n\t * @return {Array} A new Array with `elt` inserted at `index`.\n\t * @example\n\t *\n\t *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n\t */\n\tmodule.exports = _curry3(function insert(idx, elt, list) {\n\t  idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t  var result = Array.prototype.slice.call(list, 0);\n\t  result.splice(idx, 0, elt);\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n\t * destructive_: it returns a copy of the list with the changes.\n\t * <small>No lists have been harmed in the application of this function.</small>\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category List\n\t * @sig Number -> [a] -> [a] -> [a]\n\t * @param {Number} index The position to insert the sub-list\n\t * @param {Array} elts The sub-list to insert into the Array\n\t * @param {Array} list The list to insert the sub-list into\n\t * @return {Array} A new Array with `elts` inserted starting at `index`.\n\t * @example\n\t *\n\t *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n\t */\n\tmodule.exports = _curry3(function insertAll(idx, elts, list) {\n\t  idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t  return [].concat(Array.prototype.slice.call(list, 0, idx),\n\t                   elts,\n\t                   Array.prototype.slice.call(list, idx));\n\t});\n\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\t\n\t\n\t// A simple Set type that honours R.equals semantics\n\tmodule.exports = (function() {\n\t  function _Set() {\n\t    /* globals Set */\n\t    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n\t    this._items = {};\n\t  }\n\t\n\t  // until we figure out why jsdoc chokes on this\n\t  // @param item The item to add to the Set\n\t  // @returns {boolean} true if the item did not exist prior, otherwise false\n\t  //\n\t  _Set.prototype.add = function(item) {\n\t    return !hasOrAdd(item, true, this);\n\t  };\n\t\n\t  //\n\t  // @param item The item to check for existence in the Set\n\t  // @returns {boolean} true if the item exists in the Set, otherwise false\n\t  //\n\t  _Set.prototype.has = function(item) {\n\t    return hasOrAdd(item, false, this);\n\t  };\n\t\n\t  //\n\t  // Combines the logic for checking whether an item is a member of the set and\n\t  // for adding a new item to the set.\n\t  //\n\t  // @param item       The item to check or add to the Set instance.\n\t  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n\t  //                   already exist.\n\t  // @param set        The set instance to check or add to.\n\t  // @return {boolean} true if the item already existed, otherwise false.\n\t  //\n\t  function hasOrAdd(item, shouldAdd, set) {\n\t    var type = typeof item;\n\t    var prevSize, newSize;\n\t    switch (type) {\n\t      case 'string':\n\t      case 'number':\n\t        // distinguish between +0 and -0\n\t        if (item === 0 && 1 / item === -Infinity) {\n\t          if (set._items['-0']) {\n\t            return true;\n\t          } else {\n\t            if (shouldAdd) {\n\t              set._items['-0'] = true;\n\t            }\n\t            return false;\n\t          }\n\t        }\n\t        // these types can all utilise the native Set\n\t        if (set._nativeSet !== null) {\n\t          if (shouldAdd) {\n\t            prevSize = set._nativeSet.size;\n\t            set._nativeSet.add(item);\n\t            newSize = set._nativeSet.size;\n\t            return newSize === prevSize;\n\t          } else {\n\t            return set._nativeSet.has(item);\n\t          }\n\t        } else {\n\t          if (!(type in set._items)) {\n\t            if (shouldAdd) {\n\t              set._items[type] = {};\n\t              set._items[type][item] = true;\n\t            }\n\t            return false;\n\t          } else if (item in set._items[type]) {\n\t            return true;\n\t          } else {\n\t            if (shouldAdd) {\n\t              set._items[type][item] = true;\n\t            }\n\t            return false;\n\t          }\n\t        }\n\t\n\t      case 'boolean':\n\t        // set._items['boolean'] holds a two element array\n\t        // representing [ falseExists, trueExists ]\n\t        if (type in set._items) {\n\t          var bIdx = item ? 1 : 0;\n\t          if (set._items[type][bIdx]) {\n\t            return true;\n\t          } else {\n\t            if (shouldAdd) {\n\t              set._items[type][bIdx] = true;\n\t            }\n\t            return false;\n\t          }\n\t        } else {\n\t          if (shouldAdd) {\n\t            set._items[type] = item ? [false, true] : [true, false];\n\t          }\n\t          return false;\n\t        }\n\t\n\t      case 'function':\n\t        // compare functions for reference equality\n\t        if (set._nativeSet !== null) {\n\t          if (shouldAdd) {\n\t            prevSize = set._nativeSet.size;\n\t            set._nativeSet.add(item);\n\t            newSize = set._nativeSet.size;\n\t            return newSize === prevSize;\n\t          } else {\n\t            return set._nativeSet.has(item);\n\t          }\n\t        } else {\n\t          if (!(type in set._items)) {\n\t            if (shouldAdd) {\n\t              set._items[type] = [item];\n\t            }\n\t            return false;\n\t          }\n\t          if (!_contains(item, set._items[type])) {\n\t            if (shouldAdd) {\n\t              set._items[type].push(item);\n\t            }\n\t            return false;\n\t          }\n\t          return true;\n\t        }\n\t\n\t      case 'undefined':\n\t        if (set._items[type]) {\n\t          return true;\n\t        } else {\n\t          if (shouldAdd) {\n\t            set._items[type] = true;\n\t          }\n\t          return false;\n\t        }\n\t\n\t      case 'object':\n\t        if (item === null) {\n\t          if (!set._items['null']) {\n\t            if (shouldAdd) {\n\t              set._items['null'] = true;\n\t            }\n\t            return false;\n\t          }\n\t          return true;\n\t        }\n\t      /* falls through */\n\t      default:\n\t        // reduce the search size of heterogeneous sets by creating buckets\n\t        // for each type.\n\t        type = Object.prototype.toString.call(item);\n\t        if (!(type in set._items)) {\n\t          if (shouldAdd) {\n\t            set._items[type] = [item];\n\t          }\n\t          return false;\n\t        }\n\t        // scan through all previously applied items\n\t        if (!_contains(item, set._items[type])) {\n\t          if (shouldAdd) {\n\t            set._items[type].push(item);\n\t          }\n\t          return false;\n\t        }\n\t        return true;\n\t    }\n\t  }\n\t  return _Set;\n\t}());\n\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _aperture(n, list) {\n\t  var idx = 0;\n\t  var limit = list.length - (n - 1);\n\t  var acc = new Array(limit >= 0 ? limit : 0);\n\t  while (idx < limit) {\n\t    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n\t    idx += 1;\n\t  }\n\t  return acc;\n\t};\n\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _arrayFromIterator(iter) {\n\t  var list = [];\n\t  var next;\n\t  while (!(next = iter.next()).done) {\n\t    list.push(next.value);\n\t  }\n\t  return list;\n\t};\n\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar take = __webpack_require__(62);\n\t\n\tmodule.exports = function dropLast(n, xs) {\n\t  return take(n < xs.length ? xs.length - n : 0, xs);\n\t};\n\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function dropLastWhile(pred, list) {\n\t  var idx = list.length - 1;\n\t  while (idx >= 0 && pred(list[idx])) {\n\t    idx -= 1;\n\t  }\n\t  return Array.prototype.slice.call(list, 0, idx + 1);\n\t};\n\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arrayFromIterator = __webpack_require__(199);\n\tvar _functionName = __webpack_require__(205);\n\tvar _has = __webpack_require__(7);\n\tvar identical = __webpack_require__(89);\n\tvar keys = __webpack_require__(13);\n\tvar type = __webpack_require__(63);\n\t\n\t\n\tmodule.exports = function _equals(a, b, stackA, stackB) {\n\t  if (identical(a, b)) {\n\t    return true;\n\t  }\n\t\n\t  if (type(a) !== type(b)) {\n\t    return false;\n\t  }\n\t\n\t  if (a == null || b == null) {\n\t    return false;\n\t  }\n\t\n\t  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n\t    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) &&\n\t           typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n\t  }\n\t\n\t  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n\t    return typeof a.equals === 'function' && a.equals(b) &&\n\t           typeof b.equals === 'function' && b.equals(a);\n\t  }\n\t\n\t  switch (type(a)) {\n\t    case 'Arguments':\n\t    case 'Array':\n\t    case 'Object':\n\t      if (typeof a.constructor === 'function' &&\n\t          _functionName(a.constructor) === 'Promise') {\n\t        return a === b;\n\t      }\n\t      break;\n\t    case 'Boolean':\n\t    case 'Number':\n\t    case 'String':\n\t      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n\t        return false;\n\t      }\n\t      break;\n\t    case 'Date':\n\t      if (!identical(a.valueOf(), b.valueOf())) {\n\t        return false;\n\t      }\n\t      break;\n\t    case 'Error':\n\t      return a.name === b.name && a.message === b.message;\n\t    case 'RegExp':\n\t      if (!(a.source === b.source &&\n\t            a.global === b.global &&\n\t            a.ignoreCase === b.ignoreCase &&\n\t            a.multiline === b.multiline &&\n\t            a.sticky === b.sticky &&\n\t            a.unicode === b.unicode)) {\n\t        return false;\n\t      }\n\t      break;\n\t    case 'Map':\n\t    case 'Set':\n\t      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n\t        return false;\n\t      }\n\t      break;\n\t    case 'Int8Array':\n\t    case 'Uint8Array':\n\t    case 'Uint8ClampedArray':\n\t    case 'Int16Array':\n\t    case 'Uint16Array':\n\t    case 'Int32Array':\n\t    case 'Uint32Array':\n\t    case 'Float32Array':\n\t    case 'Float64Array':\n\t      break;\n\t    case 'ArrayBuffer':\n\t      break;\n\t    default:\n\t      // Values of other types are only equal if identical.\n\t      return false;\n\t  }\n\t\n\t  var keysA = keys(a);\n\t  if (keysA.length !== keys(b).length) {\n\t    return false;\n\t  }\n\t\n\t  var idx = stackA.length - 1;\n\t  while (idx >= 0) {\n\t    if (stackA[idx] === a) {\n\t      return stackB[idx] === b;\n\t    }\n\t    idx -= 1;\n\t  }\n\t\n\t  stackA.push(a);\n\t  stackB.push(b);\n\t  idx = keysA.length - 1;\n\t  while (idx >= 0) {\n\t    var key = keysA[idx];\n\t    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n\t      return false;\n\t    }\n\t    idx -= 1;\n\t  }\n\t  stackA.pop();\n\t  stackB.pop();\n\t  return true;\n\t};\n\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _forceReduced = __webpack_require__(204);\n\tvar _isArrayLike = __webpack_require__(36);\n\tvar _reduce = __webpack_require__(10);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\tmodule.exports = (function() {\n\t  var preservingReduced = function(xf) {\n\t    return {\n\t      '@@transducer/init': _xfBase.init,\n\t      '@@transducer/result': function(result) {\n\t        return xf['@@transducer/result'](result);\n\t      },\n\t      '@@transducer/step': function(result, input) {\n\t        var ret = xf['@@transducer/step'](result, input);\n\t        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n\t      }\n\t    };\n\t  };\n\t\n\t  return function _xcat(xf) {\n\t    var rxf = preservingReduced(xf);\n\t    return {\n\t      '@@transducer/init': _xfBase.init,\n\t      '@@transducer/result': function(result) {\n\t        return rxf['@@transducer/result'](result);\n\t      },\n\t      '@@transducer/step': function(result, input) {\n\t        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n\t      }\n\t    };\n\t  };\n\t}());\n\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _forceReduced(x) {\n\t  return {\n\t    '@@transducer/value': x,\n\t    '@@transducer/reduced': true\n\t  };\n\t};\n\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _functionName(f) {\n\t  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n\t  var match = String(f).match(/^function (\\w*)/);\n\t  return match == null ? '' : match[1];\n\t};\n\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _isRegExp(x) {\n\t  return Object.prototype.toString.call(x) === '[object RegExp]';\n\t};\n\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _has = __webpack_require__(7);\n\t\n\t// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\tmodule.exports = function _objectAssign(target) {\n\t  if (target == null) {\n\t    throw new TypeError('Cannot convert undefined or null to object');\n\t  }\n\t\n\t  var output = Object(target);\n\t  var idx = 1;\n\t  var length = arguments.length;\n\t  while (idx < length) {\n\t    var source = arguments[idx];\n\t    if (source != null) {\n\t      for (var nextKey in source) {\n\t        if (_has(nextKey, source)) {\n\t          output[nextKey] = source[nextKey];\n\t        }\n\t      }\n\t    }\n\t    idx += 1;\n\t  }\n\t  return output;\n\t};\n\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _of(x) { return [x]; };\n\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _pipe(f, g) {\n\t  return function() {\n\t    return g.call(this, f.apply(this, arguments));\n\t  };\n\t};\n\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _pipeP(f, g) {\n\t  return function() {\n\t    var ctx = this;\n\t    return f.apply(ctx, arguments).then(function(x) {\n\t      return g.call(ctx, x);\n\t    });\n\t  };\n\t};\n\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function _quote(s) {\n\t  var escaped = s\n\t    .replace(/\\\\/g, '\\\\\\\\')\n\t    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n\t    .replace(/\\f/g, '\\\\f')\n\t    .replace(/\\n/g, '\\\\n')\n\t    .replace(/\\r/g, '\\\\r')\n\t    .replace(/\\t/g, '\\\\t')\n\t    .replace(/\\v/g, '\\\\v')\n\t    .replace(/\\0/g, '\\\\0');\n\t\n\t  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n\t};\n\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _assign = __webpack_require__(53);\n\tvar _identity = __webpack_require__(55);\n\tvar _isArrayLike = __webpack_require__(36);\n\tvar _isTransformer = __webpack_require__(58);\n\tvar objOf = __webpack_require__(111);\n\t\n\t\n\tmodule.exports = (function() {\n\t  var _stepCatArray = {\n\t    '@@transducer/init': Array,\n\t    '@@transducer/step': function(xs, x) {\n\t      xs.push(x);\n\t      return xs;\n\t    },\n\t    '@@transducer/result': _identity\n\t  };\n\t  var _stepCatString = {\n\t    '@@transducer/init': String,\n\t    '@@transducer/step': function(a, b) { return a + b; },\n\t    '@@transducer/result': _identity\n\t  };\n\t  var _stepCatObject = {\n\t    '@@transducer/init': Object,\n\t    '@@transducer/step': function(result, input) {\n\t      return _assign(\n\t        result,\n\t        _isArrayLike(input) ? objOf(input[0], input[1]) : input\n\t      );\n\t    },\n\t    '@@transducer/result': _identity\n\t  };\n\t\n\t  return function _stepCat(obj) {\n\t    if (_isTransformer(obj)) {\n\t      return obj;\n\t    }\n\t    if (_isArrayLike(obj)) {\n\t      return _stepCatArray;\n\t    }\n\t    if (typeof obj === 'string') {\n\t      return _stepCatString;\n\t    }\n\t    if (typeof obj === 'object') {\n\t      return _stepCatObject;\n\t    }\n\t    throw new Error('Cannot create transformer for ' + obj);\n\t  };\n\t}());\n\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n\t */\n\tmodule.exports = (function() {\n\t  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\t\n\t  return typeof Date.prototype.toISOString === 'function' ?\n\t    function _toISOString(d) {\n\t      return d.toISOString();\n\t    } :\n\t    function _toISOString(d) {\n\t      return (\n\t        d.getUTCFullYear() + '-' +\n\t        pad(d.getUTCMonth() + 1) + '-' +\n\t        pad(d.getUTCDate()) + 'T' +\n\t        pad(d.getUTCHours()) + ':' +\n\t        pad(d.getUTCMinutes()) + ':' +\n\t        pad(d.getUTCSeconds()) + '.' +\n\t        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n\t      );\n\t    };\n\t}());\n\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _map = __webpack_require__(39);\n\tvar _quote = __webpack_require__(211);\n\tvar _toISOString = __webpack_require__(213);\n\tvar keys = __webpack_require__(13);\n\tvar reject = __webpack_require__(45);\n\t\n\t\n\tmodule.exports = function _toString(x, seen) {\n\t  var recur = function recur(y) {\n\t    var xs = seen.concat([x]);\n\t    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n\t  };\n\t\n\t  //  mapPairs :: (Object, [String]) -> [String]\n\t  var mapPairs = function(obj, keys) {\n\t    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n\t  };\n\t\n\t  switch (Object.prototype.toString.call(x)) {\n\t    case '[object Arguments]':\n\t      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\t    case '[object Array]':\n\t      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n\t    case '[object Boolean]':\n\t      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\t    case '[object Date]':\n\t      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\t    case '[object Null]':\n\t      return 'null';\n\t    case '[object Number]':\n\t      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\t    case '[object String]':\n\t      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\t    case '[object Undefined]':\n\t      return 'undefined';\n\t    default:\n\t      if (typeof x.toString === 'function') {\n\t        var repr = x.toString();\n\t        if (repr !== '[object Object]') {\n\t          return repr;\n\t        }\n\t      }\n\t      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n\t  }\n\t};\n\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XAll(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.all = true;\n\t  }\n\t  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\t  XAll.prototype['@@transducer/result'] = function(result) {\n\t    if (this.all) {\n\t      result = this.xf['@@transducer/step'](result, true);\n\t    }\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XAll.prototype['@@transducer/step'] = function(result, input) {\n\t    if (!this.f(input)) {\n\t      this.all = false;\n\t      result = _reduced(this.xf['@@transducer/step'](result, false));\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XAperture(n, xf) {\n\t    this.xf = xf;\n\t    this.pos = 0;\n\t    this.full = false;\n\t    this.acc = new Array(n);\n\t  }\n\t  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\t  XAperture.prototype['@@transducer/result'] = function(result) {\n\t    this.acc = null;\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XAperture.prototype['@@transducer/step'] = function(result, input) {\n\t    this.store(input);\n\t    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n\t  };\n\t  XAperture.prototype.store = function(input) {\n\t    this.acc[this.pos] = input;\n\t    this.pos += 1;\n\t    if (this.pos === this.acc.length) {\n\t      this.pos = 0;\n\t      this.full = true;\n\t    }\n\t  };\n\t  XAperture.prototype.getCopy = function() {\n\t    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n\t                   Array.prototype.slice.call(this.acc, 0, this.pos));\n\t  };\n\t\n\t  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n\t}());\n\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _flatCat = __webpack_require__(203);\n\tvar map = __webpack_require__(8);\n\t\n\t\n\tmodule.exports = _curry2(function _xchain(f, xf) {\n\t  return map(f, _flatCat(xf));\n\t});\n\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XDrop(n, xf) {\n\t    this.xf = xf;\n\t    this.n = n;\n\t  }\n\t  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n\t  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\t  XDrop.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.n > 0) {\n\t      this.n -= 1;\n\t      return result;\n\t    }\n\t    return this.xf['@@transducer/step'](result, input);\n\t  };\n\t\n\t  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n\t}());\n\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XDropLast(n, xf) {\n\t    this.xf = xf;\n\t    this.pos = 0;\n\t    this.full = false;\n\t    this.acc = new Array(n);\n\t  }\n\t  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\t  XDropLast.prototype['@@transducer/result'] =  function(result) {\n\t    this.acc = null;\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.full) {\n\t      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n\t    }\n\t    this.store(input);\n\t    return result;\n\t  };\n\t  XDropLast.prototype.store = function(input) {\n\t    this.acc[this.pos] = input;\n\t    this.pos += 1;\n\t    if (this.pos === this.acc.length) {\n\t      this.pos = 0;\n\t      this.full = true;\n\t    }\n\t  };\n\t\n\t  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n\t}());\n\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduce = __webpack_require__(10);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\tmodule.exports = (function() {\n\t  function XDropLastWhile(fn, xf) {\n\t    this.f = fn;\n\t    this.retained = [];\n\t    this.xf = xf;\n\t  }\n\t  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n\t    this.retained = null;\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.f(input) ? this.retain(result, input)\n\t                         : this.flush(result, input);\n\t  };\n\t  XDropLastWhile.prototype.flush = function(result, input) {\n\t    result = _reduce(\n\t      this.xf['@@transducer/step'],\n\t      result,\n\t      this.retained\n\t    );\n\t    this.retained = [];\n\t    return this.xf['@@transducer/step'](result, input);\n\t  };\n\t  XDropLastWhile.prototype.retain = function(result, input) {\n\t    this.retained.push(input);\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n\t}());\n\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XDropWhile(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.f) {\n\t      if (this.f(input)) {\n\t        return result;\n\t      }\n\t      this.f = null;\n\t    }\n\t    return this.xf['@@transducer/step'](result, input);\n\t  };\n\t\n\t  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFilter(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\t  XFilter.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n\t  };\n\t\n\t  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFind(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.found = false;\n\t  }\n\t  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFind.prototype['@@transducer/result'] = function(result) {\n\t    if (!this.found) {\n\t      result = this.xf['@@transducer/step'](result, void 0);\n\t    }\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XFind.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.f(input)) {\n\t      this.found = true;\n\t      result = _reduced(this.xf['@@transducer/step'](result, input));\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFindIndex(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.idx = -1;\n\t    this.found = false;\n\t  }\n\t  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFindIndex.prototype['@@transducer/result'] = function(result) {\n\t    if (!this.found) {\n\t      result = this.xf['@@transducer/step'](result, -1);\n\t    }\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n\t    this.idx += 1;\n\t    if (this.f(input)) {\n\t      this.found = true;\n\t      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFindLast(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFindLast.prototype['@@transducer/result'] = function(result) {\n\t    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n\t  };\n\t  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n\t    if (this.f(input)) {\n\t      this.last = input;\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XFindLastIndex(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t    this.idx = -1;\n\t    this.lastIdx = -1;\n\t  }\n\t  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n\t    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n\t  };\n\t  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n\t    this.idx += 1;\n\t    if (this.f(input)) {\n\t      this.lastIdx = this.idx;\n\t    }\n\t    return result;\n\t  };\n\t\n\t  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 227 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XMap(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XMap.prototype['@@transducer/init'] = _xfBase.init;\n\t  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\t  XMap.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.xf['@@transducer/step'](result, this.f(input));\n\t  };\n\t\n\t  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 228 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curryN = __webpack_require__(35);\n\tvar _has = __webpack_require__(7);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n\t    this.valueFn = valueFn;\n\t    this.valueAcc = valueAcc;\n\t    this.keyFn = keyFn;\n\t    this.xf = xf;\n\t    this.inputs = {};\n\t  }\n\t  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\t  XReduceBy.prototype['@@transducer/result'] = function(result) {\n\t    var key;\n\t    for (key in this.inputs) {\n\t      if (_has(key, this.inputs)) {\n\t        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\t        if (result['@@transducer/reduced']) {\n\t          result = result['@@transducer/value'];\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    this.inputs = null;\n\t    return this.xf['@@transducer/result'](result);\n\t  };\n\t  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n\t    var key = this.keyFn(input);\n\t    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n\t    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n\t    return result;\n\t  };\n\t\n\t  return _curryN(4, [],\n\t                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n\t                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n\t                 });\n\t}());\n\n\n/***/ }),\n/* 229 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\tmodule.exports = (function() {\n\t  function XTake(n, xf) {\n\t    this.xf = xf;\n\t    this.n = n;\n\t    this.i = 0;\n\t  }\n\t  XTake.prototype['@@transducer/init'] = _xfBase.init;\n\t  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\t  XTake.prototype['@@transducer/step'] = function(result, input) {\n\t    this.i += 1;\n\t    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n\t    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n\t  };\n\t\n\t  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n\t}());\n\n\n/***/ }),\n/* 230 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduced = __webpack_require__(17);\n\tvar _xfBase = __webpack_require__(5);\n\t\n\t\n\tmodule.exports = (function() {\n\t  function XTakeWhile(f, xf) {\n\t    this.xf = xf;\n\t    this.f = f;\n\t  }\n\t  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n\t    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n\t  };\n\t\n\t  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n\t}());\n\n\n/***/ }),\n/* 231 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _filter = __webpack_require__(54);\n\tvar flip = __webpack_require__(33);\n\tvar uniq = __webpack_require__(64);\n\t\n\t\n\t/**\n\t * Combines two lists into a set (i.e. no duplicates) composed of those\n\t * elements common to both lists.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig [*] -> [*] -> [*]\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The list of elements found in both `list1` and `list2`.\n\t * @see R.innerJoin\n\t * @example\n\t *\n\t *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n\t */\n\tmodule.exports = _curry2(function intersection(list1, list2) {\n\t  var lookupList, filteredList;\n\t  if (list1.length > list2.length) {\n\t    lookupList = list1;\n\t    filteredList = list2;\n\t  } else {\n\t    lookupList = list2;\n\t    filteredList = list1;\n\t  }\n\t  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n\t});\n\n\n/***/ }),\n/* 232 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _containsWith = __webpack_require__(34);\n\tvar _curry3 = __webpack_require__(3);\n\tvar uniqWith = __webpack_require__(65);\n\t\n\t\n\t/**\n\t * Combines two lists into a set (i.e. no duplicates) composed of those\n\t * elements common to both lists. Duplication is determined according to the\n\t * value returned by applying the supplied predicate to two list elements.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n\t * @param {Function} pred A predicate function that determines whether\n\t *        the two supplied elements are equal.\n\t * @param {Array} list1 One list of items to compare\n\t * @param {Array} list2 A second list of items to compare\n\t * @return {Array} A new list containing those elements common to both lists.\n\t * @see R.innerJoin\n\t * @deprecated since v0.24.0\n\t * @example\n\t *\n\t *      var buffaloSpringfield = [\n\t *        {id: 824, name: 'Richie Furay'},\n\t *        {id: 956, name: 'Dewey Martin'},\n\t *        {id: 313, name: 'Bruce Palmer'},\n\t *        {id: 456, name: 'Stephen Stills'},\n\t *        {id: 177, name: 'Neil Young'}\n\t *      ];\n\t *      var csny = [\n\t *        {id: 204, name: 'David Crosby'},\n\t *        {id: 456, name: 'Stephen Stills'},\n\t *        {id: 539, name: 'Graham Nash'},\n\t *        {id: 177, name: 'Neil Young'}\n\t *      ];\n\t *\n\t *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n\t *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n\t */\n\tmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n\t  var lookupList, filteredList;\n\t  if (list1.length > list2.length) {\n\t    lookupList = list1;\n\t    filteredList = list2;\n\t  } else {\n\t    lookupList = list2;\n\t    filteredList = list1;\n\t  }\n\t  var results = [];\n\t  var idx = 0;\n\t  while (idx < filteredList.length) {\n\t    if (_containsWith(pred, filteredList[idx], lookupList)) {\n\t      results[results.length] = filteredList[idx];\n\t    }\n\t    idx += 1;\n\t  }\n\t  return uniqWith(pred, results);\n\t});\n\n\n/***/ }),\n/* 233 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _checkForMethod = __webpack_require__(23);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a new list with the separator interposed between elements.\n\t *\n\t * Dispatches to the `intersperse` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category List\n\t * @sig a -> [a] -> [a]\n\t * @param {*} separator The element to add to the list.\n\t * @param {Array} list The list to be interposed.\n\t * @return {Array} The new list.\n\t * @example\n\t *\n\t *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n\t */\n\tmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n\t  var out = [];\n\t  var idx = 0;\n\t  var length = list.length;\n\t  while (idx < length) {\n\t    if (idx === length - 1) {\n\t      out.push(list[idx]);\n\t    } else {\n\t      out.push(list[idx], separator);\n\t    }\n\t    idx += 1;\n\t  }\n\t  return out;\n\t}));\n\n\n/***/ }),\n/* 234 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _clone = __webpack_require__(90);\n\tvar _curry3 = __webpack_require__(3);\n\tvar _isTransformer = __webpack_require__(58);\n\tvar _reduce = __webpack_require__(10);\n\tvar _stepCat = __webpack_require__(212);\n\t\n\t\n\t/**\n\t * Transforms the items of the list with the transducer and appends the\n\t * transformed items to the accumulator using an appropriate iterator function\n\t * based on the accumulator type.\n\t *\n\t * The accumulator can be an array, string, object or a transformer. Iterated\n\t * items will be appended to arrays and concatenated to strings. Objects will\n\t * be merged directly or 2-item arrays will be merged as key, value pairs.\n\t *\n\t * The accumulator can also be a transformer object that provides a 2-arity\n\t * reducing iterator function, step, 0-arity initial value function, init, and\n\t * 1-arity result extraction function result. The step function is used as the\n\t * iterator function in reduce. The result function is used to convert the\n\t * final accumulator into the return type and in most cases is R.identity. The\n\t * init function is used to provide the initial accumulator.\n\t *\n\t * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n\t * transducer.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category List\n\t * @sig a -> (b -> b) -> [c] -> a\n\t * @param {*} acc The initial accumulator value.\n\t * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @example\n\t *\n\t *      var numbers = [1, 2, 3, 4];\n\t *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t *\n\t *      R.into([], transducer, numbers); //=> [2, 3]\n\t *\n\t *      var intoArray = R.into([]);\n\t *      intoArray(transducer, numbers); //=> [2, 3]\n\t */\n\tmodule.exports = _curry3(function into(acc, xf, list) {\n\t  return _isTransformer(acc) ?\n\t    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n\t    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n\t});\n\n\n/***/ }),\n/* 235 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _has = __webpack_require__(7);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n\t * duplicate values by putting the values into an array.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Object\n\t * @sig {s: x} -> {x: [ s, ... ]}\n\t * @param {Object} obj The object or array to invert\n\t * @return {Object} out A new object with keys in an array.\n\t * @see R.invertObj\n\t * @example\n\t *\n\t *      var raceResultsByFirstName = {\n\t *        first: 'alice',\n\t *        second: 'jake',\n\t *        third: 'alice',\n\t *      };\n\t *      R.invert(raceResultsByFirstName);\n\t *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n\t */\n\tmodule.exports = _curry1(function invert(obj) {\n\t  var props = keys(obj);\n\t  var len = props.length;\n\t  var idx = 0;\n\t  var out = {};\n\t\n\t  while (idx < len) {\n\t    var key = props[idx];\n\t    var val = obj[key];\n\t    var list = _has(val, out) ? out[val] : (out[val] = []);\n\t    list[list.length] = key;\n\t    idx += 1;\n\t  }\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 236 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * Returns a new object with the keys of the given object as values, and the\n\t * values of the given object, which are coerced to strings, as keys. Note\n\t * that the last key found is preferred when handling the same value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Object\n\t * @sig {s: x} -> {x: s}\n\t * @param {Object} obj The object or array to invert\n\t * @return {Object} out A new object\n\t * @see R.invert\n\t * @example\n\t *\n\t *      var raceResults = {\n\t *        first: 'alice',\n\t *        second: 'jake'\n\t *      };\n\t *      R.invertObj(raceResults);\n\t *      //=> { 'alice': 'first', 'jake':'second' }\n\t *\n\t *      // Alternatively:\n\t *      var raceResults = ['alice', 'jake'];\n\t *      R.invertObj(raceResults);\n\t *      //=> { 'alice': '0', 'jake':'1' }\n\t */\n\tmodule.exports = _curry1(function invertObj(obj) {\n\t  var props = keys(obj);\n\t  var len = props.length;\n\t  var idx = 0;\n\t  var out = {};\n\t\n\t  while (idx < len) {\n\t    var key = props[idx];\n\t    out[obj[key]] = key;\n\t    idx += 1;\n\t  }\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 237 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar empty = __webpack_require__(88);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Returns `true` if the given value is its type's empty value; `false`\n\t * otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Logic\n\t * @sig a -> Boolean\n\t * @param {*} x\n\t * @return {Boolean}\n\t * @see R.empty\n\t * @example\n\t *\n\t *      R.isEmpty([1, 2, 3]);   //=> false\n\t *      R.isEmpty([]);          //=> true\n\t *      R.isEmpty('');          //=> true\n\t *      R.isEmpty(null);        //=> false\n\t *      R.isEmpty({});          //=> true\n\t *      R.isEmpty({length: 0}); //=> false\n\t */\n\tmodule.exports = _curry1(function isEmpty(x) {\n\t  return x != null && equals(x, empty(x));\n\t});\n\n\n/***/ }),\n/* 238 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar invoker = __webpack_require__(25);\n\t\n\t\n\t/**\n\t * Returns a string made by inserting the `separator` between each element and\n\t * concatenating all the elements into a single string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig String -> [a] -> String\n\t * @param {Number|String} separator The string used to separate the elements.\n\t * @param {Array} xs The elements to join into a string.\n\t * @return {String} str The string made by concatenating `xs` with `separator`.\n\t * @see R.split\n\t * @example\n\t *\n\t *      var spacer = R.join(' ');\n\t *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n\t *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n\t */\n\tmodule.exports = invoker(1, 'join');\n\n\n/***/ }),\n/* 239 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Returns a list containing the names of all the properties of the supplied\n\t * object, including prototype properties.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category Object\n\t * @sig {k: v} -> [k]\n\t * @param {Object} obj The object to extract properties from\n\t * @return {Array} An array of the object's own and prototype properties.\n\t * @see R.keys, R.valuesIn\n\t * @example\n\t *\n\t *      var F = function() { this.x = 'X'; };\n\t *      F.prototype.y = 'Y';\n\t *      var f = new F();\n\t *      R.keysIn(f); //=> ['x', 'y']\n\t */\n\tmodule.exports = _curry1(function keysIn(obj) {\n\t  var prop;\n\t  var ks = [];\n\t  for (prop in obj) {\n\t    ks[ks.length] = prop;\n\t  }\n\t  return ks;\n\t});\n\n\n/***/ }),\n/* 240 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isArray = __webpack_require__(16);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Returns the position of the last occurrence of an item in an array, or -1 if\n\t * the item is not included in the array. [`R.equals`](#equals) is used to\n\t * determine equality.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig a -> [a] -> Number\n\t * @param {*} target The item to find.\n\t * @param {Array} xs The array to search in.\n\t * @return {Number} the index of the target, or -1 if the target is not found.\n\t * @see R.indexOf\n\t * @example\n\t *\n\t *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n\t *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n\t */\n\tmodule.exports = _curry2(function lastIndexOf(target, xs) {\n\t  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n\t    return xs.lastIndexOf(target);\n\t  } else {\n\t    var idx = xs.length - 1;\n\t    while (idx >= 0) {\n\t      if (equals(xs[idx], target)) {\n\t        return idx;\n\t      }\n\t      idx -= 1;\n\t    }\n\t    return -1;\n\t  }\n\t});\n\n\n/***/ }),\n/* 241 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar lens = __webpack_require__(40);\n\tvar nth = __webpack_require__(26);\n\tvar update = __webpack_require__(66);\n\t\n\t\n\t/**\n\t * Returns a lens whose focus is the specified index.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig Number -> Lens s a\n\t * @param {Number} n\n\t * @return {Lens}\n\t * @see R.view, R.set, R.over\n\t * @example\n\t *\n\t *      var headLens = R.lensIndex(0);\n\t *\n\t *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n\t *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n\t *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n\t */\n\tmodule.exports = _curry1(function lensIndex(n) {\n\t  return lens(nth(n), update(n));\n\t});\n\n\n/***/ }),\n/* 242 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar assocPath = __webpack_require__(77);\n\tvar lens = __webpack_require__(40);\n\tvar path = __webpack_require__(27);\n\t\n\t\n\t/**\n\t * Returns a lens whose focus is the specified path.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Object\n\t * @typedefn Idx = String | Int\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig [Idx] -> Lens s a\n\t * @param {Array} path The path to use.\n\t * @return {Lens}\n\t * @see R.view, R.set, R.over\n\t * @example\n\t *\n\t *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n\t *\n\t *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n\t *      //=> 2\n\t *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n\t *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n\t *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n\t *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n\t */\n\tmodule.exports = _curry1(function lensPath(p) {\n\t  return lens(path(p), assocPath(p));\n\t});\n\n\n/***/ }),\n/* 243 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar assoc = __webpack_require__(31);\n\tvar lens = __webpack_require__(40);\n\tvar prop = __webpack_require__(60);\n\t\n\t\n\t/**\n\t * Returns a lens whose focus is the specified property.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig String -> Lens s a\n\t * @param {String} k\n\t * @return {Lens}\n\t * @see R.view, R.set, R.over\n\t * @example\n\t *\n\t *      var xLens = R.lensProp('x');\n\t *\n\t *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t */\n\tmodule.exports = _curry1(function lensProp(k) {\n\t  return lens(prop(k), assoc(k));\n\t});\n\n\n/***/ }),\n/* 244 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if the first argument is less than the second; `false`\n\t * otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> Boolean\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t * @see R.gt\n\t * @example\n\t *\n\t *      R.lt(2, 1); //=> false\n\t *      R.lt(2, 2); //=> false\n\t *      R.lt(2, 3); //=> true\n\t *      R.lt('a', 'z'); //=> true\n\t *      R.lt('z', 'a'); //=> false\n\t */\n\tmodule.exports = _curry2(function lt(a, b) { return a < b; });\n\n\n/***/ }),\n/* 245 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns `true` if the first argument is less than or equal to the second;\n\t * `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> Boolean\n\t * @param {Number} a\n\t * @param {Number} b\n\t * @return {Boolean}\n\t * @see R.gte\n\t * @example\n\t *\n\t *      R.lte(2, 1); //=> false\n\t *      R.lte(2, 2); //=> true\n\t *      R.lte(2, 3); //=> true\n\t *      R.lte('a', 'z'); //=> true\n\t *      R.lte('z', 'a'); //=> false\n\t */\n\tmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n\n\n/***/ }),\n/* 246 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * The `mapAccum` function behaves like a combination of map and reduce; it\n\t * applies a function to each element of a list, passing an accumulating\n\t * parameter from left to right, and returning a final value of this\n\t * accumulator together with the new list.\n\t *\n\t * The iterator function receives two arguments, *acc* and *value*, and should\n\t * return a tuple *[acc, value]*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category List\n\t * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n\t * @param {Function} fn The function to be called on every element of the input `list`.\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.addIndex, R.mapAccumRight\n\t * @example\n\t *\n\t *      var digits = ['1', '2', '3', '4'];\n\t *      var appender = (a, b) => [a + b, a + b];\n\t *\n\t *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n\t * @symb R.mapAccum(f, a, [b, c, d]) = [\n\t *   f(f(f(a, b)[0], c)[0], d)[0],\n\t *   [\n\t *     f(a, b)[1],\n\t *     f(f(a, b)[0], c)[1],\n\t *     f(f(f(a, b)[0], c)[0], d)[1]\n\t *   ]\n\t * ]\n\t */\n\tmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var result = [];\n\t  var tuple = [acc];\n\t  while (idx < len) {\n\t    tuple = fn(tuple[0], list[idx]);\n\t    result[idx] = tuple[1];\n\t    idx += 1;\n\t  }\n\t  return [tuple[0], result];\n\t});\n\n\n/***/ }),\n/* 247 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * The `mapAccumRight` function behaves like a combination of map and reduce; it\n\t * applies a function to each element of a list, passing an accumulating\n\t * parameter from right to left, and returning a final value of this\n\t * accumulator together with the new list.\n\t *\n\t * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n\t * the right to the left.\n\t *\n\t * The iterator function receives two arguments, *value* and *acc*, and should\n\t * return a tuple *[value, acc]*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category List\n\t * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n\t * @param {Function} fn The function to be called on every element of the input `list`.\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.addIndex, R.mapAccum\n\t * @example\n\t *\n\t *      var digits = ['1', '2', '3', '4'];\n\t *      var append = (a, b) => [a + b, a + b];\n\t *\n\t *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n\t * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n\t *   [\n\t *     f(b, f(c, f(d, a)[0])[0])[1],\n\t *     f(c, f(d, a)[0])[1],\n\t *     f(d, a)[1],\n\t *   ]\n\t *   f(b, f(c, f(d, a)[0])[0])[0],\n\t * ]\n\t */\n\tmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n\t  var idx = list.length - 1;\n\t  var result = [];\n\t  var tuple = [acc];\n\t  while (idx >= 0) {\n\t    tuple = fn(list[idx], tuple[0]);\n\t    result[idx] = tuple[1];\n\t    idx -= 1;\n\t  }\n\t  return [result, tuple[0]];\n\t});\n\n\n/***/ }),\n/* 248 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _reduce = __webpack_require__(10);\n\tvar keys = __webpack_require__(13);\n\t\n\t\n\t/**\n\t * An Object-specific version of [`map`](#map). The function is applied to three\n\t * arguments: *(value, key, obj)*. If only the value is significant, use\n\t * [`map`](#map) instead.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Object\n\t * @sig ((*, String, Object) -> *) -> Object -> Object\n\t * @param {Function} fn\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @see R.map\n\t * @example\n\t *\n\t *      var values = { x: 1, y: 2, z: 3 };\n\t *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n\t *\n\t *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n\t */\n\tmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n\t  return _reduce(function(acc, key) {\n\t    acc[key] = fn(obj[key], key, obj);\n\t    return acc;\n\t  }, {}, keys(obj));\n\t});\n\n\n/***/ }),\n/* 249 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Tests a regular expression against a String. Note that this function will\n\t * return an empty array when there are no matches. This differs from\n\t * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n\t * which returns `null` when there are no matches.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category String\n\t * @sig RegExp -> String -> [String | Undefined]\n\t * @param {RegExp} rx A regular expression.\n\t * @param {String} str The string to match against\n\t * @return {Array} The list of matches or empty array.\n\t * @see R.test\n\t * @example\n\t *\n\t *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n\t *      R.match(/a/, 'b'); //=> []\n\t *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n\t */\n\tmodule.exports = _curry2(function match(rx, str) {\n\t  return str.match(rx) || [];\n\t});\n\n\n/***/ }),\n/* 250 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isInteger = __webpack_require__(56);\n\t\n\t\n\t/**\n\t * `mathMod` behaves like the modulo operator should mathematically, unlike the\n\t * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n\t * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n\t * arguments, and returns NaN when the modulus is zero or negative.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} m The dividend.\n\t * @param {Number} p the modulus.\n\t * @return {Number} The result of `b mod a`.\n\t * @see R.modulo\n\t * @example\n\t *\n\t *      R.mathMod(-17, 5);  //=> 3\n\t *      R.mathMod(17, 5);   //=> 2\n\t *      R.mathMod(17, -5);  //=> NaN\n\t *      R.mathMod(17, 0);   //=> NaN\n\t *      R.mathMod(17.2, 5); //=> NaN\n\t *      R.mathMod(17, 5.3); //=> NaN\n\t *\n\t *      var clock = R.mathMod(R.__, 12);\n\t *      clock(15); //=> 3\n\t *      clock(24); //=> 0\n\t *\n\t *      var seventeenMod = R.mathMod(17);\n\t *      seventeenMod(3);  //=> 2\n\t *      seventeenMod(4);  //=> 1\n\t *      seventeenMod(10); //=> 7\n\t */\n\tmodule.exports = _curry2(function mathMod(m, p) {\n\t  if (!_isInteger(m)) { return NaN; }\n\t  if (!_isInteger(p) || p < 1) { return NaN; }\n\t  return ((m % p) + p) % p;\n\t});\n\n\n/***/ }),\n/* 251 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Takes a function and two values, and returns whichever value produces the\n\t * larger result when passed to the provided function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Relation\n\t * @sig Ord b => (a -> b) -> a -> a -> a\n\t * @param {Function} f\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {*}\n\t * @see R.max, R.minBy\n\t * @example\n\t *\n\t *      //  square :: Number -> Number\n\t *      var square = n => n * n;\n\t *\n\t *      R.maxBy(square, -3, 2); //=> -3\n\t *\n\t *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n\t *      R.reduce(R.maxBy(square), 0, []); //=> 0\n\t */\n\tmodule.exports = _curry3(function maxBy(f, a, b) {\n\t  return f(b) > f(a) ? b : a;\n\t});\n\n\n/***/ }),\n/* 252 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar mean = __webpack_require__(107);\n\t\n\t\n\t/**\n\t * Returns the median of the given list of numbers.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Math\n\t * @sig [Number] -> Number\n\t * @param {Array} list\n\t * @return {Number}\n\t * @see R.mean\n\t * @example\n\t *\n\t *      R.median([2, 9, 7]); //=> 7\n\t *      R.median([7, 2, 10, 9]); //=> 8\n\t *      R.median([]); //=> NaN\n\t */\n\tmodule.exports = _curry1(function median(list) {\n\t  var len = list.length;\n\t  if (len === 0) {\n\t    return NaN;\n\t  }\n\t  var width = 2 - len % 2;\n\t  var idx = (len - width) / 2;\n\t  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : 0;\n\t  }).slice(idx, idx + width));\n\t});\n\n\n/***/ }),\n/* 253 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar memoizeWith = __webpack_require__(108);\n\tvar toString = __webpack_require__(29);\n\t\n\t\n\t/**\n\t * Creates a new function that, when invoked, caches the result of calling `fn`\n\t * for a given argument set and returns the result. Subsequent calls to the\n\t * memoized `fn` with the same argument set will not result in an additional\n\t * call to `fn`; instead, the cached result for that set of arguments will be\n\t * returned.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (*... -> a) -> (*... -> a)\n\t * @param {Function} fn The function to memoize.\n\t * @return {Function} Memoized version of `fn`.\n\t * @see R.memoizeWith\n\t * @example\n\t *\n\t *      let count = 0;\n\t *      const factorial = R.memoize(n => {\n\t *        count += 1;\n\t *        return R.product(R.range(1, n + 1));\n\t *      });\n\t *      factorial(5); //=> 120\n\t *      factorial(5); //=> 120\n\t *      factorial(5); //=> 120\n\t *      count; //=> 1\n\t */\n\tmodule.exports = memoizeWith(function() {\n\t  return toString(arguments);\n\t});\n\n\n/***/ }),\n/* 254 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _assign = __webpack_require__(53);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Create a new object with the own properties of the first object merged with\n\t * the own properties of the second object. If a key exists in both objects,\n\t * the value from the second object will be used.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig {k: v} -> {k: v} -> {k: v}\n\t * @param {Object} l\n\t * @param {Object} r\n\t * @return {Object}\n\t * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n\t * @example\n\t *\n\t *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n\t *      //=> { 'name': 'fred', 'age': 40 }\n\t *\n\t *      var resetToDefault = R.merge(R.__, {x: 0});\n\t *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n\t * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n\t */\n\tmodule.exports = _curry2(function merge(l, r) {\n\t  return _assign({}, l, r);\n\t});\n\n\n/***/ }),\n/* 255 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _assign = __webpack_require__(53);\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Merges a list of objects together into one object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category List\n\t * @sig [{k: v}] -> {k: v}\n\t * @param {Array} list An array of objects\n\t * @return {Object} A merged object.\n\t * @see R.reduce\n\t * @example\n\t *\n\t *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n\t *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n\t * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n\t */\n\tmodule.exports = _curry1(function mergeAll(list) {\n\t  return _assign.apply(null, [{}].concat(list));\n\t});\n\n\n/***/ }),\n/* 256 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar mergeDeepWithKey = __webpack_require__(42);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the first object merged with\n\t * the own properties of the second object. If a key exists in both objects:\n\t * - and both values are objects, the two values will be recursively merged\n\t * - otherwise the value from the first object will be used.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Object\n\t * @sig {a} -> {a} -> {a}\n\t * @param {Object} lObj\n\t * @param {Object} rObj\n\t * @return {Object}\n\t * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n\t * @example\n\t *\n\t *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n\t *                      { age: 40, contact: { email: 'baa@example.com' }});\n\t *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n\t */\n\tmodule.exports = _curry2(function mergeDeepLeft(lObj, rObj) {\n\t  return mergeDeepWithKey(function(k, lVal, rVal) {\n\t    return lVal;\n\t  }, lObj, rObj);\n\t});\n\n\n/***/ }),\n/* 257 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar mergeDeepWithKey = __webpack_require__(42);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the first object merged with\n\t * the own properties of the second object. If a key exists in both objects:\n\t * - and both values are objects, the two values will be recursively merged\n\t * - otherwise the value from the second object will be used.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Object\n\t * @sig {a} -> {a} -> {a}\n\t * @param {Object} lObj\n\t * @param {Object} rObj\n\t * @return {Object}\n\t * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n\t * @example\n\t *\n\t *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n\t *                       { age: 40, contact: { email: 'baa@example.com' }});\n\t *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n\t */\n\tmodule.exports = _curry2(function mergeDeepRight(lObj, rObj) {\n\t  return mergeDeepWithKey(function(k, lVal, rVal) {\n\t    return rVal;\n\t  }, lObj, rObj);\n\t});\n\n\n/***/ }),\n/* 258 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar mergeDeepWithKey = __webpack_require__(42);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the two provided objects.\n\t * If a key exists in both objects:\n\t * - and both associated values are also objects then the values will be\n\t *   recursively merged.\n\t * - otherwise the provided function is applied to associated values using the\n\t *   resulting value as the new value associated with the key.\n\t * If a key only exists in one object, the value will be associated with the key\n\t * of the resulting object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Object\n\t * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n\t * @param {Function} fn\n\t * @param {Object} lObj\n\t * @param {Object} rObj\n\t * @return {Object}\n\t * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n\t * @example\n\t *\n\t *      R.mergeDeepWith(R.concat,\n\t *                      { a: true, c: { values: [10, 20] }},\n\t *                      { b: true, c: { values: [15, 35] }});\n\t *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n\t */\n\tmodule.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {\n\t  return mergeDeepWithKey(function(k, lVal, rVal) {\n\t    return fn(lVal, rVal);\n\t  }, lObj, rObj);\n\t});\n\n\n/***/ }),\n/* 259 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar mergeWithKey = __webpack_require__(59);\n\t\n\t\n\t/**\n\t * Creates a new object with the own properties of the two provided objects. If\n\t * a key exists in both objects, the provided function is applied to the values\n\t * associated with the key in each object, with the result being used as the\n\t * value associated with the key in the returned object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Object\n\t * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n\t * @param {Function} fn\n\t * @param {Object} l\n\t * @param {Object} r\n\t * @return {Object}\n\t * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n\t * @example\n\t *\n\t *      R.mergeWith(R.concat,\n\t *                  { a: true, values: [10, 20] },\n\t *                  { b: true, values: [15, 35] });\n\t *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n\t */\n\tmodule.exports = _curry3(function mergeWith(fn, l, r) {\n\t  return mergeWithKey(function(_, _l, _r) {\n\t    return fn(_l, _r);\n\t  }, l, r);\n\t});\n\n\n/***/ }),\n/* 260 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns the smaller of its two arguments.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord a => a -> a -> a\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {*}\n\t * @see R.minBy, R.max\n\t * @example\n\t *\n\t *      R.min(789, 123); //=> 123\n\t *      R.min('a', 'b'); //=> 'a'\n\t */\n\tmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n\n\n/***/ }),\n/* 261 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Takes a function and two values, and returns whichever value produces the\n\t * smaller result when passed to the provided function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Relation\n\t * @sig Ord b => (a -> b) -> a -> a -> a\n\t * @param {Function} f\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {*}\n\t * @see R.min, R.maxBy\n\t * @example\n\t *\n\t *      //  square :: Number -> Number\n\t *      var square = n => n * n;\n\t *\n\t *      R.minBy(square, -3, 2); //=> 2\n\t *\n\t *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n\t *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n\t */\n\tmodule.exports = _curry3(function minBy(f, a, b) {\n\t  return f(b) < f(a) ? b : a;\n\t});\n\n\n/***/ }),\n/* 262 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Divides the first parameter by the second and returns the remainder. Note\n\t * that this function preserves the JavaScript-style behavior for modulo. For\n\t * mathematical modulo see [`mathMod`](#mathMod).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} a The value to the divide.\n\t * @param {Number} b The pseudo-modulus\n\t * @return {Number} The result of `b % a`.\n\t * @see R.mathMod\n\t * @example\n\t *\n\t *      R.modulo(17, 3); //=> 2\n\t *      // JS behavior:\n\t *      R.modulo(-17, 3); //=> -2\n\t *      R.modulo(17, -3); //=> 2\n\t *\n\t *      var isOdd = R.modulo(R.__, 2);\n\t *      isOdd(42); //=> 0\n\t *      isOdd(21); //=> 1\n\t */\n\tmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n\n\n/***/ }),\n/* 263 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Negates its argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Math\n\t * @sig Number -> Number\n\t * @param {Number} n\n\t * @return {Number}\n\t * @example\n\t *\n\t *      R.negate(42); //=> -42\n\t */\n\tmodule.exports = _curry1(function negate(n) { return -n; });\n\n\n/***/ }),\n/* 264 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _complement = __webpack_require__(92);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xany = __webpack_require__(98);\n\tvar any = __webpack_require__(75);\n\t\n\t\n\t/**\n\t * Returns `true` if no elements of the list match the predicate, `false`\n\t * otherwise.\n\t *\n\t * Dispatches to the `any` method of the second argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> Boolean\n\t * @param {Function} fn The predicate function.\n\t * @param {Array} list The array to consider.\n\t * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n\t * @see R.all, R.any\n\t * @example\n\t *\n\t *      var isEven = n => n % 2 === 0;\n\t *\n\t *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n\t *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n\t */\n\tmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n\n\n/***/ }),\n/* 265 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar curryN = __webpack_require__(6);\n\tvar nth = __webpack_require__(26);\n\t\n\t\n\t/**\n\t * Returns a function which returns its nth argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category Function\n\t * @sig Number -> *... -> *\n\t * @param {Number} n\n\t * @return {Function}\n\t * @example\n\t *\n\t *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n\t *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n\t * @symb R.nthArg(-1)(a, b, c) = c\n\t * @symb R.nthArg(0)(a, b, c) = a\n\t * @symb R.nthArg(1)(a, b, c) = b\n\t */\n\tmodule.exports = _curry1(function nthArg(n) {\n\t  var arity = n < 0 ? 1 : n + 1;\n\t  return curryN(arity, function() {\n\t    return nth(n, arguments);\n\t  });\n\t});\n\n\n/***/ }),\n/* 266 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * `o` is a curried composition function that returns a unary function.\n\t * Like [`compose`](#compose), `o` performs right-to-left function composition.\n\t * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n\t * invoked with only one argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category Function\n\t * @sig (b -> c) -> (a -> b) -> a -> c\n\t * @param {Function} f\n\t * @param {Function} g\n\t * @return {Function}\n\t * @see R.compose, R.pipe\n\t * @example\n\t *\n\t *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + lastName\n\t *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n\t *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n\t *\n\t *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n\t *\n\t * @symb R.o(f, g, x) = f(g(x))\n\t */\n\tmodule.exports = _curry3(function o(f, g, x) {\n\t  return f(g(x));\n\t});\n\n\n/***/ }),\n/* 267 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _of = __webpack_require__(208);\n\t\n\t\n\t/**\n\t * Returns a singleton array containing the value provided.\n\t *\n\t * Note this `of` is different from the ES6 `of`; See\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category Function\n\t * @sig a -> [a]\n\t * @param {*} x any value\n\t * @return {Array} An array wrapping `x`.\n\t * @example\n\t *\n\t *      R.of(null); //=> [null]\n\t *      R.of([42]); //=> [[42]]\n\t */\n\tmodule.exports = _curry1(_of);\n\n\n/***/ }),\n/* 268 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a partial copy of an object omitting the keys specified.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig [String] -> {String: *} -> {String: *}\n\t * @param {Array} names an array of String property names to omit from the new object\n\t * @param {Object} obj The object to copy from\n\t * @return {Object} A new object with properties from `names` not on it.\n\t * @see R.pick\n\t * @example\n\t *\n\t *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n\t */\n\tmodule.exports = _curry2(function omit(names, obj) {\n\t  var result = {};\n\t  for (var prop in obj) {\n\t    if (!_contains(prop, names)) {\n\t      result[prop] = obj[prop];\n\t    }\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 269 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Accepts a function `fn` and returns a function that guards invocation of\n\t * `fn` such that `fn` can only ever be called once, no matter how many times\n\t * the returned function is invoked. The first value calculated is returned in\n\t * subsequent invocations.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (a... -> b) -> (a... -> b)\n\t * @param {Function} fn The function to wrap in a call-only-once wrapper.\n\t * @return {Function} The wrapped function.\n\t * @example\n\t *\n\t *      var addOneOnce = R.once(x => x + 1);\n\t *      addOneOnce(10); //=> 11\n\t *      addOneOnce(addOneOnce(50)); //=> 11\n\t */\n\tmodule.exports = _curry1(function once(fn) {\n\t  var called = false;\n\t  var result;\n\t  return _arity(fn.length, function() {\n\t    if (called) {\n\t      return result;\n\t    }\n\t    called = true;\n\t    result = fn.apply(this, arguments);\n\t    return result;\n\t  });\n\t});\n\n\n/***/ }),\n/* 270 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category List\n\t * @sig a -> b -> (a,b)\n\t * @param {*} fst\n\t * @param {*} snd\n\t * @return {Array}\n\t * @see R.objOf, R.of\n\t * @example\n\t *\n\t *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n\t */\n\tmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n\n\n/***/ }),\n/* 271 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _createPartialApplicator = __webpack_require__(93);\n\t\n\t\n\t/**\n\t * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t * When applied, `g` returns the result of applying `f` to the arguments\n\t * provided initially followed by the arguments provided to `g`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Function\n\t * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n\t * @param {Function} f\n\t * @param {Array} args\n\t * @return {Function}\n\t * @see R.partialRight\n\t * @example\n\t *\n\t *      var multiply2 = (a, b) => a * b;\n\t *      var double = R.partial(multiply2, [2]);\n\t *      double(2); //=> 4\n\t *\n\t *      var greet = (salutation, title, firstName, lastName) =>\n\t *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t *\n\t *      var sayHello = R.partial(greet, ['Hello']);\n\t *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n\t *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n\t * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n\t */\n\tmodule.exports = _createPartialApplicator(_concat);\n\n\n/***/ }),\n/* 272 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _createPartialApplicator = __webpack_require__(93);\n\tvar flip = __webpack_require__(33);\n\t\n\t\n\t/**\n\t * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t * When applied, `g` returns the result of applying `f` to the arguments\n\t * provided to `g` followed by the arguments provided initially.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category Function\n\t * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n\t * @param {Function} f\n\t * @param {Array} args\n\t * @return {Function}\n\t * @see R.partial\n\t * @example\n\t *\n\t *      var greet = (salutation, title, firstName, lastName) =>\n\t *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t *\n\t *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n\t *\n\t *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n\t * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n\t */\n\tmodule.exports = _createPartialApplicator(flip(_concat));\n\n\n/***/ }),\n/* 273 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar filter = __webpack_require__(51);\n\tvar juxt = __webpack_require__(103);\n\tvar reject = __webpack_require__(45);\n\t\n\t\n\t/**\n\t * Takes a predicate and a list or other `Filterable` object and returns the\n\t * pair of filterable objects of the same type of elements which do and do not\n\t * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n\t * that has a filter method such as `Array`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.4\n\t * @category List\n\t * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n\t * @param {Function} pred A predicate to determine which side the element belongs to.\n\t * @param {Array} filterable the list (or other filterable) to partition.\n\t * @return {Array} An array, containing first the subset of elements that satisfy the\n\t *         predicate, and second the subset of elements that do not satisfy.\n\t * @see R.filter, R.reject\n\t * @example\n\t *\n\t *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n\t *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n\t *\n\t *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n\t *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n\t */\n\tmodule.exports = juxt([filter, reject]);\n\n\n/***/ }),\n/* 274 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar equals = __webpack_require__(9);\n\tvar path = __webpack_require__(27);\n\t\n\t\n\t/**\n\t * Determines whether a nested path on an object has a specific value, in\n\t * [`R.equals`](#equals) terms. Most likely used to filter a list.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category Relation\n\t * @typedefn Idx = String | Int\n\t * @sig [Idx] -> a -> {a} -> Boolean\n\t * @param {Array} path The path of the nested property to use\n\t * @param {*} val The value to compare the nested property with\n\t * @param {Object} obj The object to check the nested property in\n\t * @return {Boolean} `true` if the value equals the nested object property,\n\t *         `false` otherwise.\n\t * @example\n\t *\n\t *      var user1 = { address: { zipCode: 90210 } };\n\t *      var user2 = { address: { zipCode: 55555 } };\n\t *      var user3 = { name: 'Bob' };\n\t *      var users = [ user1, user2, user3 ];\n\t *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n\t *      R.filter(isFamous, users); //=> [ user1 ]\n\t */\n\tmodule.exports = _curry3(function pathEq(_path, val, obj) {\n\t  return equals(path(_path, obj), val);\n\t});\n\n\n/***/ }),\n/* 275 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar defaultTo = __webpack_require__(82);\n\tvar path = __webpack_require__(27);\n\t\n\t\n\t/**\n\t * If the given, non-null object has a value at the given path, returns the\n\t * value at that path. Otherwise returns the provided default value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category Object\n\t * @typedefn Idx = String | Int\n\t * @sig a -> [Idx] -> {a} -> a\n\t * @param {*} d The default value.\n\t * @param {Array} p The path to use.\n\t * @param {Object} obj The object to retrieve the nested property from.\n\t * @return {*} The data at `path` of the supplied object or the default value.\n\t * @example\n\t *\n\t *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n\t *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n\t */\n\tmodule.exports = _curry3(function pathOr(d, p, obj) {\n\t  return defaultTo(d, path(p, obj));\n\t});\n\n\n/***/ }),\n/* 276 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar path = __webpack_require__(27);\n\t\n\t\n\t/**\n\t * Returns `true` if the specified object property at given path satisfies the\n\t * given predicate; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Logic\n\t * @typedefn Idx = String | Int\n\t * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n\t * @param {Function} pred\n\t * @param {Array} propPath\n\t * @param {*} obj\n\t * @return {Boolean}\n\t * @see R.propSatisfies, R.path\n\t * @example\n\t *\n\t *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n\t */\n\tmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n\t  return propPath.length > 0 && pred(path(propPath, obj));\n\t});\n\n\n/***/ }),\n/* 277 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a partial copy of an object containing only the keys specified. If\n\t * the key does not exist, the property is ignored.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig [k] -> {k: v} -> {k: v}\n\t * @param {Array} names an array of String property names to copy onto a new object\n\t * @param {Object} obj The object to copy from\n\t * @return {Object} A new object with only properties from `names` on it.\n\t * @see R.omit, R.props\n\t * @example\n\t *\n\t *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n\t */\n\tmodule.exports = _curry2(function pick(names, obj) {\n\t  var result = {};\n\t  var idx = 0;\n\t  while (idx < names.length) {\n\t    if (names[idx] in obj) {\n\t      result[names[idx]] = obj[names[idx]];\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 278 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a partial copy of an object containing only the keys that satisfy\n\t * the supplied predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Object\n\t * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n\t * @param {Function} pred A predicate to determine whether or not a key\n\t *        should be included on the output object.\n\t * @param {Object} obj The object to copy from\n\t * @return {Object} A new object with only properties that satisfy `pred`\n\t *         on it.\n\t * @see R.pick, R.filter\n\t * @example\n\t *\n\t *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n\t *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n\t */\n\tmodule.exports = _curry2(function pickBy(test, obj) {\n\t  var result = {};\n\t  for (var prop in obj) {\n\t    if (test(obj[prop], prop, obj)) {\n\t      result[prop] = obj[prop];\n\t    }\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 279 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar composeK = __webpack_require__(79);\n\tvar reverse = __webpack_require__(46);\n\t\n\t/**\n\t * Returns the left-to-right Kleisli composition of the provided functions,\n\t * each of which must return a value of a type supported by [`chain`](#chain).\n\t *\n\t * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Function\n\t * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n\t * @param {...Function}\n\t * @return {Function}\n\t * @see R.composeK\n\t * @example\n\t *\n\t *      //  parseJson :: String -> Maybe *\n\t *      //  get :: String -> Object -> Maybe *\n\t *\n\t *      //  getStateCode :: Maybe String -> Maybe String\n\t *      var getStateCode = R.pipeK(\n\t *        parseJson,\n\t *        get('user'),\n\t *        get('address'),\n\t *        get('state'),\n\t *        R.compose(Maybe.of, R.toUpper)\n\t *      );\n\t *\n\t *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n\t *      //=> Just('NY')\n\t *      getStateCode('[Invalid JSON]');\n\t *      //=> Nothing()\n\t * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n\t */\n\tmodule.exports = function pipeK() {\n\t  if (arguments.length === 0) {\n\t    throw new Error('pipeK requires at least one argument');\n\t  }\n\t  return composeK.apply(this, reverse(arguments));\n\t};\n\n\n/***/ }),\n/* 280 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar multiply = __webpack_require__(109);\n\tvar reduce = __webpack_require__(14);\n\t\n\t\n\t/**\n\t * Multiplies together all the elements of a list.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig [Number] -> Number\n\t * @param {Array} list An array of numbers\n\t * @return {Number} The product of all the numbers in the list.\n\t * @see R.reduce\n\t * @example\n\t *\n\t *      R.product([2,4,6,8,100,1]); //=> 38400\n\t */\n\tmodule.exports = reduce(multiply, 1);\n\n\n/***/ }),\n/* 281 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _map = __webpack_require__(39);\n\tvar identity = __webpack_require__(52);\n\tvar pickAll = __webpack_require__(114);\n\tvar useWith = __webpack_require__(125);\n\t\n\t\n\t/**\n\t * Reasonable analog to SQL `select` statement.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @category Relation\n\t * @sig [k] -> [{k: v}] -> [{k: v}]\n\t * @param {Array} props The property names to project\n\t * @param {Array} objs The objects to query\n\t * @return {Array} An array of objects with just the `props` properties.\n\t * @example\n\t *\n\t *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n\t *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n\t *      var kids = [abby, fred];\n\t *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n\t */\n\tmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\n\n/***/ }),\n/* 282 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar equals = __webpack_require__(9);\n\t\n\t\n\t/**\n\t * Returns `true` if the specified object property is equal, in\n\t * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig String -> a -> Object -> Boolean\n\t * @param {String} name\n\t * @param {*} val\n\t * @param {*} obj\n\t * @return {Boolean}\n\t * @see R.equals, R.propSatisfies\n\t * @example\n\t *\n\t *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n\t *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n\t *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n\t *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n\t *      var kids = [abby, fred, rusty, alois];\n\t *      var hasBrownHair = R.propEq('hair', 'brown');\n\t *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n\t */\n\tmodule.exports = _curry3(function propEq(name, val, obj) {\n\t  return equals(val, obj[name]);\n\t});\n\n\n/***/ }),\n/* 283 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar is = __webpack_require__(101);\n\t\n\t\n\t/**\n\t * Returns `true` if the specified object property is of the given type;\n\t * `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Type\n\t * @sig Type -> String -> Object -> Boolean\n\t * @param {Function} type\n\t * @param {String} name\n\t * @param {*} obj\n\t * @return {Boolean}\n\t * @see R.is, R.propSatisfies\n\t * @example\n\t *\n\t *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n\t *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n\t *      R.propIs(Number, 'x', {});            //=> false\n\t */\n\tmodule.exports = _curry3(function propIs(type, name, obj) {\n\t  return is(type, obj[name]);\n\t});\n\n\n/***/ }),\n/* 284 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * If the given, non-null object has an own property with the specified name,\n\t * returns the value of that property. Otherwise returns the provided default\n\t * value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category Object\n\t * @sig a -> String -> Object -> a\n\t * @param {*} val The default value.\n\t * @param {String} p The name of the property to return.\n\t * @param {Object} obj The object to query.\n\t * @return {*} The value of given property of the supplied object or the default value.\n\t * @example\n\t *\n\t *      var alice = {\n\t *        name: 'ALICE',\n\t *        age: 101\n\t *      };\n\t *      var favorite = R.prop('favoriteLibrary');\n\t *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n\t *\n\t *      favorite(alice);  //=> undefined\n\t *      favoriteWithDefault(alice);  //=> 'Ramda'\n\t */\n\tmodule.exports = _curry3(function propOr(val, p, obj) {\n\t  return (obj != null && _has(p, obj)) ? obj[p] : val;\n\t});\n\n\n/***/ }),\n/* 285 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Returns `true` if the specified object property satisfies the given\n\t * predicate; `false` otherwise.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Logic\n\t * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n\t * @param {Function} pred\n\t * @param {String} name\n\t * @param {*} obj\n\t * @return {Boolean}\n\t * @see R.propEq, R.propIs\n\t * @example\n\t *\n\t *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n\t */\n\tmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n\t  return pred(obj[name]);\n\t});\n\n\n/***/ }),\n/* 286 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n\t * order.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Object\n\t * @sig [k] -> {k: v} -> [v]\n\t * @param {Array} ps The property names to fetch\n\t * @param {Object} obj The object to query\n\t * @return {Array} The corresponding values or partially applied function.\n\t * @example\n\t *\n\t *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n\t *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n\t *\n\t *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n\t *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n\t */\n\tmodule.exports = _curry2(function props(ps, obj) {\n\t  var len = ps.length;\n\t  var out = [];\n\t  var idx = 0;\n\t\n\t  while (idx < len) {\n\t    out[idx] = obj[ps[idx]];\n\t    idx += 1;\n\t  }\n\t\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 287 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isNumber = __webpack_require__(96);\n\t\n\t\n\t/**\n\t * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig Number -> Number -> [Number]\n\t * @param {Number} from The first number in the list.\n\t * @param {Number} to One more than the last number in the list.\n\t * @return {Array} The list of numbers in tthe set `[a, b)`.\n\t * @example\n\t *\n\t *      R.range(1, 5);    //=> [1, 2, 3, 4]\n\t *      R.range(50, 53);  //=> [50, 51, 52]\n\t */\n\tmodule.exports = _curry2(function range(from, to) {\n\t  if (!(_isNumber(from) && _isNumber(to))) {\n\t    throw new TypeError('Both arguments to range must be numbers');\n\t  }\n\t  var result = [];\n\t  var n = from;\n\t  while (n < to) {\n\t    result.push(n);\n\t    n += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 288 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curryN = __webpack_require__(35);\n\tvar _reduce = __webpack_require__(10);\n\tvar _reduced = __webpack_require__(17);\n\t\n\t\n\t/**\n\t * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n\t * through the list, successively calling the iterator function. `reduceWhile`\n\t * also takes a predicate that is evaluated before each step. If the predicate\n\t * returns `false`, it \"short-circuits\" the iteration and returns the current\n\t * value of the accumulator.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.22.0\n\t * @category List\n\t * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n\t * @param {Function} pred The predicate. It is passed the accumulator and the\n\t *        current element.\n\t * @param {Function} fn The iterator function. Receives two values, the\n\t *        accumulator and the current element.\n\t * @param {*} a The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.reduce, R.reduced\n\t * @example\n\t *\n\t *      var isOdd = (acc, x) => x % 2 === 1;\n\t *      var xs = [1, 3, 5, 60, 777, 800];\n\t *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n\t *\n\t *      var ys = [2, 4, 6]\n\t *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n\t */\n\tmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n\t  return _reduce(function(acc, x) {\n\t    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n\t  }, a, list);\n\t});\n\n\n/***/ }),\n/* 289 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _reduced = __webpack_require__(17);\n\t\n\t/**\n\t * Returns a value wrapped to indicate that it is the final value of the reduce\n\t * and transduce functions. The returned value should be considered a black\n\t * box: the internal structure is not guaranteed to be stable.\n\t *\n\t * Note: this optimization is unavailable to functions not explicitly listed\n\t * above. For instance, it is not currently supported by\n\t * [`reduceRight`](#reduceRight).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.15.0\n\t * @category List\n\t * @sig a -> *\n\t * @param {*} x The final value of the reduce.\n\t * @return {*} The wrapped value.\n\t * @see R.reduce, R.transduce\n\t * @example\n\t *\n\t *     R.reduce(\n\t *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n\t *       [],\n\t *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n\t */\n\t\n\tmodule.exports = _curry1(_reduced);\n\n\n/***/ }),\n/* 290 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar always = __webpack_require__(21);\n\tvar times = __webpack_require__(123);\n\t\n\t\n\t/**\n\t * Returns a fixed list of size `n` containing a specified identical value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.1\n\t * @category List\n\t * @sig a -> n -> [a]\n\t * @param {*} value The value to repeat.\n\t * @param {Number} n The desired size of the output list.\n\t * @return {Array} A new array containing `n` `value`s.\n\t * @see R.times\n\t * @example\n\t *\n\t *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n\t *\n\t *      var obj = {};\n\t *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n\t *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n\t * @symb R.repeat(a, 0) = []\n\t * @symb R.repeat(a, 1) = [a]\n\t * @symb R.repeat(a, 2) = [a, a]\n\t */\n\tmodule.exports = _curry2(function repeat(value, n) {\n\t  return times(always(value), n);\n\t});\n\n\n/***/ }),\n/* 291 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Replace a substring or regex match in a string with a replacement.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.7.0\n\t * @category String\n\t * @sig RegExp|String -> String -> String -> String\n\t * @param {RegExp|String} pattern A regular expression or a substring to match.\n\t * @param {String} replacement The string to replace the matches with.\n\t * @param {String} str The String to do the search and replacement in.\n\t * @return {String} The result.\n\t * @example\n\t *\n\t *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t *\n\t *      // Use the \"g\" (global) flag to replace all occurrences:\n\t *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n\t */\n\tmodule.exports = _curry3(function replace(regex, replacement, str) {\n\t  return str.replace(regex, replacement);\n\t});\n\n\n/***/ }),\n/* 292 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n\t * reduced values from the left\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category List\n\t * @sig (a,b -> a) -> a -> [b] -> [a]\n\t * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t *        current element from the array\n\t * @param {*} acc The accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {Array} A list of all intermediately reduced values.\n\t * @see R.reduce\n\t * @example\n\t *\n\t *      var numbers = [1, 2, 3, 4];\n\t *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n\t * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n\t */\n\tmodule.exports = _curry3(function scan(fn, acc, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var result = [acc];\n\t  while (idx < len) {\n\t    acc = fn(acc, list[idx]);\n\t    result[idx + 1] = acc;\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 293 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar always = __webpack_require__(21);\n\tvar over = __webpack_require__(113);\n\t\n\t\n\t/**\n\t * Returns the result of \"setting\" the portion of the given data structure\n\t * focused by the given lens to the given value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig Lens s a -> a -> s -> s\n\t * @param {Lens} lens\n\t * @param {*} v\n\t * @param {*} x\n\t * @return {*}\n\t * @see R.prop, R.lensIndex, R.lensProp\n\t * @example\n\t *\n\t *      var xLens = R.lensProp('x');\n\t *\n\t *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n\t *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n\t */\n\tmodule.exports = _curry3(function set(lens, v, x) {\n\t  return over(lens, always(v), x);\n\t});\n\n\n/***/ }),\n/* 294 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a copy of the list, sorted according to the comparator function,\n\t * which should accept two values at a time and return a negative number if the\n\t * first value is smaller, a positive number if it's larger, and zero if they\n\t * are equal. Please note that this is a **copy** of the list. It does not\n\t * modify the original.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a,a -> Number) -> [a] -> [a]\n\t * @param {Function} comparator A sorting function :: a -> b -> Int\n\t * @param {Array} list The list to sort\n\t * @return {Array} a new array with its elements sorted by the comparator function.\n\t * @example\n\t *\n\t *      var diff = function(a, b) { return a - b; };\n\t *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n\t */\n\tmodule.exports = _curry2(function sort(comparator, list) {\n\t  return Array.prototype.slice.call(list, 0).sort(comparator);\n\t});\n\n\n/***/ }),\n/* 295 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Sorts the list according to the supplied function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig Ord b => (a -> b) -> [a] -> [a]\n\t * @param {Function} fn\n\t * @param {Array} list The list to sort.\n\t * @return {Array} A new list sorted by the keys generated by `fn`.\n\t * @example\n\t *\n\t *      var sortByFirstItem = R.sortBy(R.prop(0));\n\t *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n\t *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n\t *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n\t *      var alice = {\n\t *        name: 'ALICE',\n\t *        age: 101\n\t *      };\n\t *      var bob = {\n\t *        name: 'Bob',\n\t *        age: -10\n\t *      };\n\t *      var clara = {\n\t *        name: 'clara',\n\t *        age: 314.159\n\t *      };\n\t *      var people = [clara, bob, alice];\n\t *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n\t */\n\tmodule.exports = _curry2(function sortBy(fn, list) {\n\t  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n\t    var aa = fn(a);\n\t    var bb = fn(b);\n\t    return aa < bb ? -1 : aa > bb ? 1 : 0;\n\t  });\n\t});\n\n\n/***/ }),\n/* 296 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Sorts a list according to a list of comparators.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.23.0\n\t * @category Relation\n\t * @sig [a -> a -> Number] -> [a] -> [a]\n\t * @param {Array} functions A list of comparator functions.\n\t * @param {Array} list The list to sort.\n\t * @return {Array} A new list sorted according to the comarator functions.\n\t * @example\n\t *\n\t *      var alice = {\n\t *        name: 'alice',\n\t *        age: 40\n\t *      };\n\t *      var bob = {\n\t *        name: 'bob',\n\t *        age: 30\n\t *      };\n\t *      var clara = {\n\t *        name: 'clara',\n\t *        age: 40\n\t *      };\n\t *      var people = [clara, bob, alice];\n\t *      var ageNameSort = R.sortWith([\n\t *        R.descend(R.prop('age')),\n\t *        R.ascend(R.prop('name'))\n\t *      ]);\n\t *      ageNameSort(people); //=> [alice, clara, bob]\n\t */\n\tmodule.exports = _curry2(function sortWith(fns, list) {\n\t  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n\t    var result = 0;\n\t    var i = 0;\n\t    while (result === 0 && i < fns.length) {\n\t      result = fns[i](a, b);\n\t      i += 1;\n\t    }\n\t    return result;\n\t  });\n\t});\n\n\n/***/ }),\n/* 297 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar invoker = __webpack_require__(25);\n\t\n\t\n\t/**\n\t * Splits a string into an array of strings based on the given\n\t * separator.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category String\n\t * @sig (String | RegExp) -> String -> [String]\n\t * @param {String|RegExp} sep The pattern.\n\t * @param {String} str The string to separate into an array.\n\t * @return {Array} The array of strings from `str` separated by `str`.\n\t * @see R.join\n\t * @example\n\t *\n\t *      var pathComponents = R.split('/');\n\t *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n\t *\n\t *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n\t */\n\tmodule.exports = invoker(1, 'split');\n\n\n/***/ }),\n/* 298 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar length = __webpack_require__(105);\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Splits a given list or string at a given index.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig Number -> [a] -> [[a], [a]]\n\t * @sig Number -> String -> [String, String]\n\t * @param {Number} index The index where the array/string is split.\n\t * @param {Array|String} array The array/string to be split.\n\t * @return {Array}\n\t * @example\n\t *\n\t *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n\t *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n\t *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n\t */\n\tmodule.exports = _curry2(function splitAt(index, array) {\n\t  return [slice(0, index, array), slice(index, length(array), array)];\n\t});\n\n\n/***/ }),\n/* 299 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar slice = __webpack_require__(19);\n\t\n\t\n\t/**\n\t * Splits a collection into slices of the specified length.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig Number -> [a] -> [[a]]\n\t * @sig Number -> String -> [String]\n\t * @param {Number} n\n\t * @param {Array} list\n\t * @return {Array}\n\t * @example\n\t *\n\t *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n\t *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n\t */\n\tmodule.exports = _curry2(function splitEvery(n, list) {\n\t  if (n <= 0) {\n\t    throw new Error('First argument to splitEvery must be a positive integer');\n\t  }\n\t  var result = [];\n\t  var idx = 0;\n\t  while (idx < list.length) {\n\t    result.push(slice(idx, idx += n, list));\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Takes a list and a predicate and returns a pair of lists with the following properties:\n\t *\n\t *  - the result of concatenating the two output lists is equivalent to the input list;\n\t *  - none of the elements of the first output list satisfies the predicate; and\n\t *  - if the second output list is non-empty, its first element satisfies the predicate.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n\t * @param {Function} pred The predicate that determines where the array is split.\n\t * @param {Array} list The array to be split.\n\t * @return {Array}\n\t * @example\n\t *\n\t *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n\t */\n\tmodule.exports = _curry2(function splitWhen(pred, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  var prefix = [];\n\t\n\t  while (idx < len && !pred(list[idx])) {\n\t    prefix.push(list[idx]);\n\t    idx += 1;\n\t  }\n\t\n\t  return [prefix, Array.prototype.slice.call(list, idx)];\n\t});\n\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar equals = __webpack_require__(9);\n\tvar take = __webpack_require__(62);\n\t\n\t/**\n\t * Checks if a list starts with the provided values\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.24.0\n\t * @category List\n\t * @sig [a] -> Boolean\n\t * @sig String -> Boolean\n\t * @param {*} prefix\n\t * @param {*} list\n\t * @return {Boolean}\n\t * @example\n\t *\n\t *      R.startsWith('a', 'abc')                //=> true\n\t *      R.startsWith('b', 'abc')                //=> false\n\t *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n\t *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n\t */\n\tmodule.exports = _curry2(function(prefix, list) {\n\t  return equals(take(prefix.length, list), prefix);\n\t});\n\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Subtracts its second argument from its first argument.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Math\n\t * @sig Number -> Number -> Number\n\t * @param {Number} a The first value.\n\t * @param {Number} b The second value.\n\t * @return {Number} The result of `a - b`.\n\t * @see R.add\n\t * @example\n\t *\n\t *      R.subtract(10, 8); //=> 2\n\t *\n\t *      var minus5 = R.subtract(R.__, 5);\n\t *      minus5(17); //=> 12\n\t *\n\t *      var complementaryAngle = R.subtract(90);\n\t *      complementaryAngle(30); //=> 60\n\t *      complementaryAngle(72); //=> 18\n\t */\n\tmodule.exports = _curry2(function subtract(a, b) {\n\t  return Number(a) - Number(b);\n\t});\n\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar concat = __webpack_require__(50);\n\tvar difference = __webpack_require__(83);\n\t\n\t\n\t/**\n\t * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t * second list, but not both.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Relation\n\t * @sig [*] -> [*] -> [*]\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The elements in `list1` or `list2`, but not both.\n\t * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n\t * @example\n\t *\n\t *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n\t *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n\t */\n\tmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n\t  return concat(difference(list1, list2), difference(list2, list1));\n\t});\n\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar concat = __webpack_require__(50);\n\tvar differenceWith = __webpack_require__(84);\n\t\n\t\n\t/**\n\t * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t * second list, but not both. Duplication is determined according to the value\n\t * returned by applying the supplied predicate to two list elements.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category Relation\n\t * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n\t * @param {Function} pred A predicate used to test whether two items are equal.\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The elements in `list1` or `list2`, but not both.\n\t * @see R.symmetricDifference, R.difference, R.differenceWith\n\t * @example\n\t *\n\t *      var eqA = R.eqBy(R.prop('a'));\n\t *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n\t *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n\t *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n\t */\n\tmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n\t  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n\t});\n\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a new list containing the last `n` elements of a given list, passing\n\t * each value to the supplied predicate function, and terminating when the\n\t * predicate function returns `false`. Excludes the element that caused the\n\t * predicate function to fail. The predicate function is passed one argument:\n\t * *(value)*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> [a]\n\t * @param {Function} fn The function called per iteration.\n\t * @param {Array} list The collection to iterate over.\n\t * @return {Array} A new array.\n\t * @see R.dropLastWhile, R.addIndex\n\t * @example\n\t *\n\t *      var isNotOne = x => x !== 1;\n\t *\n\t *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n\t */\n\tmodule.exports = _curry2(function takeLastWhile(fn, list) {\n\t  var idx = list.length - 1;\n\t  while (idx >= 0 && fn(list[idx])) {\n\t    idx -= 1;\n\t  }\n\t  return Array.prototype.slice.call(list, idx + 1);\n\t});\n\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar _dispatchable = __webpack_require__(4);\n\tvar _xtakeWhile = __webpack_require__(230);\n\t\n\t\n\t/**\n\t * Returns a new list containing the first `n` elements of a given list,\n\t * passing each value to the supplied predicate function, and terminating when\n\t * the predicate function returns `false`. Excludes the element that caused the\n\t * predicate function to fail. The predicate function is passed one argument:\n\t * *(value)*.\n\t *\n\t * Dispatches to the `takeWhile` method of the second argument, if present.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a -> Boolean) -> [a] -> [a]\n\t * @param {Function} fn The function called per iteration.\n\t * @param {Array} list The collection to iterate over.\n\t * @return {Array} A new array.\n\t * @see R.dropWhile, R.transduce, R.addIndex\n\t * @example\n\t *\n\t *      var isNotFour = x => x !== 4;\n\t *\n\t *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n\t */\n\tmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n\t  var idx = 0;\n\t  var len = list.length;\n\t  while (idx < len && fn(list[idx])) {\n\t    idx += 1;\n\t  }\n\t  return Array.prototype.slice.call(list, 0, idx);\n\t}));\n\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Runs the given function with the supplied object, then returns the object.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Function\n\t * @sig (a -> *) -> a -> a\n\t * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n\t * @param {*} x\n\t * @return {*} `x`.\n\t * @example\n\t *\n\t *      var sayX = x => console.log('x is ' + x);\n\t *      R.tap(sayX, 100); //=> 100\n\t *      // logs 'x is 100'\n\t * @symb R.tap(f, a) = a\n\t */\n\tmodule.exports = _curry2(function tap(fn, x) {\n\t  fn(x);\n\t  return x;\n\t});\n\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _cloneRegExp = __webpack_require__(91);\n\tvar _curry2 = __webpack_require__(1);\n\tvar _isRegExp = __webpack_require__(206);\n\tvar toString = __webpack_require__(29);\n\t\n\t\n\t/**\n\t * Determines whether a given string matches a given regular expression.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category String\n\t * @sig RegExp -> String -> Boolean\n\t * @param {RegExp} pattern\n\t * @param {String} str\n\t * @return {Boolean}\n\t * @see R.match\n\t * @example\n\t *\n\t *      R.test(/^x/, 'xyz'); //=> true\n\t *      R.test(/^y/, 'xyz'); //=> false\n\t */\n\tmodule.exports = _curry2(function test(pattern, str) {\n\t  if (!_isRegExp(pattern)) {\n\t    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n\t  }\n\t  return _cloneRegExp(pattern).test(str);\n\t});\n\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar invoker = __webpack_require__(25);\n\t\n\t\n\t/**\n\t * The lower case version of a string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category String\n\t * @sig String -> String\n\t * @param {String} str The string to lower case.\n\t * @return {String} The lower case version of `str`.\n\t * @see R.toUpper\n\t * @example\n\t *\n\t *      R.toLower('XYZ'); //=> 'xyz'\n\t */\n\tmodule.exports = invoker(0, 'toLowerCase');\n\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar _has = __webpack_require__(7);\n\t\n\t\n\t/**\n\t * Converts an object into an array of key, value arrays. Only the object's\n\t * own properties are used.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.4.0\n\t * @category Object\n\t * @sig {String: *} -> [[String,*]]\n\t * @param {Object} obj The object to extract from\n\t * @return {Array} An array of key, value arrays from the object's own properties.\n\t * @see R.fromPairs\n\t * @example\n\t *\n\t *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n\t */\n\tmodule.exports = _curry1(function toPairs(obj) {\n\t  var pairs = [];\n\t  for (var prop in obj) {\n\t    if (_has(prop, obj)) {\n\t      pairs[pairs.length] = [prop, obj[prop]];\n\t    }\n\t  }\n\t  return pairs;\n\t});\n\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Converts an object into an array of key, value arrays. The object's own\n\t * properties and prototype properties are used. Note that the order of the\n\t * output array is not guaranteed to be consistent across different JS\n\t * platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.4.0\n\t * @category Object\n\t * @sig {String: *} -> [[String,*]]\n\t * @param {Object} obj The object to extract from\n\t * @return {Array} An array of key, value arrays from the object's own\n\t *         and prototype properties.\n\t * @example\n\t *\n\t *      var F = function() { this.x = 'X'; };\n\t *      F.prototype.y = 'Y';\n\t *      var f = new F();\n\t *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n\t */\n\tmodule.exports = _curry1(function toPairsIn(obj) {\n\t  var pairs = [];\n\t  for (var prop in obj) {\n\t    pairs[pairs.length] = [prop, obj[prop]];\n\t  }\n\t  return pairs;\n\t});\n\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar invoker = __webpack_require__(25);\n\t\n\t\n\t/**\n\t * The upper case version of a string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.9.0\n\t * @category String\n\t * @sig String -> String\n\t * @param {String} str The string to upper case.\n\t * @return {String} The upper case version of `str`.\n\t * @see R.toLower\n\t * @example\n\t *\n\t *      R.toUpper('abc'); //=> 'ABC'\n\t */\n\tmodule.exports = invoker(0, 'toUpperCase');\n\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _reduce = __webpack_require__(10);\n\tvar _xwrap = __webpack_require__(100);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Initializes a transducer using supplied iterator function. Returns a single\n\t * item by iterating through the list, successively calling the transformed\n\t * iterator function and passing it an accumulator value and the current value\n\t * from the array, and then passing the result to the next call.\n\t *\n\t * The iterator function receives two values: *(acc, value)*. It will be\n\t * wrapped as a transformer to initialize the transducer. A transformer can be\n\t * passed directly in place of an iterator function. In both cases, iteration\n\t * may be stopped early with the [`R.reduced`](#reduced) function.\n\t *\n\t * A transducer is a function that accepts a transformer and returns a\n\t * transformer and can be composed directly.\n\t *\n\t * A transformer is an an object that provides a 2-arity reducing iterator\n\t * function, step, 0-arity initial value function, init, and 1-arity result\n\t * extraction function, result. The step function is used as the iterator\n\t * function in reduce. The result function is used to convert the final\n\t * accumulator into the return type and in most cases is\n\t * [`R.identity`](#identity). The init function can be used to provide an\n\t * initial accumulator, but is ignored by transduce.\n\t *\n\t * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.12.0\n\t * @category List\n\t * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n\t * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t *        current element from the array. Wrapped as transformer, if necessary, and used to\n\t *        initialize the transducer\n\t * @param {*} acc The initial accumulator value.\n\t * @param {Array} list The list to iterate over.\n\t * @return {*} The final, accumulated value.\n\t * @see R.reduce, R.reduced, R.into\n\t * @example\n\t *\n\t *      var numbers = [1, 2, 3, 4];\n\t *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n\t *\n\t *      var isOdd = (x) => x % 2 === 1;\n\t *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n\t *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n\t */\n\tmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n\t  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n\t});\n\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Transposes the rows and columns of a 2D list.\n\t * When passed a list of `n` lists of length `x`,\n\t * returns a list of `x` lists of length `n`.\n\t *\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig [[a]] -> [[a]]\n\t * @param {Array} list A 2D list\n\t * @return {Array} A 2D list\n\t * @example\n\t *\n\t *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n\t *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t *\n\t *      // If some of the rows are shorter than the following rows, their elements are skipped:\n\t *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n\t * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n\t * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n\t * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n\t */\n\tmodule.exports = _curry1(function transpose(outerlist) {\n\t  var i = 0;\n\t  var result = [];\n\t  while (i < outerlist.length) {\n\t    var innerlist = outerlist[i];\n\t    var j = 0;\n\t    while (j < innerlist.length) {\n\t      if (typeof result[j] === 'undefined') {\n\t        result[j] = [];\n\t      }\n\t      result[j].push(innerlist[j]);\n\t      j += 1;\n\t    }\n\t    i += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\tvar map = __webpack_require__(8);\n\tvar sequence = __webpack_require__(120);\n\t\n\t\n\t/**\n\t * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n\t * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n\t * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n\t * into an Applicative of Traversable.\n\t *\n\t * Dispatches to the `sequence` method of the third argument, if present.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n\t * @param {Function} of\n\t * @param {Function} f\n\t * @param {*} traversable\n\t * @return {*}\n\t * @see R.sequence\n\t * @example\n\t *\n\t *      // Returns `Nothing` if the given divisor is `0`\n\t *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n\t *\n\t *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n\t *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n\t */\n\tmodule.exports = _curry3(function traverse(of, f, traversable) {\n\t  return typeof traversable['fantasy-land/traverse'] === 'function' ?\n\t    traversable['fantasy-land/traverse'](f, of) :\n\t    sequence(of, map(f, traversable));\n\t});\n\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Removes (strips) whitespace from both ends of the string.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.6.0\n\t * @category String\n\t * @sig String -> String\n\t * @param {String} str The string to trim.\n\t * @return {String} Trimmed version of `str`.\n\t * @example\n\t *\n\t *      R.trim('   xyz  '); //=> 'xyz'\n\t *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n\t */\n\tmodule.exports = (function() {\n\t  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n\t           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n\t           '\\u2029\\uFEFF';\n\t  var zeroWidth = '\\u200b';\n\t  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n\t  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n\t    return _curry1(function trim(str) {\n\t      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n\t      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n\t      return str.replace(beginRx, '').replace(endRx, '');\n\t    });\n\t  } else {\n\t    return _curry1(function trim(str) {\n\t      return str.trim();\n\t    });\n\t  }\n\t}());\n\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _arity = __webpack_require__(12);\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n\t * function evaluates the `tryer`; if it does not throw, it simply returns the\n\t * result. If the `tryer` *does* throw, the returned function evaluates the\n\t * `catcher` function and returns its result. Note that for effective\n\t * composition with this function, both the `tryer` and `catcher` functions\n\t * must return the same type of results.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.20.0\n\t * @category Function\n\t * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n\t * @param {Function} tryer The function that may throw.\n\t * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n\t * @return {Function} A new function that will catch exceptions and send then to the catcher.\n\t * @example\n\t *\n\t *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n\t *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n\t */\n\tmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n\t  return _arity(tryer.length, function() {\n\t    try {\n\t      return tryer.apply(this, arguments);\n\t    } catch (e) {\n\t      return catcher.apply(this, _concat([e], arguments));\n\t    }\n\t  });\n\t});\n\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Takes a function `fn`, which takes a single array argument, and returns a\n\t * function which:\n\t *\n\t *   - takes any number of positional arguments;\n\t *   - passes these arguments to `fn` as an array; and\n\t *   - returns the result.\n\t *\n\t * In other words, `R.unapply` derives a variadic function from a function which\n\t * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.8.0\n\t * @category Function\n\t * @sig ([*...] -> a) -> (*... -> a)\n\t * @param {Function} fn\n\t * @return {Function}\n\t * @see R.apply\n\t * @example\n\t *\n\t *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n\t * @symb R.unapply(f)(a, b) = f([a, b])\n\t */\n\tmodule.exports = _curry1(function unapply(fn) {\n\t  return function() {\n\t    return fn(Array.prototype.slice.call(arguments, 0));\n\t  };\n\t});\n\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\tvar nAry = __webpack_require__(43);\n\t\n\t\n\t/**\n\t * Wraps a function of any arity (including nullary) in a function that accepts\n\t * exactly 1 parameter. Any extraneous parameters will not be passed to the\n\t * supplied function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category Function\n\t * @sig (* -> b) -> (a -> b)\n\t * @param {Function} fn The function to wrap.\n\t * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t *         arity 1.\n\t * @see R.binary, R.nAry\n\t * @example\n\t *\n\t *      var takesTwoArgs = function(a, b) {\n\t *        return [a, b];\n\t *      };\n\t *      takesTwoArgs.length; //=> 2\n\t *      takesTwoArgs(1, 2); //=> [1, 2]\n\t *\n\t *      var takesOneArg = R.unary(takesTwoArgs);\n\t *      takesOneArg.length; //=> 1\n\t *      // Only 1 argument is passed to the wrapped function\n\t *      takesOneArg(1, 2); //=> [1, undefined]\n\t * @symb R.unary(f)(a, b, c) = f(a)\n\t */\n\tmodule.exports = _curry1(function unary(fn) {\n\t  return nAry(1, fn);\n\t});\n\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar curryN = __webpack_require__(6);\n\t\n\t\n\t/**\n\t * Returns a function of arity `n` from a (manually) curried function.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Function\n\t * @sig Number -> (a -> b) -> (a -> c)\n\t * @param {Number} length The arity for the returned function.\n\t * @param {Function} fn The function to uncurry.\n\t * @return {Function} A new function.\n\t * @see R.curry\n\t * @example\n\t *\n\t *      var addFour = a => b => c => d => a + b + c + d;\n\t *\n\t *      var uncurriedAddFour = R.uncurryN(4, addFour);\n\t *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n\t */\n\tmodule.exports = _curry2(function uncurryN(depth, fn) {\n\t  return curryN(depth, function() {\n\t    var currentDepth = 1;\n\t    var value = fn;\n\t    var idx = 0;\n\t    var endIdx;\n\t    while (currentDepth <= depth && typeof value === 'function') {\n\t      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n\t      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n\t      currentDepth += 1;\n\t      idx = endIdx;\n\t    }\n\t    return value;\n\t  });\n\t});\n\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Builds a list from a seed value. Accepts an iterator function, which returns\n\t * either false to stop iteration or an array of length 2 containing the value\n\t * to add to the resulting list and the seed to be used in the next call to the\n\t * iterator function.\n\t *\n\t * The iterator function receives one argument: *(seed)*.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.10.0\n\t * @category List\n\t * @sig (a -> [b]) -> * -> [b]\n\t * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n\t *        either false to quit iteration or an array of length two to proceed. The element\n\t *        at index 0 of this array will be added to the resulting array, and the element\n\t *        at index 1 will be passed to the next call to `fn`.\n\t * @param {*} seed The seed value.\n\t * @return {Array} The final list.\n\t * @example\n\t *\n\t *      var f = n => n > 50 ? false : [-n, n + 10];\n\t *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n\t * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n\t */\n\tmodule.exports = _curry2(function unfold(fn, seed) {\n\t  var pair = fn(seed);\n\t  var result = [];\n\t  while (pair && pair.length) {\n\t    result[result.length] = pair[0];\n\t    pair = fn(pair[1]);\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry2 = __webpack_require__(1);\n\tvar compose = __webpack_require__(49);\n\tvar uniq = __webpack_require__(64);\n\t\n\t\n\t/**\n\t * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t * of each list.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig [*] -> [*] -> [*]\n\t * @param {Array} as The first list.\n\t * @param {Array} bs The second list.\n\t * @return {Array} The first and second lists concatenated, with\n\t *         duplicates removed.\n\t * @example\n\t *\n\t *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n\t */\n\tmodule.exports = _curry2(compose(uniq, _concat));\n\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _concat = __webpack_require__(11);\n\tvar _curry3 = __webpack_require__(3);\n\tvar uniqWith = __webpack_require__(65);\n\t\n\t\n\t/**\n\t * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t * of each list. Duplication is determined according to the value returned by\n\t * applying the supplied predicate to two list elements.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category Relation\n\t * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t * @param {Function} pred A predicate used to test whether two items are equal.\n\t * @param {Array} list1 The first list.\n\t * @param {Array} list2 The second list.\n\t * @return {Array} The first and second lists concatenated, with\n\t *         duplicates removed.\n\t * @see R.union\n\t * @example\n\t *\n\t *      var l1 = [{a: 1}, {a: 2}];\n\t *      var l2 = [{a: 1}, {a: 4}];\n\t *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n\t */\n\tmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n\t  return uniqWith(pred, _concat(list1, list2));\n\t});\n\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Tests the final argument by passing it to the given predicate function. If\n\t * the predicate is not satisfied, the function will return the result of\n\t * calling the `whenFalseFn` function with the same argument. If the predicate\n\t * is satisfied, the argument is returned as is.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category Logic\n\t * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t * @param {Function} pred        A predicate function\n\t * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n\t *                               to a falsy value.\n\t * @param {*}        x           An object to test with the `pred` function and\n\t *                               pass to `whenFalseFn` if necessary.\n\t * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n\t * @see R.ifElse, R.when\n\t * @example\n\t *\n\t *      let safeInc = R.unless(R.isNil, R.inc);\n\t *      safeInc(null); //=> null\n\t *      safeInc(1); //=> 2\n\t */\n\tmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n\t  return pred(x) ? x : whenFalseFn(x);\n\t});\n\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _identity = __webpack_require__(55);\n\tvar chain = __webpack_require__(48);\n\t\n\t\n\t/**\n\t * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n\t * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category List\n\t * @sig Chain c => c (c a) -> c a\n\t * @param {*} list\n\t * @return {*}\n\t * @see R.flatten, R.chain\n\t * @example\n\t *\n\t *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n\t *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n\t */\n\tmodule.exports = chain(_identity);\n\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Takes a predicate, a transformation function, and an initial value,\n\t * and returns a value of the same type as the initial value.\n\t * It does so by applying the transformation until the predicate is satisfied,\n\t * at which point it returns the satisfactory value.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.20.0\n\t * @category Logic\n\t * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t * @param {Function} pred A predicate function\n\t * @param {Function} fn The iterator function\n\t * @param {*} init Initial value\n\t * @return {*} Final value that satisfies predicate\n\t * @example\n\t *\n\t *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n\t */\n\tmodule.exports = _curry3(function until(pred, fn, init) {\n\t  var val = init;\n\t  while (!pred(val)) {\n\t    val = fn(val);\n\t  }\n\t  return val;\n\t});\n\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry1 = __webpack_require__(2);\n\t\n\t\n\t/**\n\t * Returns a list of all the properties, including prototype properties, of the\n\t * supplied object.\n\t * Note that the order of the output array is not guaranteed to be consistent\n\t * across different JS platforms.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.2.0\n\t * @category Object\n\t * @sig {k: v} -> [v]\n\t * @param {Object} obj The object to extract values from\n\t * @return {Array} An array of the values of the object's own and prototype properties.\n\t * @see R.values, R.keysIn\n\t * @example\n\t *\n\t *      var F = function() { this.x = 'X'; };\n\t *      F.prototype.y = 'Y';\n\t *      var f = new F();\n\t *      R.valuesIn(f); //=> ['X', 'Y']\n\t */\n\tmodule.exports = _curry1(function valuesIn(obj) {\n\t  var prop;\n\t  var vs = [];\n\t  for (prop in obj) {\n\t    vs[vs.length] = obj[prop];\n\t  }\n\t  return vs;\n\t});\n\n\n/***/ }),\n/* 328 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Returns a \"view\" of the given data structure, determined by the given lens.\n\t * The lens's focus determines which portion of the data structure is visible.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.16.0\n\t * @category Object\n\t * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t * @sig Lens s a -> s -> a\n\t * @param {Lens} lens\n\t * @param {*} x\n\t * @return {*}\n\t * @see R.prop, R.lensIndex, R.lensProp\n\t * @example\n\t *\n\t *      var xLens = R.lensProp('x');\n\t *\n\t *      R.view(xLens, {x: 1, y: 2});  //=> 1\n\t *      R.view(xLens, {x: 4, y: 2});  //=> 4\n\t */\n\tmodule.exports = (function() {\n\t  // `Const` is a functor that effectively ignores the function given to `map`.\n\t  var Const = function(x) {\n\t    return {value: x, 'fantasy-land/map': function() { return this; }};\n\t  };\n\t\n\t  return _curry2(function view(lens, x) {\n\t    // Using `Const` effectively ignores the setter function of the `lens`,\n\t    // leaving the value returned by the getter function unmodified.\n\t    return lens(Const)(x).value;\n\t  });\n\t}());\n\n\n/***/ }),\n/* 329 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Tests the final argument by passing it to the given predicate function. If\n\t * the predicate is satisfied, the function will return the result of calling\n\t * the `whenTrueFn` function with the same argument. If the predicate is not\n\t * satisfied, the argument is returned as is.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.18.0\n\t * @category Logic\n\t * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t * @param {Function} pred       A predicate function\n\t * @param {Function} whenTrueFn A function to invoke when the `condition`\n\t *                              evaluates to a truthy value.\n\t * @param {*}        x          An object to test with the `pred` function and\n\t *                              pass to `whenTrueFn` if necessary.\n\t * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n\t * @see R.ifElse, R.unless\n\t * @example\n\t *\n\t *      // truncate :: String -> String\n\t *      var truncate = R.when(\n\t *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n\t *        R.pipe(R.take(10), R.append('…'), R.join(''))\n\t *      );\n\t *      truncate('12345');         //=> '12345'\n\t *      truncate('0123456789ABC'); //=> '0123456789…'\n\t */\n\tmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n\t  return pred(x) ? whenTrueFn(x) : x;\n\t});\n\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\tvar equals = __webpack_require__(9);\n\tvar map = __webpack_require__(8);\n\tvar where = __webpack_require__(127);\n\t\n\t\n\t/**\n\t * Takes a spec object and a test object; returns true if the test satisfies\n\t * the spec, false otherwise. An object satisfies the spec if, for each of the\n\t * spec's own properties, accessing that property of the object gives the same\n\t * value (in [`R.equals`](#equals) terms) as accessing that property of the\n\t * spec.\n\t *\n\t * `whereEq` is a specialization of [`where`](#where).\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.14.0\n\t * @category Object\n\t * @sig {String: *} -> {String: *} -> Boolean\n\t * @param {Object} spec\n\t * @param {Object} testObj\n\t * @return {Boolean}\n\t * @see R.where\n\t * @example\n\t *\n\t *      // pred :: Object -> Boolean\n\t *      var pred = R.whereEq({a: 1, b: 2});\n\t *\n\t *      pred({a: 1});              //=> false\n\t *      pred({a: 1, b: 2});        //=> true\n\t *      pred({a: 1, b: 2, c: 3});  //=> true\n\t *      pred({a: 1, b: 1});        //=> false\n\t */\n\tmodule.exports = _curry2(function whereEq(spec, testObj) {\n\t  return where(map(equals, spec), testObj);\n\t});\n\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _contains = __webpack_require__(18);\n\tvar _curry2 = __webpack_require__(1);\n\tvar flip = __webpack_require__(33);\n\tvar reject = __webpack_require__(45);\n\t\n\t\n\t/**\n\t * Returns a new list without values in the first argument.\n\t * [`R.equals`](#equals) is used to determine equality.\n\t *\n\t * Acts as a transducer if a transformer is given in list position.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.19.0\n\t * @category List\n\t * @sig [a] -> [a] -> [a]\n\t * @param {Array} list1 The values to be removed from `list2`.\n\t * @param {Array} list2 The array to remove values from.\n\t * @return {Array} The new array without values in `list1`.\n\t * @see R.transduce, R.difference\n\t * @example\n\t *\n\t *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n\t */\n\tmodule.exports = _curry2(function(xs, list) {\n\t  return reject(flip(_contains)(xs), list);\n\t});\n\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a new list out of the two supplied by creating each possible pair\n\t * from the lists.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [b] -> [[a,b]]\n\t * @param {Array} as The first list.\n\t * @param {Array} bs The second list.\n\t * @return {Array} The list made by combining each possible pair from\n\t *         `as` and `bs` into pairs (`[a, b]`).\n\t * @example\n\t *\n\t *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n\t * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n\t */\n\tmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n\t  var idx = 0;\n\t  var ilen = a.length;\n\t  var j;\n\t  var jlen = b.length;\n\t  var result = [];\n\t  while (idx < ilen) {\n\t    j = 0;\n\t    while (j < jlen) {\n\t      result[result.length] = [a[idx], b[j]];\n\t      j += 1;\n\t    }\n\t    idx += 1;\n\t  }\n\t  return result;\n\t});\n\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a new list out of the two supplied by pairing up equally-positioned\n\t * items from both lists. The returned list is truncated to the length of the\n\t * shorter of the two input lists.\n\t * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig [a] -> [b] -> [[a,b]]\n\t * @param {Array} list1 The first array to consider.\n\t * @param {Array} list2 The second array to consider.\n\t * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n\t * @example\n\t *\n\t *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n\t */\n\tmodule.exports = _curry2(function zip(a, b) {\n\t  var rv = [];\n\t  var idx = 0;\n\t  var len = Math.min(a.length, b.length);\n\t  while (idx < len) {\n\t    rv[idx] = [a[idx], b[idx]];\n\t    idx += 1;\n\t  }\n\t  return rv;\n\t});\n\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry2 = __webpack_require__(1);\n\t\n\t\n\t/**\n\t * Creates a new object out of a list of keys and a list of values.\n\t * Key/value pairing is truncated to the length of the shorter of the two lists.\n\t * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n\t *\n\t * @func\n\t * @memberOf R\n\t * @since v0.3.0\n\t * @category List\n\t * @sig [String] -> [*] -> {String: *}\n\t * @param {Array} keys The array that will be properties on the output object.\n\t * @param {Array} values The list of values on the output object.\n\t * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n\t * @example\n\t *\n\t *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n\t */\n\tmodule.exports = _curry2(function zipObj(keys, values) {\n\t  var idx = 0;\n\t  var len = Math.min(keys.length, values.length);\n\t  var out = {};\n\t  while (idx < len) {\n\t    out[keys[idx]] = values[idx];\n\t    idx += 1;\n\t  }\n\t  return out;\n\t});\n\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar _curry3 = __webpack_require__(3);\n\t\n\t\n\t/**\n\t * Creates a new list out of the two supplied by applying the function to each\n\t * equally-positioned pair in the lists. The returned list is truncated to the\n\t * length of the shorter of the two input lists.\n\t *\n\t * @function\n\t * @memberOf R\n\t * @since v0.1.0\n\t * @category List\n\t * @sig (a,b -> c) -> [a] -> [b] -> [c]\n\t * @param {Function} fn The function used to combine the two elements into one value.\n\t * @param {Array} list1 The first array to consider.\n\t * @param {Array} list2 The second array to consider.\n\t * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n\t *         using `fn`.\n\t * @example\n\t *\n\t *      var f = (x, y) => {\n\t *        // ...\n\t *      };\n\t *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n\t *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n\t * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n\t */\n\tmodule.exports = _curry3(function zipWith(fn, a, b) {\n\t  var rv = [];\n\t  var idx = 0;\n\t  var len = Math.min(a.length, b.length);\n\t  while (idx < len) {\n\t    rv[idx] = fn(a[idx], b[idx]);\n\t    idx += 1;\n\t  }\n\t  return rv;\n\t});\n\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * The MIT License (MIT)\n\t * \n\t * Copyright (c) 2017 Juan Cazala - https://caza.la\n\t * \n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t * \n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE\n\t * \n\t * \n\t * \n\t * ********************************************************************************************\n\t *                                   SYNAPTIC (v1.1.4)\n\t * ********************************************************************************************\n\t * \n\t * Synaptic is a javascript neural network library for node.js and the browser, its generalized\n\t * algorithm is architecture-free, so you can build and train basically any type of first order\n\t * or even second order neural network architectures.\n\t * \n\t * http://en.wikipedia.org/wiki/Recurrent_neural_network#Second_Order_Recurrent_Neural_Network\n\t * \n\t * The library includes a few built-in architectures like multilayer perceptrons, multilayer\n\t * long-short term memory networks (LSTM) or liquid state machines, and a trainer capable of\n\t * training any given network, and includes built-in training tasks/tests like solving an XOR,\n\t * passing a Distracted Sequence Recall test or an Embeded Reber Grammar test.\n\t * \n\t * The algorithm implemented by this library has been taken from Derek D. Monner's paper:\n\t * \n\t * \n\t * A generalized LSTM-like training algorithm for second-order recurrent neural networks\n\t * http://www.overcomplete.net/papers/nn2012.pdf\n\t * \n\t * There are references to the equations in that paper commented through the source code.\n\t * \n\t */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"synaptic\"] = factory();\n\t\telse\n\t\t\troot[\"synaptic\"] = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__webpack_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__webpack_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _LayerConnection = __webpack_require__(6);\n\t\n\tvar _LayerConnection2 = _interopRequireDefault(_LayerConnection);\n\t\n\tvar _Neuron = __webpack_require__(2);\n\t\n\tvar _Neuron2 = _interopRequireDefault(_Neuron);\n\t\n\tvar _Network = __webpack_require__(1);\n\t\n\tvar _Network2 = _interopRequireDefault(_Network);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// types of connections\n\tvar connectionType = {\n\t  ALL_TO_ALL: \"ALL TO ALL\",\n\t  ONE_TO_ONE: \"ONE TO ONE\",\n\t  ALL_TO_ELSE: \"ALL TO ELSE\"\n\t};\n\t\n\t// types of gates\n\tvar gateType = {\n\t  INPUT: \"INPUT\",\n\t  OUTPUT: \"OUTPUT\",\n\t  ONE_TO_ONE: \"ONE TO ONE\"\n\t};\n\t\n\tvar Layer = function () {\n\t  function Layer(size) {\n\t    _classCallCheck(this, Layer);\n\t\n\t    this.size = size | 0;\n\t    this.list = [];\n\t\n\t    this.connectedTo = [];\n\t\n\t    while (size--) {\n\t      var neuron = new _Neuron2.default();\n\t      this.list.push(neuron);\n\t    }\n\t  }\n\t\n\t  // activates all the neurons in the layer\n\t\n\t\n\t  _createClass(Layer, [{\n\t    key: 'activate',\n\t    value: function activate(input) {\n\t\n\t      var activations = [];\n\t\n\t      if (typeof input != 'undefined') {\n\t        if (input.length != this.size) throw new Error('INPUT size and LAYER size must be the same to activate!');\n\t\n\t        for (var id in this.list) {\n\t          var neuron = this.list[id];\n\t          var activation = neuron.activate(input[id]);\n\t          activations.push(activation);\n\t        }\n\t      } else {\n\t        for (var id in this.list) {\n\t          var neuron = this.list[id];\n\t          var activation = neuron.activate();\n\t          activations.push(activation);\n\t        }\n\t      }\n\t      return activations;\n\t    }\n\t\n\t    // propagates the error on all the neurons of the layer\n\t\n\t  }, {\n\t    key: 'propagate',\n\t    value: function propagate(rate, target) {\n\t\n\t      if (typeof target != 'undefined') {\n\t        if (target.length != this.size) throw new Error('TARGET size and LAYER size must be the same to propagate!');\n\t\n\t        for (var id = this.list.length - 1; id >= 0; id--) {\n\t          var neuron = this.list[id];\n\t          neuron.propagate(rate, target[id]);\n\t        }\n\t      } else {\n\t        for (var id = this.list.length - 1; id >= 0; id--) {\n\t          var neuron = this.list[id];\n\t          neuron.propagate(rate);\n\t        }\n\t      }\n\t    }\n\t\n\t    // projects a connection from this layer to another one\n\t\n\t  }, {\n\t    key: 'project',\n\t    value: function project(layer, type, weights) {\n\t\n\t      if (layer instanceof _Network2.default) layer = layer.layers.input;\n\t\n\t      if (layer instanceof Layer) {\n\t        if (!this.connected(layer)) return new _LayerConnection2.default(this, layer, type, weights);\n\t      } else throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n\t    }\n\t\n\t    // gates a connection betwenn two layers\n\t\n\t  }, {\n\t    key: 'gate',\n\t    value: function gate(connection, type) {\n\t\n\t      if (type == Layer.gateType.INPUT) {\n\t        if (connection.to.size != this.size) throw new Error('GATER layer and CONNECTION.TO layer must be the same size in order to gate!');\n\t\n\t        for (var id in connection.to.list) {\n\t          var neuron = connection.to.list[id];\n\t          var gater = this.list[id];\n\t          for (var input in neuron.connections.inputs) {\n\t            var gated = neuron.connections.inputs[input];\n\t            if (gated.ID in connection.connections) gater.gate(gated);\n\t          }\n\t        }\n\t      } else if (type == Layer.gateType.OUTPUT) {\n\t        if (connection.from.size != this.size) throw new Error('GATER layer and CONNECTION.FROM layer must be the same size in order to gate!');\n\t\n\t        for (var id in connection.from.list) {\n\t          var neuron = connection.from.list[id];\n\t          var gater = this.list[id];\n\t          for (var projected in neuron.connections.projected) {\n\t            var gated = neuron.connections.projected[projected];\n\t            if (gated.ID in connection.connections) gater.gate(gated);\n\t          }\n\t        }\n\t      } else if (type == Layer.gateType.ONE_TO_ONE) {\n\t        if (connection.size != this.size) throw new Error('The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!');\n\t\n\t        for (var id in connection.list) {\n\t          var gater = this.list[id];\n\t          var gated = connection.list[id];\n\t          gater.gate(gated);\n\t        }\n\t      }\n\t      connection.gatedfrom.push({ layer: this, type: type });\n\t    }\n\t\n\t    // true or false whether the whole layer is self-connected or not\n\t\n\t  }, {\n\t    key: 'selfconnected',\n\t    value: function selfconnected() {\n\t\n\t      for (var id in this.list) {\n\t        var neuron = this.list[id];\n\t        if (!neuron.selfconnected()) return false;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // true of false whether the layer is connected to another layer (parameter) or not\n\t\n\t  }, {\n\t    key: 'connected',\n\t    value: function connected(layer) {\n\t      // Check if ALL to ALL connection\n\t      var connections = 0;\n\t      for (var here in this.list) {\n\t        for (var there in layer.list) {\n\t          var from = this.list[here];\n\t          var to = layer.list[there];\n\t          var connected = from.connected(to);\n\t          if (connected.type == 'projected') connections++;\n\t        }\n\t      }\n\t      if (connections == this.size * layer.size) return Layer.connectionType.ALL_TO_ALL;\n\t\n\t      // Check if ONE to ONE connection\n\t      connections = 0;\n\t      for (var neuron in this.list) {\n\t        var from = this.list[neuron];\n\t        var to = layer.list[neuron];\n\t        var connected = from.connected(to);\n\t        if (connected.type == 'projected') connections++;\n\t      }\n\t      if (connections == this.size) return Layer.connectionType.ONE_TO_ONE;\n\t    }\n\t\n\t    // clears all the neuorns in the layer\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      for (var id in this.list) {\n\t        var neuron = this.list[id];\n\t        neuron.clear();\n\t      }\n\t    }\n\t\n\t    // resets all the neurons in the layer\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      for (var id in this.list) {\n\t        var neuron = this.list[id];\n\t        neuron.reset();\n\t      }\n\t    }\n\t\n\t    // returns all the neurons in the layer (array)\n\t\n\t  }, {\n\t    key: 'neurons',\n\t    value: function neurons() {\n\t      return this.list;\n\t    }\n\t\n\t    // adds a neuron to the layer\n\t\n\t  }, {\n\t    key: 'add',\n\t    value: function add(neuron) {\n\t      neuron = neuron || new _Neuron2.default();\n\t      this.list.push(neuron);\n\t      this.size++;\n\t    }\n\t  }, {\n\t    key: 'set',\n\t    value: function set(options) {\n\t      options = options || {};\n\t\n\t      for (var i in this.list) {\n\t        var neuron = this.list[i];\n\t        if (options.label) neuron.label = options.label + '_' + neuron.ID;\n\t        if (options.squash) neuron.squash = options.squash;\n\t        if (options.bias) neuron.bias = options.bias;\n\t      }\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return Layer;\n\t}();\n\t\n\tLayer.connectionType = connectionType;\n\tLayer.gateType = gateType;\n\texports.default = Layer;\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Neuron = __webpack_require__(2);\n\t\n\tvar _Neuron2 = _interopRequireDefault(_Neuron);\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tvar _Trainer = __webpack_require__(3);\n\t\n\tvar _Trainer2 = _interopRequireDefault(_Trainer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Network = function () {\n\t  function Network(layers) {\n\t    _classCallCheck(this, Network);\n\t\n\t    if (typeof layers != 'undefined') {\n\t      this.layers = {\n\t        input: layers.input || null,\n\t        hidden: layers.hidden || [],\n\t        output: layers.output || null\n\t      };\n\t      this.optimized = null;\n\t    }\n\t  }\n\t\n\t  // feed-forward activation of all the layers to produce an ouput\n\t\n\t\n\t  _createClass(Network, [{\n\t    key: 'activate',\n\t    value: function activate(input) {\n\t      if (this.optimized === false) {\n\t        this.layers.input.activate(input);\n\t        for (var i = 0; i < this.layers.hidden.length; i++) {\n\t          this.layers.hidden[i].activate();\n\t        }return this.layers.output.activate();\n\t      } else {\n\t        if (this.optimized == null) this.optimize();\n\t        return this.optimized.activate(input);\n\t      }\n\t    }\n\t\n\t    // back-propagate the error thru the network\n\t\n\t  }, {\n\t    key: 'propagate',\n\t    value: function propagate(rate, target) {\n\t      if (this.optimized === false) {\n\t        this.layers.output.propagate(rate, target);\n\t        for (var i = this.layers.hidden.length - 1; i >= 0; i--) {\n\t          this.layers.hidden[i].propagate(rate);\n\t        }\n\t      } else {\n\t        if (this.optimized == null) this.optimize();\n\t        this.optimized.propagate(rate, target);\n\t      }\n\t    }\n\t\n\t    // project a connection to another unit (either a network or a layer)\n\t\n\t  }, {\n\t    key: 'project',\n\t    value: function project(unit, type, weights) {\n\t      if (this.optimized) this.optimized.reset();\n\t\n\t      if (unit instanceof Network) return this.layers.output.project(unit.layers.input, type, weights);\n\t\n\t      if (unit instanceof _Layer2.default) return this.layers.output.project(unit, type, weights);\n\t\n\t      throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n\t    }\n\t\n\t    // let this network gate a connection\n\t\n\t  }, {\n\t    key: 'gate',\n\t    value: function gate(connection, type) {\n\t      if (this.optimized) this.optimized.reset();\n\t      this.layers.output.gate(connection, type);\n\t    }\n\t\n\t    // clear all elegibility traces and extended elegibility traces (the network forgets its context, but not what was trained)\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      this.restore();\n\t\n\t      var inputLayer = this.layers.input,\n\t          outputLayer = this.layers.output;\n\t\n\t      inputLayer.clear();\n\t      for (var i = 0; i < this.layers.hidden.length; i++) {\n\t        this.layers.hidden[i].clear();\n\t      }\n\t      outputLayer.clear();\n\t\n\t      if (this.optimized) this.optimized.reset();\n\t    }\n\t\n\t    // reset all weights and clear all traces (ends up like a new network)\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.restore();\n\t\n\t      var inputLayer = this.layers.input,\n\t          outputLayer = this.layers.output;\n\t\n\t      inputLayer.reset();\n\t      for (var i = 0; i < this.layers.hidden.length; i++) {\n\t        this.layers.hidden[i].reset();\n\t      }\n\t      outputLayer.reset();\n\t\n\t      if (this.optimized) this.optimized.reset();\n\t    }\n\t\n\t    // hardcodes the behaviour of the whole network into a single optimized function\n\t\n\t  }, {\n\t    key: 'optimize',\n\t    value: function optimize() {\n\t      var that = this;\n\t      var optimized = {};\n\t      var neurons = this.neurons();\n\t\n\t      for (var i = 0; i < neurons.length; i++) {\n\t        var neuron = neurons[i].neuron;\n\t        var layer = neurons[i].layer;\n\t        while (neuron.neuron) {\n\t          neuron = neuron.neuron;\n\t        }optimized = neuron.optimize(optimized, layer);\n\t      }\n\t\n\t      for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n\t        optimized.propagation_sentences[i].reverse();\n\t      }optimized.propagation_sentences.reverse();\n\t\n\t      var hardcode = '';\n\t      hardcode += 'var F = Float64Array ? new Float64Array(' + optimized.memory + ') : []; ';\n\t      for (var i in optimized.variables) {\n\t        hardcode += 'F[' + optimized.variables[i].id + '] = ' + (optimized.variables[i].value || 0) + '; ';\n\t      }hardcode += 'var activate = function(input){\\n';\n\t      for (var i = 0; i < optimized.inputs.length; i++) {\n\t        hardcode += 'F[' + optimized.inputs[i] + '] = input[' + i + ']; ';\n\t      }for (var i = 0; i < optimized.activation_sentences.length; i++) {\n\t        if (optimized.activation_sentences[i].length > 0) {\n\t          for (var j = 0; j < optimized.activation_sentences[i].length; j++) {\n\t            hardcode += optimized.activation_sentences[i][j].join(' ');\n\t            hardcode += optimized.trace_sentences[i][j].join(' ');\n\t          }\n\t        }\n\t      }\n\t      hardcode += ' var output = []; ';\n\t      for (var i = 0; i < optimized.outputs.length; i++) {\n\t        hardcode += 'output[' + i + '] = F[' + optimized.outputs[i] + ']; ';\n\t      }hardcode += 'return output; }; ';\n\t      hardcode += 'var propagate = function(rate, target){\\n';\n\t      hardcode += 'F[' + optimized.variables.rate.id + '] = rate; ';\n\t      for (var i = 0; i < optimized.targets.length; i++) {\n\t        hardcode += 'F[' + optimized.targets[i] + '] = target[' + i + ']; ';\n\t      }for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n\t        for (var j = 0; j < optimized.propagation_sentences[i].length; j++) {\n\t          hardcode += optimized.propagation_sentences[i][j].join(' ') + ' ';\n\t        }\n\t      }hardcode += ' };\\n';\n\t      hardcode += 'var ownership = function(memoryBuffer){\\nF = memoryBuffer;\\nthis.memory = F;\\n};\\n';\n\t      hardcode += 'return {\\nmemory: F,\\nactivate: activate,\\npropagate: propagate,\\nownership: ownership\\n};';\n\t      hardcode = hardcode.split(';').join(';\\n');\n\t\n\t      var constructor = new Function(hardcode);\n\t\n\t      var network = constructor();\n\t      network.data = {\n\t        variables: optimized.variables,\n\t        activate: optimized.activation_sentences,\n\t        propagate: optimized.propagation_sentences,\n\t        trace: optimized.trace_sentences,\n\t        inputs: optimized.inputs,\n\t        outputs: optimized.outputs,\n\t        check_activation: this.activate,\n\t        check_propagation: this.propagate\n\t      };\n\t\n\t      network.reset = function () {\n\t        if (that.optimized) {\n\t          that.optimized = null;\n\t          that.activate = network.data.check_activation;\n\t          that.propagate = network.data.check_propagation;\n\t        }\n\t      };\n\t\n\t      this.optimized = network;\n\t      this.activate = network.activate;\n\t      this.propagate = network.propagate;\n\t    }\n\t\n\t    // restores all the values from the optimized network the their respective objects in order to manipulate the network\n\t\n\t  }, {\n\t    key: 'restore',\n\t    value: function restore() {\n\t      if (!this.optimized) return;\n\t\n\t      var optimized = this.optimized;\n\t\n\t      var getValue = function getValue() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t\n\t        var unit = args.shift();\n\t        var prop = args.pop();\n\t\n\t        var id = prop + '_';\n\t        for (var property in args) {\n\t          id += args[property] + '_';\n\t        }id += unit.ID;\n\t\n\t        var memory = optimized.memory;\n\t        var variables = optimized.data.variables;\n\t\n\t        if (id in variables) return memory[variables[id].id];\n\t        return 0;\n\t      };\n\t\n\t      var list = this.neurons();\n\t\n\t      // link id's to positions in the array\n\t      for (var i = 0; i < list.length; i++) {\n\t        var neuron = list[i].neuron;\n\t        while (neuron.neuron) {\n\t          neuron = neuron.neuron;\n\t        }neuron.state = getValue(neuron, 'state');\n\t        neuron.old = getValue(neuron, 'old');\n\t        neuron.activation = getValue(neuron, 'activation');\n\t        neuron.bias = getValue(neuron, 'bias');\n\t\n\t        for (var input in neuron.trace.elegibility) {\n\t          neuron.trace.elegibility[input] = getValue(neuron, 'trace', 'elegibility', input);\n\t        }for (var gated in neuron.trace.extended) {\n\t          for (var input in neuron.trace.extended[gated]) {\n\t            neuron.trace.extended[gated][input] = getValue(neuron, 'trace', 'extended', gated, input);\n\t          }\n\t        } // get connections\n\t        for (var j in neuron.connections.projected) {\n\t          var connection = neuron.connections.projected[j];\n\t          connection.weight = getValue(connection, 'weight');\n\t          connection.gain = getValue(connection, 'gain');\n\t        }\n\t      }\n\t    }\n\t\n\t    // returns all the neurons in the network\n\t\n\t  }, {\n\t    key: 'neurons',\n\t    value: function neurons() {\n\t      var neurons = [];\n\t\n\t      var inputLayer = this.layers.input.neurons(),\n\t          outputLayer = this.layers.output.neurons();\n\t\n\t      for (var i = 0; i < inputLayer.length; i++) {\n\t        neurons.push({\n\t          neuron: inputLayer[i],\n\t          layer: 'input'\n\t        });\n\t      }\n\t\n\t      for (var i = 0; i < this.layers.hidden.length; i++) {\n\t        var hiddenLayer = this.layers.hidden[i].neurons();\n\t        for (var j = 0; j < hiddenLayer.length; j++) {\n\t          neurons.push({\n\t            neuron: hiddenLayer[j],\n\t            layer: i\n\t          });\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < outputLayer.length; i++) {\n\t        neurons.push({\n\t          neuron: outputLayer[i],\n\t          layer: 'output'\n\t        });\n\t      }\n\t\n\t      return neurons;\n\t    }\n\t\n\t    // returns number of inputs of the network\n\t\n\t  }, {\n\t    key: 'inputs',\n\t    value: function inputs() {\n\t      return this.layers.input.size;\n\t    }\n\t\n\t    // returns number of outputs of hte network\n\t\n\t  }, {\n\t    key: 'outputs',\n\t    value: function outputs() {\n\t      return this.layers.output.size;\n\t    }\n\t\n\t    // sets the layers of the network\n\t\n\t  }, {\n\t    key: 'set',\n\t    value: function set(layers) {\n\t      this.layers = {\n\t        input: layers.input || null,\n\t        hidden: layers.hidden || [],\n\t        output: layers.output || null\n\t      };\n\t      if (this.optimized) this.optimized.reset();\n\t    }\n\t  }, {\n\t    key: 'setOptimize',\n\t    value: function setOptimize(bool) {\n\t      this.restore();\n\t      if (this.optimized) this.optimized.reset();\n\t      this.optimized = bool ? null : false;\n\t    }\n\t\n\t    // returns a json that represents all the neurons and connections of the network\n\t\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON(ignoreTraces) {\n\t      this.restore();\n\t\n\t      var list = this.neurons();\n\t      var neurons = [];\n\t      var connections = [];\n\t\n\t      // link id's to positions in the array\n\t      var ids = {};\n\t      for (var i = 0; i < list.length; i++) {\n\t        var neuron = list[i].neuron;\n\t        while (neuron.neuron) {\n\t          neuron = neuron.neuron;\n\t        }ids[neuron.ID] = i;\n\t\n\t        var copy = {\n\t          trace: {\n\t            elegibility: {},\n\t            extended: {}\n\t          },\n\t          state: neuron.state,\n\t          old: neuron.old,\n\t          activation: neuron.activation,\n\t          bias: neuron.bias,\n\t          layer: list[i].layer\n\t        };\n\t\n\t        copy.squash = neuron.squash == _Neuron2.default.squash.LOGISTIC ? 'LOGISTIC' : neuron.squash == _Neuron2.default.squash.TANH ? 'TANH' : neuron.squash == _Neuron2.default.squash.IDENTITY ? 'IDENTITY' : neuron.squash == _Neuron2.default.squash.HLIM ? 'HLIM' : neuron.squash == _Neuron2.default.squash.RELU ? 'RELU' : null;\n\t\n\t        neurons.push(copy);\n\t      }\n\t\n\t      for (var i = 0; i < list.length; i++) {\n\t        var neuron = list[i].neuron;\n\t        while (neuron.neuron) {\n\t          neuron = neuron.neuron;\n\t        }for (var j in neuron.connections.projected) {\n\t          var connection = neuron.connections.projected[j];\n\t          connections.push({\n\t            from: ids[connection.from.ID],\n\t            to: ids[connection.to.ID],\n\t            weight: connection.weight,\n\t            gater: connection.gater ? ids[connection.gater.ID] : null\n\t          });\n\t        }\n\t        if (neuron.selfconnected()) {\n\t          connections.push({\n\t            from: ids[neuron.ID],\n\t            to: ids[neuron.ID],\n\t            weight: neuron.selfconnection.weight,\n\t            gater: neuron.selfconnection.gater ? ids[neuron.selfconnection.gater.ID] : null\n\t          });\n\t        }\n\t      }\n\t\n\t      return {\n\t        neurons: neurons,\n\t        connections: connections\n\t      };\n\t    }\n\t\n\t    // export the topology into dot language which can be visualized as graphs using dot\n\t    /* example: ... console.log(net.toDotLang());\n\t                $ node example.js > example.dot\n\t                $ dot example.dot -Tpng > out.png\n\t    */\n\t\n\t  }, {\n\t    key: 'toDot',\n\t    value: function toDot(edgeConnection) {\n\t      if (!(typeof edgeConnection === 'undefined' ? 'undefined' : _typeof(edgeConnection))) edgeConnection = false;\n\t      var code = 'digraph nn {\\n    rankdir = BT\\n';\n\t      var layers = [this.layers.input].concat(this.layers.hidden, this.layers.output);\n\t      for (var i = 0; i < layers.length; i++) {\n\t        for (var j = 0; j < layers[i].connectedTo.length; j++) {\n\t          // projections\n\t          var connection = layers[i].connectedTo[j];\n\t          var layerTo = connection.to;\n\t          var size = connection.size;\n\t          var layerID = layers.indexOf(layers[i]);\n\t          var layerToID = layers.indexOf(layerTo);\n\t          /* http://stackoverflow.com/questions/26845540/connect-edges-with-graph-dot\n\t           * DOT does not support edge-to-edge connections\n\t           * This workaround produces somewhat weird graphs ...\n\t          */\n\t          if (edgeConnection) {\n\t            if (connection.gatedfrom.length) {\n\t              var fakeNode = 'fake' + layerID + '_' + layerToID;\n\t              code += '    ' + fakeNode + ' [label = \"\", shape = point, width = 0.01, height = 0.01]\\n';\n\t              code += '    ' + layerID + ' -> ' + fakeNode + ' [label = ' + size + ', arrowhead = none]\\n';\n\t              code += '    ' + fakeNode + ' -> ' + layerToID + '\\n';\n\t            } else code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n\t            for (var from in connection.gatedfrom) {\n\t              // gatings\n\t              var layerfrom = connection.gatedfrom[from].layer;\n\t              var layerfromID = layers.indexOf(layerfrom);\n\t              code += '    ' + layerfromID + ' -> ' + fakeNode + ' [color = blue]\\n';\n\t            }\n\t          } else {\n\t            code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n\t            for (var from in connection.gatedfrom) {\n\t              // gatings\n\t              var layerfrom = connection.gatedfrom[from].layer;\n\t              var layerfromID = layers.indexOf(layerfrom);\n\t              code += '    ' + layerfromID + ' -> ' + layerToID + ' [color = blue]\\n';\n\t            }\n\t          }\n\t        }\n\t      }\n\t      code += '}\\n';\n\t      return {\n\t        code: code,\n\t        link: 'https://chart.googleapis.com/chart?chl=' + escape(code.replace('/ /g', '+')) + '&cht=gv'\n\t      };\n\t    }\n\t\n\t    // returns a function that works as the activation of the network and can be used without depending on the library\n\t\n\t  }, {\n\t    key: 'standalone',\n\t    value: function standalone() {\n\t      if (!this.optimized) this.optimize();\n\t\n\t      var data = this.optimized.data;\n\t\n\t      // build activation function\n\t      var activation = 'function (input) {\\n';\n\t\n\t      // build inputs\n\t      for (var i = 0; i < data.inputs.length; i++) {\n\t        activation += 'F[' + data.inputs[i] + '] = input[' + i + '];\\n';\n\t      } // build network activation\n\t      for (var i = 0; i < data.activate.length; i++) {\n\t        // shouldn't this be layer?\n\t        for (var j = 0; j < data.activate[i].length; j++) {\n\t          activation += data.activate[i][j].join('') + '\\n';\n\t        }\n\t      }\n\t\n\t      // build outputs\n\t      activation += 'var output = [];\\n';\n\t      for (var i = 0; i < data.outputs.length; i++) {\n\t        activation += 'output[' + i + '] = F[' + data.outputs[i] + '];\\n';\n\t      }activation += 'return output;\\n}';\n\t\n\t      // reference all the positions in memory\n\t      var memory = activation.match(/F\\[(\\d+)\\]/g);\n\t      var dimension = 0;\n\t      var ids = {};\n\t\n\t      for (var i = 0; i < memory.length; i++) {\n\t        var tmp = memory[i].match(/\\d+/)[0];\n\t        if (!(tmp in ids)) {\n\t          ids[tmp] = dimension++;\n\t        }\n\t      }\n\t      var hardcode = 'F = {\\n';\n\t\n\t      for (var i in ids) {\n\t        hardcode += ids[i] + ': ' + this.optimized.memory[i] + ',\\n';\n\t      }hardcode = hardcode.substring(0, hardcode.length - 2) + '\\n};\\n';\n\t      hardcode = 'var run = ' + activation.replace(/F\\[(\\d+)]/g, function (index) {\n\t        return 'F[' + ids[index.match(/\\d+/)[0]] + ']';\n\t      }).replace('{\\n', '{\\n' + hardcode + '') + ';\\n';\n\t      hardcode += 'return run';\n\t\n\t      // return standalone function\n\t      return new Function(hardcode)();\n\t    }\n\t\n\t    // Return a HTML5 WebWorker specialized on training the network stored in `memory`.\n\t    // Train based on the given dataSet and options.\n\t    // The worker returns the updated `memory` when done.\n\t\n\t  }, {\n\t    key: 'worker',\n\t    value: function worker(memory, set, options) {\n\t      // Copy the options and set defaults (options might be different for each worker)\n\t      var workerOptions = {};\n\t      if (options) workerOptions = options;\n\t      workerOptions.rate = workerOptions.rate || .2;\n\t      workerOptions.iterations = workerOptions.iterations || 100000;\n\t      workerOptions.error = workerOptions.error || .005;\n\t      workerOptions.cost = workerOptions.cost || null;\n\t      workerOptions.crossValidate = workerOptions.crossValidate || null;\n\t\n\t      // Cost function might be different for each worker\n\t      var costFunction = '// REPLACED BY WORKER\\nvar cost = ' + (options && options.cost || this.cost || _Trainer2.default.cost.MSE) + ';\\n';\n\t      var workerFunction = Network.getWorkerSharedFunctions();\n\t      workerFunction = workerFunction.replace(/var cost = options && options\\.cost \\|\\| this\\.cost \\|\\| Trainer\\.cost\\.MSE;/g, costFunction);\n\t\n\t      // Set what we do when training is finished\n\t      workerFunction = workerFunction.replace('return results;', 'postMessage({action: \"done\", message: results, memoryBuffer: F}, [F.buffer]);');\n\t\n\t      // Replace log with postmessage\n\t      workerFunction = workerFunction.replace('console.log(\\'iterations\\', iterations, \\'error\\', error, \\'rate\\', currentRate)', 'postMessage({action: \\'log\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\t\n\t      // Replace schedule with postmessage\n\t      workerFunction = workerFunction.replace('abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate })', 'postMessage({action: \\'schedule\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\t\n\t      if (!this.optimized) this.optimize();\n\t\n\t      var hardcode = 'var inputs = ' + this.optimized.data.inputs.length + ';\\n';\n\t      hardcode += 'var outputs = ' + this.optimized.data.outputs.length + ';\\n';\n\t      hardcode += 'var F =  new Float64Array([' + this.optimized.memory.toString() + ']);\\n';\n\t      hardcode += 'var activate = ' + this.optimized.activate.toString() + ';\\n';\n\t      hardcode += 'var propagate = ' + this.optimized.propagate.toString() + ';\\n';\n\t      hardcode += 'onmessage = function(e) {\\n' + 'if (e.data.action == \\'startTraining\\') {\\n' + 'train(' + JSON.stringify(set) + ',' + JSON.stringify(workerOptions) + ');\\n' + '}\\n' + '}';\n\t\n\t      var workerSourceCode = workerFunction + '\\n' + hardcode;\n\t      var blob = new Blob([workerSourceCode]);\n\t      var blobURL = window.URL.createObjectURL(blob);\n\t\n\t      return new Worker(blobURL);\n\t    }\n\t\n\t    // returns a copy of the network\n\t\n\t  }, {\n\t    key: 'clone',\n\t    value: function clone() {\n\t      return Network.fromJSON(this.toJSON());\n\t    }\n\t\n\t    /**\n\t     * Creates a static String to store the source code of the functions\n\t     *  that are identical for all the workers (train, _trainSet, test)\n\t     *\n\t     * @return {String} Source code that can train a network inside a worker.\n\t     * @static\n\t     */\n\t\n\t  }], [{\n\t    key: 'getWorkerSharedFunctions',\n\t    value: function getWorkerSharedFunctions() {\n\t      // If we already computed the source code for the shared functions\n\t      if (typeof Network._SHARED_WORKER_FUNCTIONS !== 'undefined') return Network._SHARED_WORKER_FUNCTIONS;\n\t\n\t      // Otherwise compute and return the source code\n\t      // We compute them by simply copying the source code of the train, _trainSet and test functions\n\t      //  using the .toString() method\n\t\n\t      // Load and name the train function\n\t      var train_f = _Trainer2.default.prototype.train.toString();\n\t      train_f = train_f.replace(/this._trainSet/g, '_trainSet');\n\t      train_f = train_f.replace(/this.test/g, 'test');\n\t      train_f = train_f.replace(/this.crossValidate/g, 'crossValidate');\n\t      train_f = train_f.replace('crossValidate = true', '// REMOVED BY WORKER');\n\t\n\t      // Load and name the _trainSet function\n\t      var _trainSet_f = _Trainer2.default.prototype._trainSet.toString().replace(/this.network./g, '');\n\t\n\t      // Load and name the test function\n\t      var test_f = _Trainer2.default.prototype.test.toString().replace(/this.network./g, '');\n\t\n\t      return Network._SHARED_WORKER_FUNCTIONS = train_f + '\\n' + _trainSet_f + '\\n' + test_f;\n\t    }\n\t  }, {\n\t    key: 'fromJSON',\n\t    value: function fromJSON(json) {\n\t      var neurons = [];\n\t\n\t      var layers = {\n\t        input: new _Layer2.default(),\n\t        hidden: [],\n\t        output: new _Layer2.default()\n\t      };\n\t\n\t      for (var i = 0; i < json.neurons.length; i++) {\n\t        var config = json.neurons[i];\n\t\n\t        var neuron = new _Neuron2.default();\n\t        neuron.trace.elegibility = {};\n\t        neuron.trace.extended = {};\n\t        neuron.state = config.state;\n\t        neuron.old = config.old;\n\t        neuron.activation = config.activation;\n\t        neuron.bias = config.bias;\n\t        neuron.squash = config.squash in _Neuron2.default.squash ? _Neuron2.default.squash[config.squash] : _Neuron2.default.squash.LOGISTIC;\n\t        neurons.push(neuron);\n\t\n\t        if (config.layer == 'input') layers.input.add(neuron);else if (config.layer == 'output') layers.output.add(neuron);else {\n\t          if (typeof layers.hidden[config.layer] == 'undefined') layers.hidden[config.layer] = new _Layer2.default();\n\t          layers.hidden[config.layer].add(neuron);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < json.connections.length; i++) {\n\t        var config = json.connections[i];\n\t        var from = neurons[config.from];\n\t        var to = neurons[config.to];\n\t        var weight = config.weight;\n\t        var gater = neurons[config.gater];\n\t\n\t        var connection = from.project(to, weight);\n\t        if (gater) gater.gate(connection);\n\t      }\n\t\n\t      return new Network(layers);\n\t    }\n\t  }]);\n\t\n\t  return Network;\n\t}();\n\t\n\texports.default = Network;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Connection = __webpack_require__(5);\n\t\n\tvar _Connection2 = _interopRequireDefault(_Connection);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar neurons = 0;\n\t\n\t// squashing functions\n\tvar squash = {\n\t  // eq. 5 & 5'\n\t  LOGISTIC: function LOGISTIC(x, derivate) {\n\t    var fx = 1 / (1 + Math.exp(-x));\n\t    if (!derivate) return fx;\n\t    return fx * (1 - fx);\n\t  },\n\t  TANH: function TANH(x, derivate) {\n\t    if (derivate) return 1 - Math.pow(Math.tanh(x), 2);\n\t    return Math.tanh(x);\n\t  },\n\t  IDENTITY: function IDENTITY(x, derivate) {\n\t    return derivate ? 1 : x;\n\t  },\n\t  HLIM: function HLIM(x, derivate) {\n\t    return derivate ? 1 : x > 0 ? 1 : 0;\n\t  },\n\t  RELU: function RELU(x, derivate) {\n\t    if (derivate) return x > 0 ? 1 : 0;\n\t    return x > 0 ? x : 0;\n\t  }\n\t};\n\t\n\tvar Neuron = function () {\n\t  function Neuron() {\n\t    _classCallCheck(this, Neuron);\n\t\n\t    this.ID = Neuron.uid();\n\t\n\t    this.connections = {\n\t      inputs: {},\n\t      projected: {},\n\t      gated: {}\n\t    };\n\t    this.error = {\n\t      responsibility: 0,\n\t      projected: 0,\n\t      gated: 0\n\t    };\n\t    this.trace = {\n\t      elegibility: {},\n\t      extended: {},\n\t      influences: {}\n\t    };\n\t    this.state = 0;\n\t    this.old = 0;\n\t    this.activation = 0;\n\t    this.selfconnection = new _Connection2.default(this, this, 0); // weight = 0 -> not connected\n\t    this.squash = Neuron.squash.LOGISTIC;\n\t    this.neighboors = {};\n\t    this.bias = Math.random() * .2 - .1;\n\t  }\n\t\n\t  // activate the neuron\n\t\n\t\n\t  _createClass(Neuron, [{\n\t    key: 'activate',\n\t    value: function activate(input) {\n\t      // activation from enviroment (for input neurons)\n\t      if (typeof input != 'undefined') {\n\t        this.activation = input;\n\t        this.derivative = 0;\n\t        this.bias = 0;\n\t        return this.activation;\n\t      }\n\t\n\t      // old state\n\t      this.old = this.state;\n\t\n\t      // eq. 15\n\t      this.state = this.selfconnection.gain * this.selfconnection.weight * this.state + this.bias;\n\t\n\t      for (var i in this.connections.inputs) {\n\t        var input = this.connections.inputs[i];\n\t        this.state += input.from.activation * input.weight * input.gain;\n\t      }\n\t\n\t      // eq. 16\n\t      this.activation = this.squash(this.state);\n\t\n\t      // f'(s)\n\t      this.derivative = this.squash(this.state, true);\n\t\n\t      // update traces\n\t      var influences = [];\n\t      for (var id in this.trace.extended) {\n\t        // extended elegibility trace\n\t        var neuron = this.neighboors[id];\n\t\n\t        // if gated neuron's selfconnection is gated by this unit, the influence keeps track of the neuron's old state\n\t        var influence = neuron.selfconnection.gater == this ? neuron.old : 0;\n\t\n\t        // index runs over all the incoming connections to the gated neuron that are gated by this unit\n\t        for (var incoming in this.trace.influences[neuron.ID]) {\n\t          // captures the effect that has an input connection to this unit, on a neuron that is gated by this unit\n\t          influence += this.trace.influences[neuron.ID][incoming].weight * this.trace.influences[neuron.ID][incoming].from.activation;\n\t        }\n\t        influences[neuron.ID] = influence;\n\t      }\n\t\n\t      for (var i in this.connections.inputs) {\n\t        var input = this.connections.inputs[i];\n\t\n\t        // elegibility trace - Eq. 17\n\t        this.trace.elegibility[input.ID] = this.selfconnection.gain * this.selfconnection.weight * this.trace.elegibility[input.ID] + input.gain * input.from.activation;\n\t\n\t        for (var id in this.trace.extended) {\n\t          // extended elegibility trace\n\t          var xtrace = this.trace.extended[id];\n\t          var neuron = this.neighboors[id];\n\t          var influence = influences[neuron.ID];\n\t\n\t          // eq. 18\n\t          xtrace[input.ID] = neuron.selfconnection.gain * neuron.selfconnection.weight * xtrace[input.ID] + this.derivative * this.trace.elegibility[input.ID] * influence;\n\t        }\n\t      }\n\t\n\t      //  update gated connection's gains\n\t      for (var connection in this.connections.gated) {\n\t        this.connections.gated[connection].gain = this.activation;\n\t      }\n\t\n\t      return this.activation;\n\t    }\n\t\n\t    // back-propagate the error\n\t\n\t  }, {\n\t    key: 'propagate',\n\t    value: function propagate(rate, target) {\n\t      // error accumulator\n\t      var error = 0;\n\t\n\t      // whether or not this neuron is in the output layer\n\t      var isOutput = typeof target != 'undefined';\n\t\n\t      // output neurons get their error from the enviroment\n\t      if (isOutput) this.error.responsibility = this.error.projected = target - this.activation; // Eq. 10\n\t\n\t      else // the rest of the neuron compute their error responsibilities by backpropagation\n\t        {\n\t          // error responsibilities from all the connections projected from this neuron\n\t          for (var id in this.connections.projected) {\n\t            var connection = this.connections.projected[id];\n\t            var neuron = connection.to;\n\t            // Eq. 21\n\t            error += neuron.error.responsibility * connection.gain * connection.weight;\n\t          }\n\t\n\t          // projected error responsibility\n\t          this.error.projected = this.derivative * error;\n\t\n\t          error = 0;\n\t          // error responsibilities from all the connections gated by this neuron\n\t          for (var id in this.trace.extended) {\n\t            var neuron = this.neighboors[id]; // gated neuron\n\t            var influence = neuron.selfconnection.gater == this ? neuron.old : 0; // if gated neuron's selfconnection is gated by this neuron\n\t\n\t            // index runs over all the connections to the gated neuron that are gated by this neuron\n\t            for (var input in this.trace.influences[id]) {\n\t              // captures the effect that the input connection of this neuron have, on a neuron which its input/s is/are gated by this neuron\n\t              influence += this.trace.influences[id][input].weight * this.trace.influences[neuron.ID][input].from.activation;\n\t            }\n\t            // eq. 22\n\t            error += neuron.error.responsibility * influence;\n\t          }\n\t\n\t          // gated error responsibility\n\t          this.error.gated = this.derivative * error;\n\t\n\t          // error responsibility - Eq. 23\n\t          this.error.responsibility = this.error.projected + this.error.gated;\n\t        }\n\t\n\t      // learning rate\n\t      rate = rate || .1;\n\t\n\t      // adjust all the neuron's incoming connections\n\t      for (var id in this.connections.inputs) {\n\t        var input = this.connections.inputs[id];\n\t\n\t        // Eq. 24\n\t        var gradient = this.error.projected * this.trace.elegibility[input.ID];\n\t        for (var id in this.trace.extended) {\n\t          var neuron = this.neighboors[id];\n\t          gradient += neuron.error.responsibility * this.trace.extended[neuron.ID][input.ID];\n\t        }\n\t        input.weight += rate * gradient; // adjust weights - aka learn\n\t      }\n\t\n\t      // adjust bias\n\t      this.bias += rate * this.error.responsibility;\n\t    }\n\t  }, {\n\t    key: 'project',\n\t    value: function project(neuron, weight) {\n\t      // self-connection\n\t      if (neuron == this) {\n\t        this.selfconnection.weight = 1;\n\t        return this.selfconnection;\n\t      }\n\t\n\t      // check if connection already exists\n\t      var connected = this.connected(neuron);\n\t      if (connected && connected.type == 'projected') {\n\t        // update connection\n\t        if (typeof weight != 'undefined') connected.connection.weight = weight;\n\t        // return existing connection\n\t        return connected.connection;\n\t      } else {\n\t        // create a new connection\n\t        var connection = new _Connection2.default(this, neuron, weight);\n\t      }\n\t\n\t      // reference all the connections and traces\n\t      this.connections.projected[connection.ID] = connection;\n\t      this.neighboors[neuron.ID] = neuron;\n\t      neuron.connections.inputs[connection.ID] = connection;\n\t      neuron.trace.elegibility[connection.ID] = 0;\n\t\n\t      for (var id in neuron.trace.extended) {\n\t        var trace = neuron.trace.extended[id];\n\t        trace[connection.ID] = 0;\n\t      }\n\t\n\t      return connection;\n\t    }\n\t  }, {\n\t    key: 'gate',\n\t    value: function gate(connection) {\n\t      // add connection to gated list\n\t      this.connections.gated[connection.ID] = connection;\n\t\n\t      var neuron = connection.to;\n\t      if (!(neuron.ID in this.trace.extended)) {\n\t        // extended trace\n\t        this.neighboors[neuron.ID] = neuron;\n\t        var xtrace = this.trace.extended[neuron.ID] = {};\n\t        for (var id in this.connections.inputs) {\n\t          var input = this.connections.inputs[id];\n\t          xtrace[input.ID] = 0;\n\t        }\n\t      }\n\t\n\t      // keep track\n\t      if (neuron.ID in this.trace.influences) this.trace.influences[neuron.ID].push(connection);else this.trace.influences[neuron.ID] = [connection];\n\t\n\t      // set gater\n\t      connection.gater = this;\n\t    }\n\t\n\t    // returns true or false whether the neuron is self-connected or not\n\t\n\t  }, {\n\t    key: 'selfconnected',\n\t    value: function selfconnected() {\n\t      return this.selfconnection.weight !== 0;\n\t    }\n\t\n\t    // returns true or false whether the neuron is connected to another neuron (parameter)\n\t\n\t  }, {\n\t    key: 'connected',\n\t    value: function connected(neuron) {\n\t      var result = {\n\t        type: null,\n\t        connection: false\n\t      };\n\t\n\t      if (this == neuron) {\n\t        if (this.selfconnected()) {\n\t          result.type = 'selfconnection';\n\t          result.connection = this.selfconnection;\n\t          return result;\n\t        } else return false;\n\t      }\n\t\n\t      for (var type in this.connections) {\n\t        for (var connection in this.connections[type]) {\n\t          var connection = this.connections[type][connection];\n\t          if (connection.to == neuron) {\n\t            result.type = type;\n\t            result.connection = connection;\n\t            return result;\n\t          } else if (connection.from == neuron) {\n\t            result.type = type;\n\t            result.connection = connection;\n\t            return result;\n\t          }\n\t        }\n\t      }\n\t\n\t      return false;\n\t    }\n\t\n\t    // clears all the traces (the neuron forgets it's context, but the connections remain intact)\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      for (var trace in this.trace.elegibility) {\n\t        this.trace.elegibility[trace] = 0;\n\t      }\n\t\n\t      for (var trace in this.trace.extended) {\n\t        for (var extended in this.trace.extended[trace]) {\n\t          this.trace.extended[trace][extended] = 0;\n\t        }\n\t      }\n\t\n\t      this.error.responsibility = this.error.projected = this.error.gated = 0;\n\t    }\n\t\n\t    // all the connections are randomized and the traces are cleared\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.clear();\n\t\n\t      for (var type in this.connections) {\n\t        for (var connection in this.connections[type]) {\n\t          this.connections[type][connection].weight = Math.random() * .2 - .1;\n\t        }\n\t      }\n\t\n\t      this.bias = Math.random() * .2 - .1;\n\t      this.old = this.state = this.activation = 0;\n\t    }\n\t\n\t    // hardcodes the behaviour of the neuron into an optimized function\n\t\n\t  }, {\n\t    key: 'optimize',\n\t    value: function optimize(optimized, layer) {\n\t\n\t      optimized = optimized || {};\n\t      var store_activation = [];\n\t      var store_trace = [];\n\t      var store_propagation = [];\n\t      var varID = optimized.memory || 0;\n\t      var neurons = optimized.neurons || 1;\n\t      var inputs = optimized.inputs || [];\n\t      var targets = optimized.targets || [];\n\t      var outputs = optimized.outputs || [];\n\t      var variables = optimized.variables || {};\n\t      var activation_sentences = optimized.activation_sentences || [];\n\t      var trace_sentences = optimized.trace_sentences || [];\n\t      var propagation_sentences = optimized.propagation_sentences || [];\n\t      var layers = optimized.layers || { __count: 0, __neuron: 0 };\n\t\n\t      // allocate sentences\n\t      var allocate = function allocate(store) {\n\t        var allocated = layer in layers && store[layers.__count];\n\t        if (!allocated) {\n\t          layers.__count = store.push([]) - 1;\n\t          layers[layer] = layers.__count;\n\t        }\n\t      };\n\t      allocate(activation_sentences);\n\t      allocate(trace_sentences);\n\t      allocate(propagation_sentences);\n\t      var currentLayer = layers.__count;\n\t\n\t      // get/reserve space in memory by creating a unique ID for a variablel\n\t      var getVar = function getVar() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t\n\t        if (args.length == 1) {\n\t          if (args[0] == 'target') {\n\t            var id = 'target_' + targets.length;\n\t            targets.push(varID);\n\t          } else var id = args[0];\n\t          if (id in variables) return variables[id];\n\t          return variables[id] = {\n\t            value: 0,\n\t            id: varID++\n\t          };\n\t        } else {\n\t          var extended = args.length > 2;\n\t          if (extended) var value = args.pop();\n\t\n\t          var unit = args.shift();\n\t          var prop = args.pop();\n\t\n\t          if (!extended) var value = unit[prop];\n\t\n\t          var id = prop + '_';\n\t          for (var i = 0; i < args.length; i++) {\n\t            id += args[i] + '_';\n\t          }id += unit.ID;\n\t          if (id in variables) return variables[id];\n\t\n\t          return variables[id] = {\n\t            value: value,\n\t            id: varID++\n\t          };\n\t        }\n\t      };\n\t\n\t      // build sentence\n\t      var buildSentence = function buildSentence() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        var store = args.pop();\n\t        var sentence = '';\n\t        for (var i = 0; i < args.length; i++) {\n\t          if (typeof args[i] == 'string') sentence += args[i];else sentence += 'F[' + args[i].id + ']';\n\t        }store.push(sentence + ';');\n\t      };\n\t\n\t      // helper to check if an object is empty\n\t      var isEmpty = function isEmpty(obj) {\n\t        for (var prop in obj) {\n\t          if (obj.hasOwnProperty(prop)) return false;\n\t        }\n\t        return true;\n\t      };\n\t\n\t      // characteristics of the neuron\n\t      var noProjections = isEmpty(this.connections.projected);\n\t      var noGates = isEmpty(this.connections.gated);\n\t      var isInput = layer == 'input' ? true : isEmpty(this.connections.inputs);\n\t      var isOutput = layer == 'output' ? true : noProjections && noGates;\n\t\n\t      // optimize neuron's behaviour\n\t      var rate = getVar('rate');\n\t      var activation = getVar(this, 'activation');\n\t      if (isInput) inputs.push(activation.id);else {\n\t        activation_sentences[currentLayer].push(store_activation);\n\t        trace_sentences[currentLayer].push(store_trace);\n\t        propagation_sentences[currentLayer].push(store_propagation);\n\t        var old = getVar(this, 'old');\n\t        var state = getVar(this, 'state');\n\t        var bias = getVar(this, 'bias');\n\t        if (this.selfconnection.gater) var self_gain = getVar(this.selfconnection, 'gain');\n\t        if (this.selfconnected()) var self_weight = getVar(this.selfconnection, 'weight');\n\t        buildSentence(old, ' = ', state, store_activation);\n\t        if (this.selfconnected()) {\n\t          if (this.selfconnection.gater) buildSentence(state, ' = ', self_gain, ' * ', self_weight, ' * ', state, ' + ', bias, store_activation);else buildSentence(state, ' = ', self_weight, ' * ', state, ' + ', bias, store_activation);\n\t        } else buildSentence(state, ' = ', bias, store_activation);\n\t        for (var i in this.connections.inputs) {\n\t          var input = this.connections.inputs[i];\n\t          var input_activation = getVar(input.from, 'activation');\n\t          var input_weight = getVar(input, 'weight');\n\t          if (input.gater) var input_gain = getVar(input, 'gain');\n\t          if (this.connections.inputs[i].gater) buildSentence(state, ' += ', input_activation, ' * ', input_weight, ' * ', input_gain, store_activation);else buildSentence(state, ' += ', input_activation, ' * ', input_weight, store_activation);\n\t        }\n\t        var derivative = getVar(this, 'derivative');\n\t        switch (this.squash) {\n\t          case Neuron.squash.LOGISTIC:\n\t            buildSentence(activation, ' = (1 / (1 + Math.exp(-', state, ')))', store_activation);\n\t            buildSentence(derivative, ' = ', activation, ' * (1 - ', activation, ')', store_activation);\n\t            break;\n\t          case Neuron.squash.TANH:\n\t            var eP = getVar('aux');\n\t            var eN = getVar('aux_2');\n\t            buildSentence(eP, ' = Math.exp(', state, ')', store_activation);\n\t            buildSentence(eN, ' = 1 / ', eP, store_activation);\n\t            buildSentence(activation, ' = (', eP, ' - ', eN, ') / (', eP, ' + ', eN, ')', store_activation);\n\t            buildSentence(derivative, ' = 1 - (', activation, ' * ', activation, ')', store_activation);\n\t            break;\n\t          case Neuron.squash.IDENTITY:\n\t            buildSentence(activation, ' = ', state, store_activation);\n\t            buildSentence(derivative, ' = 1', store_activation);\n\t            break;\n\t          case Neuron.squash.HLIM:\n\t            buildSentence(activation, ' = +(', state, ' > 0)', store_activation);\n\t            buildSentence(derivative, ' = 1', store_activation);\n\t            break;\n\t          case Neuron.squash.RELU:\n\t            buildSentence(activation, ' = ', state, ' > 0 ? ', state, ' : 0', store_activation);\n\t            buildSentence(derivative, ' = ', state, ' > 0 ? 1 : 0', store_activation);\n\t            break;\n\t        }\n\t\n\t        for (var id in this.trace.extended) {\n\t          // calculate extended elegibility traces in advance\n\t          var neuron = this.neighboors[id];\n\t          var influence = getVar('influences[' + neuron.ID + ']');\n\t          var neuron_old = getVar(neuron, 'old');\n\t          var initialized = false;\n\t          if (neuron.selfconnection.gater == this) {\n\t            buildSentence(influence, ' = ', neuron_old, store_trace);\n\t            initialized = true;\n\t          }\n\t          for (var incoming in this.trace.influences[neuron.ID]) {\n\t            var incoming_weight = getVar(this.trace.influences[neuron.ID][incoming], 'weight');\n\t            var incoming_activation = getVar(this.trace.influences[neuron.ID][incoming].from, 'activation');\n\t\n\t            if (initialized) buildSentence(influence, ' += ', incoming_weight, ' * ', incoming_activation, store_trace);else {\n\t              buildSentence(influence, ' = ', incoming_weight, ' * ', incoming_activation, store_trace);\n\t              initialized = true;\n\t            }\n\t          }\n\t        }\n\t\n\t        for (var i in this.connections.inputs) {\n\t          var input = this.connections.inputs[i];\n\t          if (input.gater) var input_gain = getVar(input, 'gain');\n\t          var input_activation = getVar(input.from, 'activation');\n\t          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n\t          if (this.selfconnected()) {\n\t            if (this.selfconnection.gater) {\n\t              if (input.gater) buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n\t            } else {\n\t              if (input.gater) buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n\t            }\n\t          } else {\n\t            if (input.gater) buildSentence(trace, ' = ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', input_activation, store_trace);\n\t          }\n\t          for (var id in this.trace.extended) {\n\t            // extended elegibility trace\n\t            var neuron = this.neighboors[id];\n\t            var influence = getVar('influences[' + neuron.ID + ']');\n\t\n\t            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n\t            var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n\t            if (neuron.selfconnected()) var neuron_self_weight = getVar(neuron.selfconnection, 'weight');\n\t            if (neuron.selfconnection.gater) var neuron_self_gain = getVar(neuron.selfconnection, 'gain');\n\t            if (neuron.selfconnected()) {\n\t              if (neuron.selfconnection.gater) buildSentence(xtrace, ' = ', neuron_self_gain, ' * ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);else buildSentence(xtrace, ' = ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);\n\t            } else buildSentence(xtrace, ' = ', derivative, ' * ', trace, ' * ', influence, store_trace);\n\t          }\n\t        }\n\t        for (var connection in this.connections.gated) {\n\t          var gated_gain = getVar(this.connections.gated[connection], 'gain');\n\t          buildSentence(gated_gain, ' = ', activation, store_activation);\n\t        }\n\t      }\n\t      if (!isInput) {\n\t        var responsibility = getVar(this, 'error', 'responsibility', this.error.responsibility);\n\t        if (isOutput) {\n\t          var target = getVar('target');\n\t          buildSentence(responsibility, ' = ', target, ' - ', activation, store_propagation);\n\t          for (var id in this.connections.inputs) {\n\t            var input = this.connections.inputs[id];\n\t            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n\t            var input_weight = getVar(input, 'weight');\n\t            buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n\t          }\n\t          outputs.push(activation.id);\n\t        } else {\n\t          if (!noProjections && !noGates) {\n\t            var error = getVar('aux');\n\t            for (var id in this.connections.projected) {\n\t              var connection = this.connections.projected[id];\n\t              var neuron = connection.to;\n\t              var connection_weight = getVar(connection, 'weight');\n\t              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t              if (connection.gater) {\n\t                var connection_gain = getVar(connection, 'gain');\n\t                buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n\t              } else buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n\t            }\n\t            var projected = getVar(this, 'error', 'projected', this.error.projected);\n\t            buildSentence(projected, ' = ', derivative, ' * ', error, store_propagation);\n\t            buildSentence(error, ' = 0', store_propagation);\n\t            for (var id in this.trace.extended) {\n\t              var neuron = this.neighboors[id];\n\t              var influence = getVar('aux_2');\n\t              var neuron_old = getVar(neuron, 'old');\n\t              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n\t              for (var input in this.trace.influences[neuron.ID]) {\n\t                var connection = this.trace.influences[neuron.ID][input];\n\t                var connection_weight = getVar(connection, 'weight');\n\t                var neuron_activation = getVar(connection.from, 'activation');\n\t                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n\t              }\n\t              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t              buildSentence(error, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n\t            }\n\t            var gated = getVar(this, 'error', 'gated', this.error.gated);\n\t            buildSentence(gated, ' = ', derivative, ' * ', error, store_propagation);\n\t            buildSentence(responsibility, ' = ', projected, ' + ', gated, store_propagation);\n\t            for (var id in this.connections.inputs) {\n\t              var input = this.connections.inputs[id];\n\t              var gradient = getVar('aux');\n\t              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n\t              buildSentence(gradient, ' = ', projected, ' * ', trace, store_propagation);\n\t              for (var id in this.trace.extended) {\n\t                var neuron = this.neighboors[id];\n\t                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n\t                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n\t              }\n\t              var input_weight = getVar(input, 'weight');\n\t              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n\t            }\n\t          } else if (noGates) {\n\t            buildSentence(responsibility, ' = 0', store_propagation);\n\t            for (var id in this.connections.projected) {\n\t              var connection = this.connections.projected[id];\n\t              var neuron = connection.to;\n\t              var connection_weight = getVar(connection, 'weight');\n\t              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t              if (connection.gater) {\n\t                var connection_gain = getVar(connection, 'gain');\n\t                buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n\t              } else buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n\t            }\n\t            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n\t            for (var id in this.connections.inputs) {\n\t              var input = this.connections.inputs[id];\n\t              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n\t              var input_weight = getVar(input, 'weight');\n\t              buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n\t            }\n\t          } else if (noProjections) {\n\t            buildSentence(responsibility, ' = 0', store_propagation);\n\t            for (var id in this.trace.extended) {\n\t              var neuron = this.neighboors[id];\n\t              var influence = getVar('aux');\n\t              var neuron_old = getVar(neuron, 'old');\n\t              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n\t              for (var input in this.trace.influences[neuron.ID]) {\n\t                var connection = this.trace.influences[neuron.ID][input];\n\t                var connection_weight = getVar(connection, 'weight');\n\t                var neuron_activation = getVar(connection.from, 'activation');\n\t                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n\t              }\n\t              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t              buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n\t            }\n\t            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n\t            for (var id in this.connections.inputs) {\n\t              var input = this.connections.inputs[id];\n\t              var gradient = getVar('aux');\n\t              buildSentence(gradient, ' = 0', store_propagation);\n\t              for (var id in this.trace.extended) {\n\t                var neuron = this.neighboors[id];\n\t                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n\t                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n\t                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n\t              }\n\t              var input_weight = getVar(input, 'weight');\n\t              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n\t            }\n\t          }\n\t        }\n\t        buildSentence(bias, ' += ', rate, ' * ', responsibility, store_propagation);\n\t      }\n\t      return {\n\t        memory: varID,\n\t        neurons: neurons + 1,\n\t        inputs: inputs,\n\t        outputs: outputs,\n\t        targets: targets,\n\t        variables: variables,\n\t        activation_sentences: activation_sentences,\n\t        trace_sentences: trace_sentences,\n\t        propagation_sentences: propagation_sentences,\n\t        layers: layers\n\t      };\n\t    }\n\t  }], [{\n\t    key: 'uid',\n\t    value: function uid() {\n\t      return neurons++;\n\t    }\n\t  }, {\n\t    key: 'quantity',\n\t    value: function quantity() {\n\t      return {\n\t        neurons: neurons,\n\t        connections: _Connection.connections\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Neuron;\n\t}();\n\t\n\tNeuron.squash = squash;\n\texports.default = Neuron;\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//+ Jonas Raoni Soares Silva\n\t//@ http://jsfromhell.com/array/shuffle [v1.0]\n\tfunction shuffleInplace(o) {\n\t  //v1.0\n\t  for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {}\n\t  return o;\n\t};\n\t\n\t// Built-in cost functions\n\tvar cost = {\n\t  // Eq. 9\n\t  CROSS_ENTROPY: function CROSS_ENTROPY(target, output) {\n\t    var crossentropy = 0;\n\t    for (var i in output) {\n\t      crossentropy -= target[i] * Math.log(output[i] + 1e-15) + (1 - target[i]) * Math.log(1 + 1e-15 - output[i]);\n\t    } // +1e-15 is a tiny push away to avoid Math.log(0)\n\t    return crossentropy;\n\t  },\n\t  MSE: function MSE(target, output) {\n\t    var mse = 0;\n\t    for (var i = 0; i < output.length; i++) {\n\t      mse += Math.pow(target[i] - output[i], 2);\n\t    }return mse / output.length;\n\t  },\n\t  BINARY: function BINARY(target, output) {\n\t    var misses = 0;\n\t    for (var i = 0; i < output.length; i++) {\n\t      misses += Math.round(target[i] * 2) != Math.round(output[i] * 2);\n\t    }return misses;\n\t  }\n\t};\n\t\n\tvar Trainer = function () {\n\t  function Trainer(network, options) {\n\t    _classCallCheck(this, Trainer);\n\t\n\t    options = options || {};\n\t    this.network = network;\n\t    this.rate = options.rate || .2;\n\t    this.iterations = options.iterations || 100000;\n\t    this.error = options.error || .005;\n\t    this.cost = options.cost || null;\n\t    this.crossValidate = options.crossValidate || null;\n\t  }\n\t\n\t  // trains any given set to a network\n\t\n\t\n\t  _createClass(Trainer, [{\n\t    key: 'train',\n\t    value: function train(set, options) {\n\t      var error = 1;\n\t      var iterations = bucketSize = 0;\n\t      var abort = false;\n\t      var currentRate;\n\t      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\t      var crossValidate = false,\n\t          testSet,\n\t          trainSet;\n\t\n\t      var start = Date.now();\n\t\n\t      if (options) {\n\t        if (options.iterations) this.iterations = options.iterations;\n\t        if (options.error) this.error = options.error;\n\t        if (options.rate) this.rate = options.rate;\n\t        if (options.cost) this.cost = options.cost;\n\t        if (options.schedule) this.schedule = options.schedule;\n\t        if (options.customLog) {\n\t          // for backward compatibility with code that used customLog\n\t          console.log('Deprecated: use schedule instead of customLog');\n\t          this.schedule = options.customLog;\n\t        }\n\t        if (this.crossValidate || options.crossValidate) {\n\t          if (!this.crossValidate) this.crossValidate = {};\n\t          crossValidate = true;\n\t          if (options.crossValidate.testSize) this.crossValidate.testSize = options.crossValidate.testSize;\n\t          if (options.crossValidate.testError) this.crossValidate.testError = options.crossValidate.testError;\n\t        }\n\t      }\n\t\n\t      currentRate = this.rate;\n\t      if (Array.isArray(this.rate)) {\n\t        var bucketSize = Math.floor(this.iterations / this.rate.length);\n\t      }\n\t\n\t      if (crossValidate) {\n\t        var numTrain = Math.ceil((1 - this.crossValidate.testSize) * set.length);\n\t        trainSet = set.slice(0, numTrain);\n\t        testSet = set.slice(numTrain);\n\t      }\n\t\n\t      var lastError = 0;\n\t      while (!abort && iterations < this.iterations && error > this.error) {\n\t        if (crossValidate && error <= this.crossValidate.testError) {\n\t          break;\n\t        }\n\t\n\t        var currentSetSize = set.length;\n\t        error = 0;\n\t        iterations++;\n\t\n\t        if (bucketSize > 0) {\n\t          var currentBucket = Math.floor(iterations / bucketSize);\n\t          currentRate = this.rate[currentBucket] || currentRate;\n\t        }\n\t\n\t        if (typeof this.rate === 'function') {\n\t          currentRate = this.rate(iterations, lastError);\n\t        }\n\t\n\t        if (crossValidate) {\n\t          this._trainSet(trainSet, currentRate, cost);\n\t          error += this.test(testSet).error;\n\t          currentSetSize = 1;\n\t        } else {\n\t          error += this._trainSet(set, currentRate, cost);\n\t          currentSetSize = set.length;\n\t        }\n\t\n\t        // check error\n\t        error /= currentSetSize;\n\t        lastError = error;\n\t\n\t        if (options) {\n\t          if (this.schedule && this.schedule.every && iterations % this.schedule.every == 0) abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate });else if (options.log && iterations % options.log == 0) {\n\t            console.log('iterations', iterations, 'error', error, 'rate', currentRate);\n\t          }\n\t          ;\n\t          if (options.shuffle) shuffleInplace(set);\n\t        }\n\t      }\n\t\n\t      var results = {\n\t        error: error,\n\t        iterations: iterations,\n\t        time: Date.now() - start\n\t      };\n\t\n\t      return results;\n\t    }\n\t\n\t    // trains any given set to a network, using a WebWorker (only for the browser). Returns a Promise of the results.\n\t\n\t  }, {\n\t    key: 'trainAsync',\n\t    value: function trainAsync(set, options) {\n\t      var train = this.workerTrain.bind(this);\n\t      return new Promise(function (resolve, reject) {\n\t        try {\n\t          train(set, resolve, options, true);\n\t        } catch (e) {\n\t          reject(e);\n\t        }\n\t      });\n\t    }\n\t\n\t    // preforms one training epoch and returns the error (private function used in this.train)\n\t\n\t  }, {\n\t    key: '_trainSet',\n\t    value: function _trainSet(set, currentRate, costFunction) {\n\t      var errorSum = 0;\n\t      for (var i = 0; i < set.length; i++) {\n\t        var input = set[i].input;\n\t        var target = set[i].output;\n\t\n\t        var output = this.network.activate(input);\n\t        this.network.propagate(currentRate, target);\n\t\n\t        errorSum += costFunction(target, output);\n\t      }\n\t      return errorSum;\n\t    }\n\t\n\t    // tests a set and returns the error and elapsed time\n\t\n\t  }, {\n\t    key: 'test',\n\t    value: function test(set, options) {\n\t      var error = 0;\n\t      var input, output, target;\n\t      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\t\n\t      var start = Date.now();\n\t\n\t      for (var i = 0; i < set.length; i++) {\n\t        input = set[i].input;\n\t        target = set[i].output;\n\t        output = this.network.activate(input);\n\t        error += cost(target, output);\n\t      }\n\t\n\t      error /= set.length;\n\t\n\t      var results = {\n\t        error: error,\n\t        time: Date.now() - start\n\t      };\n\t\n\t      return results;\n\t    }\n\t\n\t    // trains any given set to a network using a WebWorker [deprecated: use trainAsync instead]\n\t\n\t  }, {\n\t    key: 'workerTrain',\n\t    value: function workerTrain(set, callback, options, suppressWarning) {\n\t      if (!suppressWarning) {\n\t        console.warn('Deprecated: do not use `workerTrain`, use `trainAsync` instead.');\n\t      }\n\t      var that = this;\n\t\n\t      if (!this.network.optimized) this.network.optimize();\n\t\n\t      // Create a new worker\n\t      var worker = this.network.worker(this.network.optimized.memory, set, options);\n\t\n\t      // train the worker\n\t      worker.onmessage = function (e) {\n\t        switch (e.data.action) {\n\t          case 'done':\n\t            var iterations = e.data.message.iterations;\n\t            var error = e.data.message.error;\n\t            var time = e.data.message.time;\n\t\n\t            that.network.optimized.ownership(e.data.memoryBuffer);\n\t\n\t            // Done callback\n\t            callback({\n\t              error: error,\n\t              iterations: iterations,\n\t              time: time\n\t            });\n\t\n\t            // Delete the worker and all its associated memory\n\t            worker.terminate();\n\t            break;\n\t\n\t          case 'log':\n\t            console.log(e.data.message);\n\t\n\t          case 'schedule':\n\t            if (options && options.schedule && typeof options.schedule.do === 'function') {\n\t              var scheduled = options.schedule.do;\n\t              scheduled(e.data.message);\n\t            }\n\t            break;\n\t        }\n\t      };\n\t\n\t      // Start the worker\n\t      worker.postMessage({ action: 'startTraining' });\n\t    }\n\t\n\t    // trains an XOR to the network\n\t\n\t  }, {\n\t    key: 'XOR',\n\t    value: function XOR(options) {\n\t      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Incompatible network (2 inputs, 1 output)');\n\t\n\t      var defaults = {\n\t        iterations: 100000,\n\t        log: false,\n\t        shuffle: true,\n\t        cost: Trainer.cost.MSE\n\t      };\n\t\n\t      if (options) for (var i in options) {\n\t        defaults[i] = options[i];\n\t      }return this.train([{\n\t        input: [0, 0],\n\t        output: [0]\n\t      }, {\n\t        input: [1, 0],\n\t        output: [1]\n\t      }, {\n\t        input: [0, 1],\n\t        output: [1]\n\t      }, {\n\t        input: [1, 1],\n\t        output: [0]\n\t      }], defaults);\n\t    }\n\t\n\t    // trains the network to pass a Distracted Sequence Recall test\n\t\n\t  }, {\n\t    key: 'DSR',\n\t    value: function DSR(options) {\n\t      options = options || {};\n\t\n\t      var targets = options.targets || [2, 4, 7, 8];\n\t      var distractors = options.distractors || [3, 5, 6, 9];\n\t      var prompts = options.prompts || [0, 1];\n\t      var length = options.length || 24;\n\t      var criterion = options.success || 0.95;\n\t      var iterations = options.iterations || 100000;\n\t      var rate = options.rate || .1;\n\t      var log = options.log || 0;\n\t      var schedule = options.schedule || {};\n\t      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\t\n\t      var trial, correct, i, j, success;\n\t      trial = correct = i = j = success = 0;\n\t      var error = 1,\n\t          symbols = targets.length + distractors.length + prompts.length;\n\t\n\t      var noRepeat = function noRepeat(range, avoid) {\n\t        var number = Math.random() * range | 0;\n\t        var used = false;\n\t        for (var i in avoid) {\n\t          if (number == avoid[i]) used = true;\n\t        }return used ? noRepeat(range, avoid) : number;\n\t      };\n\t\n\t      var equal = function equal(prediction, output) {\n\t        for (var i in prediction) {\n\t          if (Math.round(prediction[i]) != output[i]) return false;\n\t        }return true;\n\t      };\n\t\n\t      var start = Date.now();\n\t\n\t      while (trial < iterations && (success < criterion || trial % 1000 != 0)) {\n\t        // generate sequence\n\t        var sequence = [],\n\t            sequenceLength = length - prompts.length;\n\t        for (i = 0; i < sequenceLength; i++) {\n\t          var any = Math.random() * distractors.length | 0;\n\t          sequence.push(distractors[any]);\n\t        }\n\t        var indexes = [],\n\t            positions = [];\n\t        for (i = 0; i < prompts.length; i++) {\n\t          indexes.push(Math.random() * targets.length | 0);\n\t          positions.push(noRepeat(sequenceLength, positions));\n\t        }\n\t        positions = positions.sort();\n\t        for (i = 0; i < prompts.length; i++) {\n\t          sequence[positions[i]] = targets[indexes[i]];\n\t          sequence.push(prompts[i]);\n\t        }\n\t\n\t        //train sequence\n\t        var distractorsCorrect;\n\t        var targetsCorrect = distractorsCorrect = 0;\n\t        error = 0;\n\t        for (i = 0; i < length; i++) {\n\t          // generate input from sequence\n\t          var input = [];\n\t          for (j = 0; j < symbols; j++) {\n\t            input[j] = 0;\n\t          }input[sequence[i]] = 1;\n\t\n\t          // generate target output\n\t          var output = [];\n\t          for (j = 0; j < targets.length; j++) {\n\t            output[j] = 0;\n\t          }if (i >= sequenceLength) {\n\t            var index = i - sequenceLength;\n\t            output[indexes[index]] = 1;\n\t          }\n\t\n\t          // check result\n\t          var prediction = this.network.activate(input);\n\t\n\t          if (equal(prediction, output)) {\n\t            if (i < sequenceLength) distractorsCorrect++;else targetsCorrect++;\n\t          } else {\n\t            this.network.propagate(rate, output);\n\t          }\n\t\n\t          error += cost(output, prediction);\n\t\n\t          if (distractorsCorrect + targetsCorrect == length) correct++;\n\t        }\n\t\n\t        // calculate error\n\t        if (trial % 1000 == 0) correct = 0;\n\t        trial++;\n\t        var divideError = trial % 1000;\n\t        divideError = divideError == 0 ? 1000 : divideError;\n\t        success = correct / divideError;\n\t        error /= length;\n\t\n\t        // log\n\t        if (log && trial % log == 0) console.log('iterations:', trial, ' success:', success, ' correct:', correct, ' time:', Date.now() - start, ' error:', error);\n\t        if (schedule.do && schedule.every && trial % schedule.every == 0) schedule.do({\n\t          iterations: trial,\n\t          success: success,\n\t          error: error,\n\t          time: Date.now() - start,\n\t          correct: correct\n\t        });\n\t      }\n\t\n\t      return {\n\t        iterations: trial,\n\t        success: success,\n\t        error: error,\n\t        time: Date.now() - start\n\t      };\n\t    }\n\t\n\t    // train the network to learn an Embeded Reber Grammar\n\t\n\t  }, {\n\t    key: 'ERG',\n\t    value: function ERG(options) {\n\t\n\t      options = options || {};\n\t      var iterations = options.iterations || 150000;\n\t      var criterion = options.error || .05;\n\t      var rate = options.rate || .1;\n\t      var log = options.log || 500;\n\t      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\t\n\t      // gramar node\n\t      var Node = function Node() {\n\t        this.paths = [];\n\t      };\n\t      Node.prototype = {\n\t        connect: function connect(node, value) {\n\t          this.paths.push({\n\t            node: node,\n\t            value: value\n\t          });\n\t          return this;\n\t        },\n\t        any: function any() {\n\t          if (this.paths.length == 0) return false;\n\t          var index = Math.random() * this.paths.length | 0;\n\t          return this.paths[index];\n\t        },\n\t        test: function test(value) {\n\t          for (var i in this.paths) {\n\t            if (this.paths[i].value == value) return this.paths[i];\n\t          }return false;\n\t        }\n\t      };\n\t\n\t      var reberGrammar = function reberGrammar() {\n\t\n\t        // build a reber grammar\n\t        var output = new Node();\n\t        var n1 = new Node().connect(output, 'E');\n\t        var n2 = new Node().connect(n1, 'S');\n\t        var n3 = new Node().connect(n1, 'V').connect(n2, 'P');\n\t        var n4 = new Node().connect(n2, 'X');\n\t        n4.connect(n4, 'S');\n\t        var n5 = new Node().connect(n3, 'V');\n\t        n5.connect(n5, 'T');\n\t        n2.connect(n5, 'X');\n\t        var n6 = new Node().connect(n4, 'T').connect(n5, 'P');\n\t        var input = new Node().connect(n6, 'B');\n\t\n\t        return {\n\t          input: input,\n\t          output: output\n\t        };\n\t      };\n\t\n\t      // build an embeded reber grammar\n\t      var embededReberGrammar = function embededReberGrammar() {\n\t        var reber1 = reberGrammar();\n\t        var reber2 = reberGrammar();\n\t\n\t        var output = new Node();\n\t        var n1 = new Node().connect(output, 'E');\n\t        reber1.output.connect(n1, 'T');\n\t        reber2.output.connect(n1, 'P');\n\t        var n2 = new Node().connect(reber1.input, 'P').connect(reber2.input, 'T');\n\t        var input = new Node().connect(n2, 'B');\n\t\n\t        return {\n\t          input: input,\n\t          output: output\n\t        };\n\t      };\n\t\n\t      // generate an ERG sequence\n\t      var generate = function generate() {\n\t        var node = embededReberGrammar().input;\n\t        var next = node.any();\n\t        var str = '';\n\t        while (next) {\n\t          str += next.value;\n\t          next = next.node.any();\n\t        }\n\t        return str;\n\t      };\n\t\n\t      // test if a string matches an embeded reber grammar\n\t      var test = function test(str) {\n\t        var node = embededReberGrammar().input;\n\t        var i = 0;\n\t        var ch = str.charAt(i);\n\t        while (i < str.length) {\n\t          var next = node.test(ch);\n\t          if (!next) return false;\n\t          node = next.node;\n\t          ch = str.charAt(++i);\n\t        }\n\t        return true;\n\t      };\n\t\n\t      // helper to check if the output and the target vectors match\n\t      var different = function different(array1, array2) {\n\t        var max1 = 0;\n\t        var i1 = -1;\n\t        var max2 = 0;\n\t        var i2 = -1;\n\t        for (var i in array1) {\n\t          if (array1[i] > max1) {\n\t            max1 = array1[i];\n\t            i1 = i;\n\t          }\n\t          if (array2[i] > max2) {\n\t            max2 = array2[i];\n\t            i2 = i;\n\t          }\n\t        }\n\t\n\t        return i1 != i2;\n\t      };\n\t\n\t      var iteration = 0;\n\t      var error = 1;\n\t      var table = {\n\t        'B': 0,\n\t        'P': 1,\n\t        'T': 2,\n\t        'X': 3,\n\t        'S': 4,\n\t        'E': 5\n\t      };\n\t\n\t      var start = Date.now();\n\t      while (iteration < iterations && error > criterion) {\n\t        var i = 0;\n\t        error = 0;\n\t\n\t        // ERG sequence to learn\n\t        var sequence = generate();\n\t\n\t        // input\n\t        var read = sequence.charAt(i);\n\t        // target\n\t        var predict = sequence.charAt(i + 1);\n\t\n\t        // train\n\t        while (i < sequence.length - 1) {\n\t          var input = [];\n\t          var target = [];\n\t          for (var j = 0; j < 6; j++) {\n\t            input[j] = 0;\n\t            target[j] = 0;\n\t          }\n\t          input[table[read]] = 1;\n\t          target[table[predict]] = 1;\n\t\n\t          var output = this.network.activate(input);\n\t\n\t          if (different(output, target)) this.network.propagate(rate, target);\n\t\n\t          read = sequence.charAt(++i);\n\t          predict = sequence.charAt(i + 1);\n\t\n\t          error += cost(target, output);\n\t        }\n\t        error /= sequence.length;\n\t        iteration++;\n\t        if (iteration % log == 0) {\n\t          console.log('iterations:', iteration, ' time:', Date.now() - start, ' error:', error);\n\t        }\n\t      }\n\t\n\t      return {\n\t        iterations: iteration,\n\t        error: error,\n\t        time: Date.now() - start,\n\t        test: test,\n\t        generate: generate\n\t      };\n\t    }\n\t  }, {\n\t    key: 'timingTask',\n\t    value: function timingTask(options) {\n\t\n\t      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Invalid Network: must have 2 inputs and one output');\n\t\n\t      if (typeof options == 'undefined') options = {};\n\t\n\t      // helper\n\t      function getSamples(trainingSize, testSize) {\n\t\n\t        // sample size\n\t        var size = trainingSize + testSize;\n\t\n\t        // generate samples\n\t        var t = 0;\n\t        var set = [];\n\t        for (var i = 0; i < size; i++) {\n\t          set.push({ input: [0, 0], output: [0] });\n\t        }\n\t        while (t < size - 20) {\n\t          var n = Math.round(Math.random() * 20);\n\t          set[t].input[0] = 1;\n\t          for (var j = t; j <= t + n; j++) {\n\t            set[j].input[1] = n / 20;\n\t            set[j].output[0] = 0.5;\n\t          }\n\t          t += n;\n\t          n = Math.round(Math.random() * 20);\n\t          for (var k = t + 1; k <= t + n && k < size; k++) {\n\t            set[k].input[1] = set[t].input[1];\n\t          }t += n;\n\t        }\n\t\n\t        // separate samples between train and test sets\n\t        var trainingSet = [];\n\t        var testSet = [];\n\t        for (var l = 0; l < size; l++) {\n\t          (l < trainingSize ? trainingSet : testSet).push(set[l]);\n\t        } // return samples\n\t        return {\n\t          train: trainingSet,\n\t          test: testSet\n\t        };\n\t      }\n\t\n\t      var iterations = options.iterations || 200;\n\t      var error = options.error || .005;\n\t      var rate = options.rate || [.03, .02];\n\t      var log = options.log === false ? false : options.log || 10;\n\t      var cost = options.cost || this.cost || Trainer.cost.MSE;\n\t      var trainingSamples = options.trainSamples || 7000;\n\t      var testSamples = options.trainSamples || 1000;\n\t\n\t      // samples for training and testing\n\t      var samples = getSamples(trainingSamples, testSamples);\n\t\n\t      // train\n\t      var result = this.train(samples.train, {\n\t        rate: rate,\n\t        log: log,\n\t        iterations: iterations,\n\t        error: error,\n\t        cost: cost\n\t      });\n\t\n\t      return {\n\t        train: result,\n\t        test: this.test(samples.test)\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return Trainer;\n\t}();\n\t\n\tTrainer.cost = cost;\n\texports.default = Trainer;\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Architect = exports.Network = exports.Trainer = exports.Layer = exports.Neuron = undefined;\n\t\n\tvar _Neuron = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'Neuron', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Neuron).default;\n\t  }\n\t});\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tObject.defineProperty(exports, 'Layer', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Layer).default;\n\t  }\n\t});\n\t\n\tvar _Trainer = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, 'Trainer', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Trainer).default;\n\t  }\n\t});\n\t\n\tvar _Network = __webpack_require__(1);\n\t\n\tObject.defineProperty(exports, 'Network', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Network).default;\n\t  }\n\t});\n\t\n\tvar _architect = __webpack_require__(7);\n\t\n\tvar Architect = _interopRequireWildcard(_architect);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Architect = Architect;\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar connections = exports.connections = 0;\n\t\n\tvar Connection = function () {\n\t  function Connection(from, to, weight) {\n\t    _classCallCheck(this, Connection);\n\t\n\t    if (!from || !to) throw new Error(\"Connection Error: Invalid neurons\");\n\t\n\t    this.ID = Connection.uid();\n\t    this.from = from;\n\t    this.to = to;\n\t    this.weight = typeof weight == 'undefined' ? Math.random() * .2 - .1 : weight;\n\t    this.gain = 1;\n\t    this.gater = null;\n\t  }\n\t\n\t  _createClass(Connection, null, [{\n\t    key: \"uid\",\n\t    value: function uid() {\n\t      return exports.connections = connections += 1, connections - 1;\n\t    }\n\t  }]);\n\t\n\t  return Connection;\n\t}();\n\t\n\texports.default = Connection;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.connections = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// represents a connection from one layer to another, and keeps track of its weight and gain\n\tvar connections = exports.connections = 0;\n\t\n\tvar LayerConnection = function () {\n\t  function LayerConnection(fromLayer, toLayer, type, weights) {\n\t    _classCallCheck(this, LayerConnection);\n\t\n\t    this.ID = LayerConnection.uid();\n\t    this.from = fromLayer;\n\t    this.to = toLayer;\n\t    this.selfconnection = toLayer == fromLayer;\n\t    this.type = type;\n\t    this.connections = {};\n\t    this.list = [];\n\t    this.size = 0;\n\t    this.gatedfrom = [];\n\t\n\t    if (typeof this.type == 'undefined') {\n\t      if (fromLayer == toLayer) this.type = _Layer2.default.connectionType.ONE_TO_ONE;else this.type = _Layer2.default.connectionType.ALL_TO_ALL;\n\t    }\n\t\n\t    if (this.type == _Layer2.default.connectionType.ALL_TO_ALL || this.type == _Layer2.default.connectionType.ALL_TO_ELSE) {\n\t      for (var here in this.from.list) {\n\t        for (var there in this.to.list) {\n\t          var from = this.from.list[here];\n\t          var to = this.to.list[there];\n\t          if (this.type == _Layer2.default.connectionType.ALL_TO_ELSE && from == to) continue;\n\t          var connection = from.project(to, weights);\n\t\n\t          this.connections[connection.ID] = connection;\n\t          this.size = this.list.push(connection);\n\t        }\n\t      }\n\t    } else if (this.type == _Layer2.default.connectionType.ONE_TO_ONE) {\n\t\n\t      for (var neuron in this.from.list) {\n\t        var from = this.from.list[neuron];\n\t        var to = this.to.list[neuron];\n\t        var connection = from.project(to, weights);\n\t\n\t        this.connections[connection.ID] = connection;\n\t        this.size = this.list.push(connection);\n\t      }\n\t    }\n\t\n\t    fromLayer.connectedTo.push(this);\n\t  }\n\t\n\t  _createClass(LayerConnection, null, [{\n\t    key: 'uid',\n\t    value: function uid() {\n\t      return exports.connections = connections += 1, connections - 1;\n\t    }\n\t  }]);\n\t\n\t  return LayerConnection;\n\t}();\n\t\n\texports.default = LayerConnection;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Perceptron = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'Perceptron', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Perceptron).default;\n\t  }\n\t});\n\t\n\tvar _LSTM = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'LSTM', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_LSTM).default;\n\t  }\n\t});\n\t\n\tvar _Liquid = __webpack_require__(10);\n\t\n\tObject.defineProperty(exports, 'Liquid', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Liquid).default;\n\t  }\n\t});\n\t\n\tvar _Hopfield = __webpack_require__(11);\n\t\n\tObject.defineProperty(exports, 'Hopfield', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_Hopfield).default;\n\t  }\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Network2 = __webpack_require__(1);\n\t\n\tvar _Network3 = _interopRequireDefault(_Network2);\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Perceptron = function (_Network) {\n\t  _inherits(Perceptron, _Network);\n\t\n\t  function Perceptron() {\n\t    _classCallCheck(this, Perceptron);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Perceptron.__proto__ || Object.getPrototypeOf(Perceptron)).call(this));\n\t\n\t    var args = Array.prototype.slice.call(arguments); // convert arguments to Array\n\t    if (args.length < 3) throw new Error('not enough layers (minimum 3) !!');\n\t\n\t    var inputs = args.shift(); // first argument\n\t    var outputs = args.pop(); // last argument\n\t    var layers = args; // all the arguments in the middle\n\t\n\t    var input = new _Layer2.default(inputs);\n\t    var hidden = [];\n\t    var output = new _Layer2.default(outputs);\n\t\n\t    var previous = input;\n\t\n\t    // generate hidden layers\n\t    for (var i = 0; i < layers.length; i++) {\n\t      var size = layers[i];\n\t      var layer = new _Layer2.default(size);\n\t      hidden.push(layer);\n\t      previous.project(layer);\n\t      previous = layer;\n\t    }\n\t    previous.project(output);\n\t\n\t    // set layers of the neural network\n\t    _this.set({\n\t      input: input,\n\t      hidden: hidden,\n\t      output: output\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return Perceptron;\n\t}(_Network3.default);\n\t\n\texports.default = Perceptron;\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Network2 = __webpack_require__(1);\n\t\n\tvar _Network3 = _interopRequireDefault(_Network2);\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LSTM = function (_Network) {\n\t  _inherits(LSTM, _Network);\n\t\n\t  function LSTM() {\n\t    _classCallCheck(this, LSTM);\n\t\n\t    var _this = _possibleConstructorReturn(this, (LSTM.__proto__ || Object.getPrototypeOf(LSTM)).call(this));\n\t\n\t    var args = Array.prototype.slice.call(arguments); // convert arguments to array\n\t    if (args.length < 3) throw new Error(\"not enough layers (minimum 3) !!\");\n\t\n\t    var last = args.pop();\n\t    var option = {\n\t      peepholes: _Layer2.default.connectionType.ALL_TO_ALL,\n\t      hiddenToHidden: false,\n\t      outputToHidden: false,\n\t      outputToGates: false,\n\t      inputToOutput: true\n\t    };\n\t    if (typeof last != 'number') {\n\t      var outputs = args.pop();\n\t      if (last.hasOwnProperty('peepholes')) option.peepholes = last.peepholes;\n\t      if (last.hasOwnProperty('hiddenToHidden')) option.hiddenToHidden = last.hiddenToHidden;\n\t      if (last.hasOwnProperty('outputToHidden')) option.outputToHidden = last.outputToHidden;\n\t      if (last.hasOwnProperty('outputToGates')) option.outputToGates = last.outputToGates;\n\t      if (last.hasOwnProperty('inputToOutput')) option.inputToOutput = last.inputToOutput;\n\t    } else {\n\t      var outputs = last;\n\t    }\n\t\n\t    var inputs = args.shift();\n\t    var layers = args;\n\t\n\t    var inputLayer = new _Layer2.default(inputs);\n\t    var hiddenLayers = [];\n\t    var outputLayer = new _Layer2.default(outputs);\n\t\n\t    var previous = null;\n\t\n\t    // generate layers\n\t    for (var i = 0; i < layers.length; i++) {\n\t      // generate memory blocks (memory cell and respective gates)\n\t      var size = layers[i];\n\t\n\t      var inputGate = new _Layer2.default(size).set({\n\t        bias: 1\n\t      });\n\t      var forgetGate = new _Layer2.default(size).set({\n\t        bias: 1\n\t      });\n\t      var memoryCell = new _Layer2.default(size);\n\t      var outputGate = new _Layer2.default(size).set({\n\t        bias: 1\n\t      });\n\t\n\t      hiddenLayers.push(inputGate);\n\t      hiddenLayers.push(forgetGate);\n\t      hiddenLayers.push(memoryCell);\n\t      hiddenLayers.push(outputGate);\n\t\n\t      // connections from input layer\n\t      var input = inputLayer.project(memoryCell);\n\t      inputLayer.project(inputGate);\n\t      inputLayer.project(forgetGate);\n\t      inputLayer.project(outputGate);\n\t\n\t      // connections from previous memory-block layer to this one\n\t      if (previous != null) {\n\t        var cell = previous.project(memoryCell);\n\t        previous.project(inputGate);\n\t        previous.project(forgetGate);\n\t        previous.project(outputGate);\n\t      }\n\t\n\t      // connections from memory cell\n\t      var output = memoryCell.project(outputLayer);\n\t\n\t      // self-connection\n\t      var self = memoryCell.project(memoryCell);\n\t\n\t      // hidden to hidden recurrent connection\n\t      if (option.hiddenToHidden) memoryCell.project(memoryCell, _Layer2.default.connectionType.ALL_TO_ELSE);\n\t\n\t      // out to hidden recurrent connection\n\t      if (option.outputToHidden) outputLayer.project(memoryCell);\n\t\n\t      // out to gates recurrent connection\n\t      if (option.outputToGates) {\n\t        outputLayer.project(inputGate);\n\t        outputLayer.project(outputGate);\n\t        outputLayer.project(forgetGate);\n\t      }\n\t\n\t      // peepholes\n\t      memoryCell.project(inputGate, option.peepholes);\n\t      memoryCell.project(forgetGate, option.peepholes);\n\t      memoryCell.project(outputGate, option.peepholes);\n\t\n\t      // gates\n\t      inputGate.gate(input, _Layer2.default.gateType.INPUT);\n\t      forgetGate.gate(self, _Layer2.default.gateType.ONE_TO_ONE);\n\t      outputGate.gate(output, _Layer2.default.gateType.OUTPUT);\n\t      if (previous != null) inputGate.gate(cell, _Layer2.default.gateType.INPUT);\n\t\n\t      previous = memoryCell;\n\t    }\n\t\n\t    // input to output direct connection\n\t    if (option.inputToOutput) inputLayer.project(outputLayer);\n\t\n\t    // set the layers of the neural network\n\t    _this.set({\n\t      input: inputLayer,\n\t      hidden: hiddenLayers,\n\t      output: outputLayer\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return LSTM;\n\t}(_Network3.default);\n\t\n\texports.default = LSTM;\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Network2 = __webpack_require__(1);\n\t\n\tvar _Network3 = _interopRequireDefault(_Network2);\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Liquid = function (_Network) {\n\t  _inherits(Liquid, _Network);\n\t\n\t  function Liquid(inputs, hidden, outputs, connections, gates) {\n\t    _classCallCheck(this, Liquid);\n\t\n\t    // create layers\n\t    var _this = _possibleConstructorReturn(this, (Liquid.__proto__ || Object.getPrototypeOf(Liquid)).call(this));\n\t\n\t    var inputLayer = new _Layer2.default(inputs);\n\t    var hiddenLayer = new _Layer2.default(hidden);\n\t    var outputLayer = new _Layer2.default(outputs);\n\t\n\t    // make connections and gates randomly among the neurons\n\t    var neurons = hiddenLayer.neurons();\n\t    var connectionList = [];\n\t\n\t    for (var i = 0; i < connections; i++) {\n\t      // connect two random neurons\n\t      var from = Math.random() * neurons.length | 0;\n\t      var to = Math.random() * neurons.length | 0;\n\t      var connection = neurons[from].project(neurons[to]);\n\t      connectionList.push(connection);\n\t    }\n\t\n\t    for (var j = 0; j < gates; j++) {\n\t      // pick a random gater neuron\n\t      var gater = Math.random() * neurons.length | 0;\n\t      // pick a random connection to gate\n\t      var connection = Math.random() * connectionList.length | 0;\n\t      // let the gater gate the connection\n\t      neurons[gater].gate(connectionList[connection]);\n\t    }\n\t\n\t    // connect the layers\n\t    inputLayer.project(hiddenLayer);\n\t    hiddenLayer.project(outputLayer);\n\t\n\t    // set the layers of the network\n\t    _this.set({\n\t      input: inputLayer,\n\t      hidden: [hiddenLayer],\n\t      output: outputLayer\n\t    });\n\t    return _this;\n\t  }\n\t\n\t  return Liquid;\n\t}(_Network3.default);\n\t\n\texports.default = Liquid;\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __webpack_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Network2 = __webpack_require__(1);\n\t\n\tvar _Network3 = _interopRequireDefault(_Network2);\n\t\n\tvar _Trainer = __webpack_require__(3);\n\t\n\tvar _Trainer2 = _interopRequireDefault(_Trainer);\n\t\n\tvar _Layer = __webpack_require__(0);\n\t\n\tvar _Layer2 = _interopRequireDefault(_Layer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Hopfield = function (_Network) {\n\t  _inherits(Hopfield, _Network);\n\t\n\t  function Hopfield(size) {\n\t    _classCallCheck(this, Hopfield);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Hopfield.__proto__ || Object.getPrototypeOf(Hopfield)).call(this));\n\t\n\t    var inputLayer = new _Layer2.default(size);\n\t    var outputLayer = new _Layer2.default(size);\n\t\n\t    inputLayer.project(outputLayer, _Layer2.default.connectionType.ALL_TO_ALL);\n\t\n\t    _this.set({\n\t      input: inputLayer,\n\t      hidden: [],\n\t      output: outputLayer\n\t    });\n\t\n\t    _this.trainer = new _Trainer2.default(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Hopfield, [{\n\t    key: 'learn',\n\t    value: function learn(patterns) {\n\t      var set = [];\n\t      for (var p in patterns) {\n\t        set.push({\n\t          input: patterns[p],\n\t          output: patterns[p]\n\t        });\n\t      }return this.trainer.train(set, {\n\t        iterations: 500000,\n\t        error: .00005,\n\t        rate: 1\n\t      });\n\t    }\n\t  }, {\n\t    key: 'feed',\n\t    value: function feed(pattern) {\n\t      var output = this.activate(pattern);\n\t\n\t      var pattern = [];\n\t      for (var i in output) {\n\t        pattern[i] = output[i] > .5 ? 1 : 0;\n\t      }return pattern;\n\t    }\n\t  }]);\n\t\n\t  return Hopfield;\n\t}(_Network3.default);\n\t\n\texports.default = Hopfield;\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// aa348dd04ccb9ed348c8.worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aa348dd04ccb9ed348c8","import getAiMove from './ai/getAiMove';\n\n// eslint-disable-next-line\nonmessage = (e) => {\n  const oldGame = e.data;\n  const position = getAiMove(oldGame);\n\n  postMessage({\n    oldGame,\n    position\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker.js","var _curry1 = require('./_curry1');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2\n             : _curry1(function(_b) { return fn(a, _b); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })\n             : fn(a, b);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry2.js\n// module id = 1\n// module chunks = 275795115718244","var _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry1.js\n// module id = 2\n// module chunks = 275795115718244","var _curry1 = require('./_curry1');\nvar _curry2 = require('./_curry2');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3\n             : _curry2(function(_b, _c) { return fn(a, _b, _c); });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3\n             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _curry1(function(_c) { return fn(a, b, _c); });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3\n             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })\n             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })\n             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })\n             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })\n             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })\n             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })\n             : fn(a, b, c);\n    }\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curry3.js\n// module id = 3\n// module chunks = 275795115718244","var _isArray = require('./_isArray');\nvar _isTransformer = require('./_isTransformer');\n\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nmodule.exports = function _dispatchable(methodNames, xf, fn) {\n  return function() {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_dispatchable.js\n// module id = 4\n// module chunks = 275795115718244","module.exports = {\n  init: function() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function(result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfBase.js\n// module id = 5\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar _curry2 = require('./internal/_curry2');\nvar _curryN = require('./internal/_curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      var sumArgs = (...args) => R.sum(args);\n *\n *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/curryN.js\n// module id = 6\n// module chunks = 275795115718244","module.exports = function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_has.js\n// module id = 7\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _map = require('./internal/_map');\nvar _reduce = require('./internal/_reduce');\nvar _xmap = require('./internal/_xmap');\nvar curryN = require('./curryN');\nvar keys = require('./keys');\n\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      var double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function() {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function(acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/map.js\n// module id = 8\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _equals = require('./internal/_equals');\n\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      var a = {}; a.v = a;\n *      var b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nmodule.exports = _curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/equals.js\n// module id = 9\n// module chunks = 275795115718244","var _isArrayLike = require('./_isArrayLike');\nvar _xwrap = require('./_xwrap');\nvar bind = require('../bind');\n\n\nmodule.exports = (function() {\n  function _arrayReduce(xf, acc, list) {\n    var idx = 0;\n    var len = list.length;\n    while (idx < len) {\n      acc = xf['@@transducer/step'](acc, list[idx]);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      idx += 1;\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _iterableReduce(xf, acc, iter) {\n    var step = iter.next();\n    while (!step.done) {\n      acc = xf['@@transducer/step'](acc, step.value);\n      if (acc && acc['@@transducer/reduced']) {\n        acc = acc['@@transducer/value'];\n        break;\n      }\n      step = iter.next();\n    }\n    return xf['@@transducer/result'](acc);\n  }\n\n  function _methodReduce(xf, acc, obj, methodName) {\n    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n  }\n\n  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';\n  return function _reduce(fn, acc, list) {\n    if (typeof fn === 'function') {\n      fn = _xwrap(fn);\n    }\n    if (_isArrayLike(list)) {\n      return _arrayReduce(fn, acc, list);\n    }\n    if (typeof list['fantasy-land/reduce'] === 'function') {\n      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n    }\n    if (list[symIterator] != null) {\n      return _iterableReduce(fn, acc, list[symIterator]());\n    }\n    if (typeof list.next === 'function') {\n      return _iterableReduce(fn, acc, list);\n    }\n    if (typeof list.reduce === 'function') {\n      return _methodReduce(fn, acc, list, 'reduce');\n    }\n\n    throw new TypeError('reduce: list must be array or iterable');\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_reduce.js\n// module id = 10\n// module chunks = 275795115718244","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nmodule.exports = function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_concat.js\n// module id = 11\n// module chunks = 275795115718244","module.exports = function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0: return function() { return fn.apply(this, arguments); };\n    case 1: return function(a0) { return fn.apply(this, arguments); };\n    case 2: return function(a0, a1) { return fn.apply(this, arguments); };\n    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };\n    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };\n    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };\n    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };\n    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_arity.js\n// module id = 12\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar _isArguments = require('./internal/_isArguments');\n\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nmodule.exports = (function() {\n  // cover IE < 9 keys issues\n  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',\n                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n  // Safari bug\n  var hasArgsEnumBug = (function() {\n    'use strict';\n    return arguments.propertyIsEnumerable('length');\n  }());\n\n  var contains = function contains(list, item) {\n    var idx = 0;\n    while (idx < list.length) {\n      if (list[idx] === item) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  };\n\n  return typeof Object.keys === 'function' && !hasArgsEnumBug ?\n    _curry1(function keys(obj) {\n      return Object(obj) !== obj ? [] : Object.keys(obj);\n    }) :\n    _curry1(function keys(obj) {\n      if (Object(obj) !== obj) {\n        return [];\n      }\n      var prop, nIdx;\n      var ks = [];\n      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n      for (prop in obj) {\n        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n          ks[ks.length] = prop;\n        }\n      }\n      if (hasEnumBug) {\n        nIdx = nonEnumerableProps.length - 1;\n        while (nIdx >= 0) {\n          prop = nonEnumerableProps[nIdx];\n          if (_has(prop, obj) && !contains(ks, prop)) {\n            ks[ks.length] = prop;\n          }\n          nIdx -= 1;\n        }\n      }\n      return ks;\n    });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/keys.js\n// module id = 13\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar _reduce = require('./internal/_reduce');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *                -               -10\n *               / \\              / \\\n *              -   4           -6   4\n *             / \\              / \\\n *            -   3   ==>     -3   3\n *           / \\              / \\\n *          -   2           -1   2\n *         / \\              / \\\n *        0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nmodule.exports = _curry3(_reduce);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduce.js\n// module id = 14\n// module chunks = 275795115718244","module.exports = {\n  F: require('./src/F'),\n  T: require('./src/T'),\n  __: require('./src/__'),\n  add: require('./src/add'),\n  addIndex: require('./src/addIndex'),\n  adjust: require('./src/adjust'),\n  all: require('./src/all'),\n  allPass: require('./src/allPass'),\n  always: require('./src/always'),\n  and: require('./src/and'),\n  any: require('./src/any'),\n  anyPass: require('./src/anyPass'),\n  ap: require('./src/ap'),\n  aperture: require('./src/aperture'),\n  append: require('./src/append'),\n  apply: require('./src/apply'),\n  applySpec: require('./src/applySpec'),\n  ascend: require('./src/ascend'),\n  assoc: require('./src/assoc'),\n  assocPath: require('./src/assocPath'),\n  binary: require('./src/binary'),\n  bind: require('./src/bind'),\n  both: require('./src/both'),\n  call: require('./src/call'),\n  chain: require('./src/chain'),\n  clamp: require('./src/clamp'),\n  clone: require('./src/clone'),\n  comparator: require('./src/comparator'),\n  complement: require('./src/complement'),\n  compose: require('./src/compose'),\n  composeK: require('./src/composeK'),\n  composeP: require('./src/composeP'),\n  concat: require('./src/concat'),\n  cond: require('./src/cond'),\n  construct: require('./src/construct'),\n  constructN: require('./src/constructN'),\n  contains: require('./src/contains'),\n  converge: require('./src/converge'),\n  countBy: require('./src/countBy'),\n  curry: require('./src/curry'),\n  curryN: require('./src/curryN'),\n  dec: require('./src/dec'),\n  defaultTo: require('./src/defaultTo'),\n  descend: require('./src/descend'),\n  difference: require('./src/difference'),\n  differenceWith: require('./src/differenceWith'),\n  dissoc: require('./src/dissoc'),\n  dissocPath: require('./src/dissocPath'),\n  divide: require('./src/divide'),\n  drop: require('./src/drop'),\n  dropLast: require('./src/dropLast'),\n  dropLastWhile: require('./src/dropLastWhile'),\n  dropRepeats: require('./src/dropRepeats'),\n  dropRepeatsWith: require('./src/dropRepeatsWith'),\n  dropWhile: require('./src/dropWhile'),\n  either: require('./src/either'),\n  empty: require('./src/empty'),\n  endsWith: require('./src/endsWith'),\n  eqBy: require('./src/eqBy'),\n  eqProps: require('./src/eqProps'),\n  equals: require('./src/equals'),\n  evolve: require('./src/evolve'),\n  filter: require('./src/filter'),\n  find: require('./src/find'),\n  findIndex: require('./src/findIndex'),\n  findLast: require('./src/findLast'),\n  findLastIndex: require('./src/findLastIndex'),\n  flatten: require('./src/flatten'),\n  flip: require('./src/flip'),\n  forEach: require('./src/forEach'),\n  forEachObjIndexed: require('./src/forEachObjIndexed'),\n  fromPairs: require('./src/fromPairs'),\n  groupBy: require('./src/groupBy'),\n  groupWith: require('./src/groupWith'),\n  gt: require('./src/gt'),\n  gte: require('./src/gte'),\n  has: require('./src/has'),\n  hasIn: require('./src/hasIn'),\n  head: require('./src/head'),\n  identical: require('./src/identical'),\n  identity: require('./src/identity'),\n  ifElse: require('./src/ifElse'),\n  inc: require('./src/inc'),\n  indexBy: require('./src/indexBy'),\n  indexOf: require('./src/indexOf'),\n  init: require('./src/init'),\n  innerJoin: require('./src/innerJoin'),\n  insert: require('./src/insert'),\n  insertAll: require('./src/insertAll'),\n  intersection: require('./src/intersection'),\n  intersectionWith: require('./src/intersectionWith'),\n  intersperse: require('./src/intersperse'),\n  into: require('./src/into'),\n  invert: require('./src/invert'),\n  invertObj: require('./src/invertObj'),\n  invoker: require('./src/invoker'),\n  is: require('./src/is'),\n  isEmpty: require('./src/isEmpty'),\n  isNil: require('./src/isNil'),\n  join: require('./src/join'),\n  juxt: require('./src/juxt'),\n  keys: require('./src/keys'),\n  keysIn: require('./src/keysIn'),\n  last: require('./src/last'),\n  lastIndexOf: require('./src/lastIndexOf'),\n  length: require('./src/length'),\n  lens: require('./src/lens'),\n  lensIndex: require('./src/lensIndex'),\n  lensPath: require('./src/lensPath'),\n  lensProp: require('./src/lensProp'),\n  lift: require('./src/lift'),\n  liftN: require('./src/liftN'),\n  lt: require('./src/lt'),\n  lte: require('./src/lte'),\n  map: require('./src/map'),\n  mapAccum: require('./src/mapAccum'),\n  mapAccumRight: require('./src/mapAccumRight'),\n  mapObjIndexed: require('./src/mapObjIndexed'),\n  match: require('./src/match'),\n  mathMod: require('./src/mathMod'),\n  max: require('./src/max'),\n  maxBy: require('./src/maxBy'),\n  mean: require('./src/mean'),\n  median: require('./src/median'),\n  memoize: require('./src/memoize'),\n  memoizeWith: require('./src/memoizeWith'),\n  merge: require('./src/merge'),\n  mergeAll: require('./src/mergeAll'),\n  mergeDeepLeft: require('./src/mergeDeepLeft'),\n  mergeDeepRight: require('./src/mergeDeepRight'),\n  mergeDeepWith: require('./src/mergeDeepWith'),\n  mergeDeepWithKey: require('./src/mergeDeepWithKey'),\n  mergeWith: require('./src/mergeWith'),\n  mergeWithKey: require('./src/mergeWithKey'),\n  min: require('./src/min'),\n  minBy: require('./src/minBy'),\n  modulo: require('./src/modulo'),\n  multiply: require('./src/multiply'),\n  nAry: require('./src/nAry'),\n  negate: require('./src/negate'),\n  none: require('./src/none'),\n  not: require('./src/not'),\n  nth: require('./src/nth'),\n  nthArg: require('./src/nthArg'),\n  o: require('./src/o'),\n  objOf: require('./src/objOf'),\n  of: require('./src/of'),\n  omit: require('./src/omit'),\n  once: require('./src/once'),\n  or: require('./src/or'),\n  over: require('./src/over'),\n  pair: require('./src/pair'),\n  partial: require('./src/partial'),\n  partialRight: require('./src/partialRight'),\n  partition: require('./src/partition'),\n  path: require('./src/path'),\n  pathEq: require('./src/pathEq'),\n  pathOr: require('./src/pathOr'),\n  pathSatisfies: require('./src/pathSatisfies'),\n  pick: require('./src/pick'),\n  pickAll: require('./src/pickAll'),\n  pickBy: require('./src/pickBy'),\n  pipe: require('./src/pipe'),\n  pipeK: require('./src/pipeK'),\n  pipeP: require('./src/pipeP'),\n  pluck: require('./src/pluck'),\n  prepend: require('./src/prepend'),\n  product: require('./src/product'),\n  project: require('./src/project'),\n  prop: require('./src/prop'),\n  propEq: require('./src/propEq'),\n  propIs: require('./src/propIs'),\n  propOr: require('./src/propOr'),\n  propSatisfies: require('./src/propSatisfies'),\n  props: require('./src/props'),\n  range: require('./src/range'),\n  reduce: require('./src/reduce'),\n  reduceBy: require('./src/reduceBy'),\n  reduceRight: require('./src/reduceRight'),\n  reduceWhile: require('./src/reduceWhile'),\n  reduced: require('./src/reduced'),\n  reject: require('./src/reject'),\n  remove: require('./src/remove'),\n  repeat: require('./src/repeat'),\n  replace: require('./src/replace'),\n  reverse: require('./src/reverse'),\n  scan: require('./src/scan'),\n  sequence: require('./src/sequence'),\n  set: require('./src/set'),\n  slice: require('./src/slice'),\n  sort: require('./src/sort'),\n  sortBy: require('./src/sortBy'),\n  sortWith: require('./src/sortWith'),\n  split: require('./src/split'),\n  splitAt: require('./src/splitAt'),\n  splitEvery: require('./src/splitEvery'),\n  splitWhen: require('./src/splitWhen'),\n  startsWith: require('./src/startsWith'),\n  subtract: require('./src/subtract'),\n  sum: require('./src/sum'),\n  symmetricDifference: require('./src/symmetricDifference'),\n  symmetricDifferenceWith: require('./src/symmetricDifferenceWith'),\n  tail: require('./src/tail'),\n  take: require('./src/take'),\n  takeLast: require('./src/takeLast'),\n  takeLastWhile: require('./src/takeLastWhile'),\n  takeWhile: require('./src/takeWhile'),\n  tap: require('./src/tap'),\n  test: require('./src/test'),\n  times: require('./src/times'),\n  toLower: require('./src/toLower'),\n  toPairs: require('./src/toPairs'),\n  toPairsIn: require('./src/toPairsIn'),\n  toString: require('./src/toString'),\n  toUpper: require('./src/toUpper'),\n  transduce: require('./src/transduce'),\n  transpose: require('./src/transpose'),\n  traverse: require('./src/traverse'),\n  trim: require('./src/trim'),\n  tryCatch: require('./src/tryCatch'),\n  type: require('./src/type'),\n  unapply: require('./src/unapply'),\n  unary: require('./src/unary'),\n  uncurryN: require('./src/uncurryN'),\n  unfold: require('./src/unfold'),\n  union: require('./src/union'),\n  unionWith: require('./src/unionWith'),\n  uniq: require('./src/uniq'),\n  uniqBy: require('./src/uniqBy'),\n  uniqWith: require('./src/uniqWith'),\n  unless: require('./src/unless'),\n  unnest: require('./src/unnest'),\n  until: require('./src/until'),\n  update: require('./src/update'),\n  useWith: require('./src/useWith'),\n  values: require('./src/values'),\n  valuesIn: require('./src/valuesIn'),\n  view: require('./src/view'),\n  when: require('./src/when'),\n  where: require('./src/where'),\n  whereEq: require('./src/whereEq'),\n  without: require('./src/without'),\n  xprod: require('./src/xprod'),\n  zip: require('./src/zip'),\n  zipObj: require('./src/zipObj'),\n  zipWith: require('./src/zipWith')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/index.js\n// module id = 15\n// module chunks = 275795115718244","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return (val != null &&\n          val.length >= 0 &&\n          Object.prototype.toString.call(val) === '[object Array]');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArray.js\n// module id = 16\n// module chunks = 275795115718244","module.exports = function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x :\n    {\n      '@@transducer/value': x,\n      '@@transducer/reduced': true\n    };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_reduced.js\n// module id = 17\n// module chunks = 275795115718244","var _indexOf = require('./_indexOf');\n\n\nmodule.exports = function _contains(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_contains.js\n// module id = 18\n// module chunks = 275795115718244","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nmodule.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/slice.js\n// module id = 19\n// module chunks = 275795115718244","import { range, length } from 'ramda';\n\nconst emptyValue = 0;\n\n/**\n * Empty value alias\n */\nconst _ = emptyValue;\n\nconst X = 1;\n\nconst O = 2;\n\n/**\n * Use it to map the positions\n */\nconst boardIndexes = range(0, 9);\nconst boardLength = length(boardIndexes);\n\nconst initialScore = {\n  x: 0,\n  o: 0\n};\n\nexport {\n  boardIndexes,\n  boardLength,\n  emptyValue,\n  _,\n  X,\n  O,\n  initialScore\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/constants.js","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      var t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nmodule.exports = _curry1(function always(val) {\n  return function() {\n    return val;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/always.js\n// module id = 21\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nmodule.exports = _curry2(function max(a, b) { return b > a ? b : a; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/max.js\n// module id = 22\n// module chunks = 275795115718244","var _isArray = require('./_isArray');\n\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nmodule.exports = function _checkForMethod(methodname, fn) {\n  return function() {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?\n      fn.apply(this, arguments) :\n      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_checkForMethod.js\n// module id = 23\n// module chunks = 275795115718244","module.exports = function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isString.js\n// module id = 24\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar curryN = require('./curryN');\nvar toString = require('./toString');\n\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      var sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nmodule.exports = _curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function() {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/invoker.js\n// module id = 25\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      var list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nmodule.exports = _curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/nth.js\n// module id = 26\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nmodule.exports = _curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/path.js\n// module id = 27\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\nvar prop = require('./prop');\n\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nmodule.exports = _curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pluck.js\n// module id = 28\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _toString = require('./internal/_toString');\n\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nmodule.exports = _curry1(function toString(val) { return _toString(val, []); });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toString.js\n// module id = 29\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nmodule.exports = _curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/add.js\n// module id = 30\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/assoc.js\n// module id = 31\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN\n * @example\n *\n *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n *      var f = curriedAddFourNumbers(1, 2);\n *      var g = f(3);\n *      g(4); //=> 10\n */\nmodule.exports = _curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/curry.js\n// module id = 32\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar curry = require('./curry');\n\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nmodule.exports = _curry1(function flip(fn) {\n  return curry(function(a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/flip.js\n// module id = 33\n// module chunks = 275795115718244","module.exports = function _containsWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_containsWith.js\n// module id = 34\n// module chunks = 275795115718244","var _arity = require('./_arity');\nvar _isPlaceholder = require('./_isPlaceholder');\n\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nmodule.exports = function _curryN(length, received, fn) {\n  return function() {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length &&\n          (!_isPlaceholder(received[combinedIdx]) ||\n           argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined)\n                     : _arity(left, _curryN(length, combined, fn));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_curryN.js\n// module id = 35\n// module chunks = 275795115718244","var _curry1 = require('./_curry1');\nvar _isArray = require('./_isArray');\nvar _isString = require('./_isString');\n\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nmodule.exports = _curry1(function isArrayLike(x) {\n  if (_isArray(x)) { return true; }\n  if (!x) { return false; }\n  if (typeof x !== 'object') { return false; }\n  if (_isString(x)) { return false; }\n  if (x.nodeType === 1) { return !!x.length; }\n  if (x.length === 0) { return true; }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArrayLike.js\n// module id = 36\n// module chunks = 275795115718244","module.exports = function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isFunction.js\n// module id = 37\n// module chunks = 275795115718244","module.exports = function _isPlaceholder(a) {\n  return a != null &&\n         typeof a === 'object' &&\n         a['@@functional/placeholder'] === true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isPlaceholder.js\n// module id = 38\n// module chunks = 275795115718244","module.exports = function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_map.js\n// module id = 39\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar map = require('./map');\n\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry2(function lens(getter, setter) {\n  return function(toFunctorFn) {\n    return function(target) {\n      return map(\n        function(focus) {\n          return setter(focus, target);\n        },\n        toFunctorFn(getter(target))\n      );\n    };\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lens.js\n// module id = 40\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar liftN = require('./liftN');\n\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      var madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nmodule.exports = _curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lift.js\n// module id = 41\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar _isObject = require('./internal/_isObject');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function(k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeDeepWithKey.js\n// module id = 42\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      var takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nmodule.exports = _curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0: return function() {return fn.call(this);};\n    case 1: return function(a0) {return fn.call(this, a0);};\n    case 2: return function(a0, a1) {return fn.call(this, a0, a1);};\n    case 3: return function(a0, a1, a2) {return fn.call(this, a0, a1, a2);};\n    case 4: return function(a0, a1, a2, a3) {return fn.call(this, a0, a1, a2, a3);};\n    case 5: return function(a0, a1, a2, a3, a4) {return fn.call(this, a0, a1, a2, a3, a4);};\n    case 6: return function(a0, a1, a2, a3, a4, a5) {return fn.call(this, a0, a1, a2, a3, a4, a5);};\n    case 7: return function(a0, a1, a2, a3, a4, a5, a6) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6);};\n    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);};\n    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);};\n    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);};\n    default: throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/nAry.js\n// module id = 43\n// module chunks = 275795115718244","var _curryN = require('./internal/_curryN');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _has = require('./internal/_has');\nvar _reduce = require('./internal/_reduce');\nvar _xreduceBy = require('./internal/_xreduceBy');\n\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n *      var namesByGrade = reduceToNamesBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Lucy', score: 92},\n *                      {name: 'Drew', score: 85},\n *                      // ...\n *                      {name: 'Bart', score: 62}];\n *      namesByGrade(students);\n *      // {\n *      //   'A': ['Lucy'],\n *      //   'B': ['Drew']\n *      //   // ...,\n *      //   'F': ['Bart']\n *      // }\n */\nmodule.exports = _curryN(4, [], _dispatchable([], _xreduceBy,\n  function reduceBy(valueFn, valueAcc, keyFn, list) {\n    return _reduce(function(acc, elt) {\n      var key = keyFn(elt);\n      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n      return acc;\n    }, {}, list);\n  }));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduceBy.js\n// module id = 44\n// module chunks = 275795115718244","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar filter = require('./filter');\n\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      var isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reject.js\n// module id = 45\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nmodule.exports = _curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') :\n                           Array.prototype.slice.call(list, 0).reverse();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reverse.js\n// module id = 46\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar map = require('./map');\n\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nmodule.exports = _curry2(function ap(applyF, applyX) {\n  return (\n    typeof applyX['fantasy-land/ap'] === 'function' ?\n      applyX['fantasy-land/ap'](applyF) :\n    typeof applyF.ap === 'function' ?\n      applyF.ap(applyX) :\n    typeof applyF === 'function' ?\n      function(x) { return applyF(x)(applyX(x)); } :\n    // else\n      _reduce(function(acc, f) { return _concat(acc, map(f, applyX)); }, [], applyF)\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/ap.js\n// module id = 47\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _makeFlat = require('./internal/_makeFlat');\nvar _xchain = require('./internal/_xchain');\nvar map = require('./map');\n\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      var duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nmodule.exports = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function(x) { return fn(monad(x))(x); };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/chain.js\n// module id = 48\n// module chunks = 275795115718244","var pipe = require('./pipe');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      var classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      var yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nmodule.exports = function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/compose.js\n// module id = 49\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar _isFunction = require('./internal/_isFunction');\nvar _isString = require('./internal/_isString');\nvar toString = require('./toString');\n\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nmodule.exports = _curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/concat.js\n// module id = 50\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _filter = require('./internal/_filter');\nvar _isObject = require('./internal/_isObject');\nvar _reduce = require('./internal/_reduce');\nvar _xfilter = require('./internal/_xfilter');\nvar keys = require('./keys');\n\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nmodule.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {\n  return (\n    _isObject(filterable) ?\n      _reduce(function(acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n        return acc;\n      }, {}, keys(filterable)) :\n    // else\n      _filter(pred, filterable)\n  );\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/filter.js\n// module id = 51\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _identity = require('./internal/_identity');\n\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      var obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nmodule.exports = _curry1(_identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/identity.js\n// module id = 52\n// module chunks = 275795115718244","var _objectAssign = require('./_objectAssign');\n\nmodule.exports =\n  typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_assign.js\n// module id = 53\n// module chunks = 275795115718244","module.exports = function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_filter.js\n// module id = 54\n// module chunks = 275795115718244","module.exports = function _identity(x) { return x; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_identity.js\n// module id = 55\n// module chunks = 275795115718244","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return (n << 0) === n;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isInteger.js\n// module id = 56\n// module chunks = 275795115718244","module.exports = function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isObject.js\n// module id = 57\n// module chunks = 275795115718244","module.exports = function _isTransformer(obj) {\n  return typeof obj['@@transducer/step'] === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isTransformer.js\n// module id = 58\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nmodule.exports = _curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !(_has(k, result))) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeWithKey.js\n// module id = 59\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n */\nmodule.exports = _curry2(function prop(p, obj) { return obj[p]; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/prop.js\n// module id = 60\n// module chunks = 275795115718244","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry1 = require('./internal/_curry1');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nmodule.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/tail.js\n// module id = 61\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtake = require('./internal/_xtake');\nvar slice = require('./slice');\n\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      var personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      var takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nmodule.exports = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/take.js\n// module id = 62\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n */\nmodule.exports = _curry1(function type(val) {\n  return val === null      ? 'Null'      :\n         val === undefined ? 'Undefined' :\n         Object.prototype.toString.call(val).slice(8, -1);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/type.js\n// module id = 63\n// module chunks = 275795115718244","var identity = require('./identity');\nvar uniqBy = require('./uniqBy');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nmodule.exports = uniqBy(identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/uniq.js\n// module id = 64\n// module chunks = 275795115718244","var _containsWith = require('./internal/_containsWith');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      var strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nmodule.exports = _curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_containsWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/uniqWith.js\n// module id = 65\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar adjust = require('./adjust');\nvar always = require('./always');\n\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nmodule.exports = _curry3(function update(idx, x, list) {\n  return adjust(always(x), idx, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/update.js\n// module id = 66\n// module chunks = 275795115718244","import getXYFromIndex from './getXYFromIndex';\n\n/**\n * Calculate bit position\n * @param {*} x row from 0 to 2\n * @param {*} y col from 0 to 2\n * @return {Number} bit position\n */\nconst calculateBitPositionForXY = (x, y) => (x + y * 3) * 2;\n\n/**\n * Calculate bit position\n * @param {*} index position index\n * @return {Number} bit position\n */\nconst calculateBitPosition = (index) => {\n  const { x, y } = getXYFromIndex(index);\n  return calculateBitPositionForXY(x, y);\n};\n\nexport default calculateBitPosition;\n\nexport {\n  calculateBitPositionForXY,\n  calculateBitPosition\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/calculateBitPosition.js","import { boardIndexes } from './constants';\nimport isPositionEmpty from './isPositionEmpty';\nimport { filter } from 'ramda';\n\n/**\n * Get all empty positions indexes\n * @param {Number} board board bits\n * @return {[Number]} indexes array\n */\nconst getEmptyPositions = (board) =>\n  filter(i => isPositionEmpty(board, i), boardIndexes);\n\nexport default getEmptyPositions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getEmptyPositions.js","/**\n * Get mask position bits\n * @param {Number} position bit position\n * @return {Number} bit mask\n */\n// eslint-disable-next-line no-bitwise\nconst getMask = (position) => 3 << position;\n\nexport default getMask;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getMask.js","import calculateBitPosition from './calculateBitPosition';\nimport getMask from './getMask';\nimport { boardLength } from './constants';\nimport { curry } from 'ramda';\n\n/**\n * Get position from board\n * @func\n * @param {Number} board board bits\n * @param {Number} index position index 0 to 8\n * @return {Number} position value\n */\nconst getPosition = curry((board, index) => {\n  if (!(index >= 0 && index < boardLength)) {\n    return null;\n  }\n\n  const bitPosition = calculateBitPosition(index);\n  const mask = getMask(bitPosition);\n  // eslint-disable-next-line no-bitwise\n  return (board & mask) >> bitPosition;\n});\n\nexport default getPosition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getPosition.js","import getPosition from './getPosition';\nimport { emptyValue } from './constants';\n\n/**\n * Check if board position is empty\n * @param {*} board bits board\n * @param {*} index position\n * @return {Boolean} is empty\n */\nconst isPositionEmpty = (board, index) =>\n  getPosition(board, index) === emptyValue;\n\nexport default isPositionEmpty;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/isPositionEmpty.js","import setPosition from './setPosition';\nimport getNewValue from './getNewValue';\nimport getNClicks from './getNClicks';\nimport getWinners from './getWinners';\nimport { isNil } from 'ramda';\n\nconst getScore = (oldScore, winners, isMyTurn) => {\n  if (winners) {\n    return oldScore + (isMyTurn ? 1 : 0);\n  }\n  else {\n    return oldScore;\n  }\n};\n\n/**\n * Move\n * @param {*} oldGame game\n * @param {Number} index position\n * @return {*} new game\n */\nconst move = (oldGame, index) => {\n  if (oldGame.ended) {\n    return oldGame;\n  }\n\n  const nClicks = getNClicks(oldGame.board);\n\n  const newValue = getNewValue(nClicks);\n\n  const newBoard = setPosition(oldGame.board, index, newValue);\n\n  if (isNil(newBoard)) {\n    return null;\n  }\n\n  const winners = getWinners(newBoard);\n\n  const isNClicksOdd = nClicks % 2 === 0;\n\n  const ended = winners || nClicks > 7 ? true : false;\n\n  return {\n    board: newBoard,\n    ended,\n    started: true,\n    lastMove: index,\n    winners,\n    isAiTurn: !oldGame.isAiTurn,\n    aiStarted: oldGame.aiStarted,\n    score: ended\n      ? {\n        ai: getScore(oldGame.score.ai, winners, oldGame.aiStarted ? isNClicksOdd : !isNClicksOdd),\n        human: getScore(oldGame.score.human, winners, oldGame.aiStarted ? !isNClicksOdd : isNClicksOdd)\n      }\n      : oldGame.score\n  };\n};\n\nexport default move;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/move.js","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a -> a) -> Number -> [a] -> [a]\n * @param {Function} fn The function to apply.\n * @param {Number} idx The index.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]\n *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]\n * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]\n * @symb R.adjust(f, 0, [a, b]) = [f(a), b]\n */\nmodule.exports = _curry3(function adjust(fn, idx, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/adjust.js\n// module id = 73\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nmodule.exports = _curry2(function and(a, b) {\n  return a && b;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/and.js\n// module id = 74\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\n\n\n/**\n * Returns `true` if at least one of elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      var lessThan0 = R.flip(R.lt)(0);\n *      var lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nmodule.exports = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/any.js\n// module id = 75\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      var nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nmodule.exports = _curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/apply.js\n// module id = 76\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\nvar _isArray = require('./internal/_isArray');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar isNil = require('./isNil');\n\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nmodule.exports = _curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = (!isNil(obj) && _has(idx, obj)) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/assocPath.js\n// module id = 77\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      var log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nmodule.exports = _curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function() {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/bind.js\n// module id = 78\n// module chunks = 275795115718244","var chain = require('./chain');\nvar compose = require('./compose');\nvar map = require('./map');\n\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       var get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       var getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nmodule.exports = function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/composeK.js\n// module id = 79\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar curry = require('./curry');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      };\n *      Salad.prototype.recipe = function() {\n *        var instructions = R.map((ingredient) => (\n *          'Add a whollop of ' + ingredient, this.ingredients)\n *        )\n *        return R.join('\\n', instructions)\n *      }\n *\n *      var ThreeLayerSalad = R.constructN(3, Salad)\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')\n *      console.log(salad.recipe());\n *      // Add a whollop of Mayonnaise\n *      // Add a whollop of Potato Chips\n *      // Add a whollop of Potato Ketchup\n */\nmodule.exports = _curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function() { return new Fn(); };\n  }\n  return curry(nAry(n, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case  1: return new Fn($0);\n      case  2: return new Fn($0, $1);\n      case  3: return new Fn($0, $1, $2);\n      case  4: return new Fn($0, $1, $2, $3);\n      case  5: return new Fn($0, $1, $2, $3, $4);\n      case  6: return new Fn($0, $1, $2, $3, $4, $5);\n      case  7: return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case  8: return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case  9: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10: return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/constructN.js\n// module id = 80\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _map = require('./internal/_map');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. When invoked, this new function is applied to some\n * arguments, each branching function is applied to those same arguments. The\n * results of each branching function are passed as arguments to the converging\n * function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      var average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nmodule.exports = _curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function() {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function(fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/converge.js\n// module id = 81\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      var defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nmodule.exports = _curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/defaultTo.js\n// module id = 82\n// module chunks = 275795115718244","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nmodule.exports = _curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/difference.js\n// module id = 83\n// module chunks = 275795115718244","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      var cmp = (x, y) => x.a === y.a;\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      var l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nmodule.exports = _curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_containsWith(pred, first[idx], second) &&\n        !_containsWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/differenceWith.js\n// module id = 84\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nmodule.exports = _curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dissoc.js\n// module id = 85\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdrop = require('./internal/_xdrop');\nvar slice = require('./slice');\n\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nmodule.exports = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/drop.js\n// module id = 86\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar last = require('./last');\n\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig (a, a -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dropRepeatsWith.js\n// module id = 87\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _isArguments = require('./internal/_isArguments');\nvar _isArray = require('./internal/_isArray');\nvar _isObject = require('./internal/_isObject');\nvar _isString = require('./internal/_isString');\n\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty` and/or\n * `<Type>.prototype.empty`.\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nmodule.exports = _curry1(function empty(x) {\n  return (\n    (x != null && typeof x['fantasy-land/empty'] === 'function') ?\n      x['fantasy-land/empty']() :\n    (x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function') ?\n      x.constructor['fantasy-land/empty']() :\n    (x != null && typeof x.empty === 'function') ?\n      x.empty() :\n    (x != null && x.constructor != null && typeof x.constructor.empty === 'function') ?\n      x.constructor.empty() :\n    _isArray(x) ?\n      [] :\n    _isString(x) ?\n      '' :\n    _isObject(x) ?\n      {} :\n    _isArguments(x) ?\n      (function() { return arguments; }()) :\n    // else\n      void 0\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/empty.js\n// module id = 88\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      var o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nmodule.exports = _curry2(function identical(a, b) {\n  // SameValue algorithm\n  if (a === b) { // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/identical.js\n// module id = 89\n// module chunks = 275795115718244","var _cloneRegExp = require('./_cloneRegExp');\nvar type = require('../type');\n\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nmodule.exports = function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ?\n        _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':  return copy({});\n    case 'Array':   return copy([]);\n    case 'Date':    return new Date(value.valueOf());\n    case 'RegExp':  return _cloneRegExp(value);\n    default:        return value;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_clone.js\n// module id = 90\n// module chunks = 275795115718244","module.exports = function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global     ? 'g' : '') +\n                                    (pattern.ignoreCase ? 'i' : '') +\n                                    (pattern.multiline  ? 'm' : '') +\n                                    (pattern.sticky     ? 'y' : '') +\n                                    (pattern.unicode    ? 'u' : ''));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_cloneRegExp.js\n// module id = 91\n// module chunks = 275795115718244","module.exports = function _complement(f) {\n  return function() {\n    return !f.apply(this, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_complement.js\n// module id = 92\n// module chunks = 275795115718244","var _arity = require('./_arity');\nvar _curry2 = require('./_curry2');\n\n\nmodule.exports = function _createPartialApplicator(concat) {\n  return _curry2(function(fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function() {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_createPartialApplicator.js\n// module id = 93\n// module chunks = 275795115718244","var equals = require('../equals');\n\n\nmodule.exports = function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_indexOf.js\n// module id = 94\n// module chunks = 275795115718244","var _has = require('./_has');\n\n\nmodule.exports = (function() {\n  var toString = Object.prototype.toString;\n  return toString.call(arguments) === '[object Arguments]' ?\n    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :\n    function _isArguments(x) { return _has('callee', x); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isArguments.js\n// module id = 95\n// module chunks = 275795115718244","module.exports = function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isNumber.js\n// module id = 96\n// module chunks = 275795115718244","var _isArrayLike = require('./_isArrayLike');\n\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nmodule.exports = function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_makeFlat.js\n// module id = 97\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function(result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return _curry2(function _xany(f, xf) { return new XAny(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xany.js\n// module id = 98\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function(result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropRepeatsWith(pred, xf) { return new XDropRepeatsWith(pred, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xdropRepeatsWith.js\n// module id = 99\n// module chunks = 275795115718244","module.exports = (function() {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function() {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };\n  XWrap.prototype['@@transducer/step'] = function(acc, x) {\n    return this.f(acc, x);\n  };\n\n  return function _xwrap(fn) { return new XWrap(fn); };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xwrap.js\n// module id = 100\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nmodule.exports = _curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/is.js\n// module id = 101\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nmodule.exports = _curry1(function isNil(x) { return x == null; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/isNil.js\n// module id = 102\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar converge = require('./converge');\n\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      var getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nmodule.exports = _curry1(function juxt(fns) {\n  return converge(function() { return Array.prototype.slice.call(arguments, 0); }, fns);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/juxt.js\n// module id = 103\n// module chunks = 275795115718244","var nth = require('./nth');\n\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nmodule.exports = nth(-1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/last.js\n// module id = 104\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nmodule.exports = _curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/length.js\n// module id = 105\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar ap = require('./ap');\nvar curryN = require('./curryN');\nvar map = require('./map');\n\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      var madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nmodule.exports = _curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function() {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/liftN.js\n// module id = 106\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar sum = require('./sum');\n\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nmodule.exports = _curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mean.js\n// module id = 107\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an\n * additional function that will be applied to a given argument set and used to\n * create the cache key under which the results of the function to be memoized\n * will be stored. Care must be taken when implementing key generation to avoid\n * clashes that may overwrite previous entries erroneously.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoize\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = _curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function() {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/memoizeWith.js\n// module id = 108\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      var double = R.multiply(2);\n *      var triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nmodule.exports = _curry2(function multiply(a, b) { return a * b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/multiply.js\n// module id = 109\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nmodule.exports = _curry1(function not(a) {\n  return !a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/not.js\n// module id = 110\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      var matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nmodule.exports = _curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/objOf.js\n// module id = 111\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nmodule.exports = _curry2(function or(a, b) {\n  return a || b;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/or.js\n// module id = 112\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nmodule.exports = (function() {\n  // `Identity` is a functor that holds a single value, where `map` simply\n  // transforms the held value with the provided function.\n  var Identity = function(x) {\n    return {value: x, map: function(f) { return Identity(f(x)); }};\n  };\n\n  return _curry3(function over(lens, f, x) {\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    return lens(function(y) { return Identity(f(y)); })(x).value;\n  });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/over.js\n// module id = 113\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nmodule.exports = _curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pickAll.js\n// module id = 114\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _pipe = require('./internal/_pipe');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      var f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nmodule.exports = function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipe, arguments[0], tail(arguments)));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pipe.js\n// module id = 115\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _pipeP = require('./internal/_pipeP');\nvar reduce = require('./reduce');\nvar tail = require('./tail');\n\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nmodule.exports = function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length,\n                reduce(_pipeP, arguments[0], tail(arguments)));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pipeP.js\n// module id = 116\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nmodule.exports = _curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/prepend.js\n// module id = 117\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a, b -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *          -               -2\n *         / \\              / \\\n *        1   -            1   3\n *           / \\              / \\\n *          2   -     ==>    2  -1\n *             / \\              / \\\n *            3   -            3   4\n *               / \\              / \\\n *              4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nmodule.exports = _curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduceRight.js\n// module id = 118\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nmodule.exports = _curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/remove.js\n// module id = 119\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar ap = require('./ap');\nvar map = require('./map');\nvar prepend = require('./prepend');\nvar reduceRight = require('./reduceRight');\n\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nmodule.exports = _curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ?\n    traversable.sequence(of) :\n    reduceRight(function(x, acc) { return ap(map(prepend, x), acc); },\n                of([]),\n                traversable);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/sequence.js\n// module id = 120\n// module chunks = 275795115718244","var add = require('./add');\nvar reduce = require('./reduce');\n\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nmodule.exports = reduce(add, 0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/sum.js\n// module id = 121\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar drop = require('./drop');\n\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nmodule.exports = _curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/takeLast.js\n// module id = 122\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nmodule.exports = _curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/times.js\n// module id = 123\n// module chunks = 275795115718244","var _Set = require('./internal/_Set');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nmodule.exports = _curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/uniqBy.js\n// module id = 124\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nmodule.exports = _curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function() {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/useWith.js\n// module id = 125\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nmodule.exports = _curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/values.js\n// module id = 126\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nmodule.exports = _curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/where.js\n// module id = 127\n// module chunks = 275795115718244","import getBestPositions from './getBestPositions';\nimport getNetwork from './getNetwork';\nimport getPositionIndex from './getPositionIndex';\nimport move from './move';\nimport { any, isNil } from 'ramda';\nimport { getRandomItem } from 'ptz-math';\n\nconst net = getNetwork();\n\nconst learningRates = {\n  invalidMove: 0.1,\n  validMove: 0.6,\n  win: 1,\n  lost: 0\n};\n\n/**\n * Get ai move index position\n * @param {*} oldGame game\n * @return {Number} position index\n */\nconst getAiMove = (oldGame) => {\n  if (isNil(oldGame)) {\n    return oldGame;\n  }\n\n  const output = net.activate([oldGame.board]);\n\n  const index = getPositionIndex(output);\n\n  const newGame = move(oldGame, index);\n\n  if (newGame && newGame.ended) {\n    net.propagate(learningRates.win, newGame.board);\n    return index;\n\n  } else {\n\n    const bestPositions = getBestPositions(oldGame);\n\n    if (any(p => index === p, bestPositions)) {\n      net.propagate(learningRates.validMove, newGame.board);\n      return index;\n\n    } else {      \n      const bestPosition = getRandomItem(bestPositions);\n      const gameAfterBestMove = move(oldGame, bestPosition);\n      net.propagate(learningRates.invalidMove, gameAfterBestMove.board);\n\n      return bestPosition;\n    }\n  }\n};\n\nexport default getAiMove;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getAiMove.js","import getEmptyPositions from './getEmptyPositions';\nimport move from './move';\nimport { filter, head, pipe } from 'ramda';\n\n/**\n * Get another item from the list\n * \n * #TODO: Move to ptz-fp\n * \n * @param {*} item item to be excluded\n * @param {*} list list to get a different item\n * @return {*} another item\n */\nconst getOther = (item, list) => pipe(\n  filter(i => i !== item),\n  head\n)(list);\n\n/**\n * Get Win Positions or Empty Positions\n * @func\n * @param {[Number]} oldGame old game\n * @return {Number} random empty position\n */\nconst getBestPositions = (oldGame) => {\n  const emptyPositions = getEmptyPositions(oldGame.board);\n\n  const winPositions = emptyPositions.filter(position => {\n    const testGame = move(oldGame, position);\n    return testGame.ended;\n  });\n\n  if (winPositions.length > 0) {\n    return winPositions;\n  }\n\n  const losePositions = emptyPositions.filter(position => {\n    const testGame = move(oldGame, getOther(position, emptyPositions));\n    const testGame2 = move(testGame, position);\n    return testGame2.ended;\n  });\n\n  return losePositions.length > 0\n    ? losePositions\n    : emptyPositions;\n};\n\nexport default getBestPositions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getBestPositions.js","import { boardLength } from './constants';\nimport getEmptyPositions from './getEmptyPositions';\nimport { length } from 'ramda';\n\n/**\n * Get number o clicks / moves\n * @func\n * @param {[Number]} board board array\n * @return {Number} n clicks\n */\nconst getNClicks = (board) =>\n  boardLength - length(getEmptyPositions(board));\n\nexport default getNClicks;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getNClicks.js","import { Network, Layer } from 'synaptic';\n\n/**\n * Get AI Neural Network\n * @return {*} Neural Network\n */\nconst getNetwork = () => {\n  const inputLayer = new Layer(1);\n  const hiddenLayer1 = new Layer(9);\n  const hiddenLayer2 = new Layer(9);\n  const outputLayer = new Layer(9);\n\n  inputLayer.project(hiddenLayer1);\n  hiddenLayer1.project(hiddenLayer2);\n  hiddenLayer2.project(outputLayer);\n\n  return new Network({\n    input: inputLayer,\n    hidden: [hiddenLayer1, hiddenLayer2],\n    output: outputLayer\n  });\n};\n\nexport default getNetwork;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getNetwork.js","import { X, O } from './constants';\n\n/**\n * get new player value\n * @param {Number} nClicks number of previous clicks / moves\n * @return {Number} X or O value\n */\nconst getNewValue = (nClicks) =>\n  nClicks % 2\n    ? O\n    : X;\n\nexport default getNewValue;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getNewValue.js","const getPositionIndex = (aiOutput) => {\n  return aiOutput.reduce((bestIndex, value, index) =>\n    value > aiOutput[bestIndex]\n      ? index\n      : bestIndex, 0);\n};\n\nexport default getPositionIndex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getPositionIndex.js","import { filter, head } from 'ramda';\nimport { emptyValue } from './constants';\nimport getPosition from './getPosition';\n\nconst positionsToCheck = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\n/**\n * Check winners for 3 winning positions\n * @param {Number} board board\n * @return {[Number]} winners\n */\nconst getWinners = (board) => {\n  const get = getPosition(board);\n\n  return head(\n    filter((positions) => {\n      const p0 = get(positions[0]);\n      const p1 = get(positions[1]);\n      const p2 = get(positions[2]);\n\n      return p0 !== emptyValue && p0 === p1 && p1 === p2;\n    }, positionsToCheck)\n  ) || null;\n};\n\nexport default getWinners;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getWinners.js","/**\n * Get {x, y} coordinates from index\n * \n * x,y:\n * \n * 0,0  1,0  2,0\n * \n * 0,1  1,1  2,1\n * \n * 0,2  1,2  2,2\n * \n * @param {Number} index position index 0 to 8\n * @return {*} {x,y}\n */\nconst getXYFromIndex = (index) => {\n  switch (index) {\n    case 0: return { x: 0, y: 0 };\n    case 1: return { x: 1, y: 0 };\n    case 2: return { x: 2, y: 0 };\n    case 3: return { x: 0, y: 1 };\n    case 4: return { x: 1, y: 1 };\n    case 5: return { x: 2, y: 1 };\n    case 6: return { x: 0, y: 2 };\n    case 7: return { x: 1, y: 2 };\n    case 8: return { x: 2, y: 2 };\n    default: return null;\n  }\n};\n\nexport default getXYFromIndex;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/getXYFromIndex.js","import calculateBitPosition from './calculateBitPosition';\nimport getMask from './getMask';\nimport isPositionEmpty from './isPositionEmpty';\n\n/**\n * Get board after move, return null for invalid move\n * @param {Number} board old board bits\n * @param {Number} index position\n * @param {Number} value X=1, O=2\n * @return {Number} new board bits\n */\nconst setPosition = (board, index, value) => {\n  if (!isPositionEmpty(board, index)) {\n    return null;\n  }\n\n  const position = calculateBitPosition(index);\n  // eslint-disable-next-line no-bitwise\n  return (board & ~getMask(position)) | (value << position);\n};\n\nexport default setPosition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ai/setPosition.js","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Takes min and max then returns\n * an random number between them.\n */\nvar random = function random(min, max) {\n    return Math.floor(Math.random() * max) + min;\n};\n/**\n * Gets some random item from the given array.\n * @param list\n */\nfunction getRandomItem(list) {\n    if (!list) return null;\n    if (list.length === 0) return list[0];\n    var randomIndex = random(1, list.length) - 1;\n    return list[randomIndex];\n}\nexports.random = random;\nexports.getRandomItem = getRandomItem;\n//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ptz-math/dist/index.js\n// module id = 137\n// module chunks = 275795115718244","var always = require('./always');\n\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.T\n * @example\n *\n *      R.F(); //=> false\n */\nmodule.exports = always(false);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/F.js\n// module id = 138\n// module chunks = 275795115718244","var always = require('./always');\n\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.always, R.F\n * @example\n *\n *      R.T(); //=> true\n */\nmodule.exports = always(true);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/T.js\n// module id = 139\n// module chunks = 275795115718244","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {'@@functional/placeholder': true};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/__.js\n// module id = 140\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      var mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nmodule.exports = _curry1(function addIndex(fn) {\n  return curryN(fn.length, function() {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function() {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/addIndex.js\n// module id = 141\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xall = require('./internal/_xall');\n\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      var equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nmodule.exports = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/all.js\n// module id = 142\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      var isQueen = R.propEq('rank', 'Q');\n *      var isSpade = R.propEq('suit', '♠︎');\n *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nmodule.exports = _curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/allPass.js\n// module id = 143\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\n\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      var isClub = R.propEq('suit', '♣');\n *      var isSpade = R.propEq('suit', '♠');\n *      var isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nmodule.exports = _curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function() {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/anyPass.js\n// module id = 144\n// module chunks = 275795115718244","var _aperture = require('./internal/_aperture');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xaperture = require('./internal/_xaperture');\n\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nmodule.exports = _curry2(_dispatchable([], _xaperture, _aperture));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/aperture.js\n// module id = 145\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nmodule.exports = _curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/append.js\n// module id = 146\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar apply = require('./apply');\nvar curryN = require('./curryN');\nvar map = require('./map');\nvar max = require('./max');\nvar pluck = require('./pluck');\nvar reduce = require('./reduce');\nvar values = require('./values');\n\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      var getMetrics = R.applySpec({\n *                                      sum: R.add,\n *                                      nested: { mul: R.multiply }\n *                                   });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nmodule.exports = _curry1(function applySpec(spec) {\n  spec = map(function(v) { return typeof v == 'function' ? v : applySpec(v); },\n             spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))),\n                function() {\n                  var args = arguments;\n                  return map(function(f) { return apply(f, args); }, spec);\n                });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/applySpec.js\n// module id = 147\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      var byAge = R.ascend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByYoungestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/ascend.js\n// module id = 148\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      var takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      var takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nmodule.exports = _curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/binary.js\n// module id = 149\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar and = require('./and');\nvar lift = require('./lift');\n\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      var gt10 = R.gt(R.__, 10)\n *      var lt20 = R.lt(R.__, 20)\n *      var f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n */\nmodule.exports = _curry2(function both(f, g) {\n  return _isFunction(f) ?\n    function _both() {\n      return f.apply(this, arguments) && g.apply(this, arguments);\n    } :\n    lift(and)(f, g);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/both.js\n// module id = 150\n// module chunks = 275795115718244","var curry = require('./curry');\n\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      var indentN = R.pipe(R.times(R.always(' ')),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      var format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nmodule.exports = curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/call.js\n// module id = 151\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nmodule.exports = _curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min :\n         value > max ? max :\n         value;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/clamp.js\n// module id = 152\n// module chunks = 275795115718244","var _clone = require('./internal/_clone');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      var objects = [{}, {}, {}];\n *      var objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nmodule.exports = _curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ?\n    value.clone() :\n    _clone(value, [], [], true);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/clone.js\n// module id = 153\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a, b -> Boolean) -> (a, b -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      var byAge = R.comparator((a, b) => a.age < b.age);\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByIncreasingAge = R.sort(byAge, people);\n */\nmodule.exports = _curry1(function comparator(pred) {\n  return function(a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/comparator.js\n// module id = 154\n// module chunks = 275795115718244","var lift = require('./lift');\nvar not = require('./not');\n\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      var isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nmodule.exports = lift(not);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/complement.js\n// module id = 155\n// module chunks = 275795115718244","var pipeP = require('./pipeP');\nvar reverse = require('./reverse');\n\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @example\n *\n *      var db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      var lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      var lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      var followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nmodule.exports = function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/composeP.js\n// module id = 156\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\nvar map = require('./map');\nvar max = require('./max');\nvar reduce = require('./reduce');\n\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @example\n *\n *      var fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nmodule.exports = _curry1(function cond(pairs) {\n  var arity = reduce(max,\n                     0,\n                     map(function(pair) { return pair[0].length; }, pairs));\n  return _arity(arity, function() {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/cond.js\n// module id = 157\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar constructN = require('./constructN');\n\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      var AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      var animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      var animalSighting = R.invoker(0, 'sighting');\n *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nmodule.exports = _curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/construct.js\n// module id = 158\n// module chunks = 275795115718244","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n */\nmodule.exports = _curry2(_contains);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/contains.js\n// module id = 159\n// module chunks = 275795115718244","var reduceBy = require('./reduceBy');\n\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nmodule.exports = reduceBy(function(acc, elem) { return acc + 1; }, 0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/countBy.js\n// module id = 160\n// module chunks = 275795115718244","var add = require('./add');\n\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nmodule.exports = add(-1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dec.js\n// module id = 161\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      var byAge = R.descend(R.prop('age'));\n *      var people = [\n *        // ...\n *      ];\n *      var peopleByOldestFirst = R.sort(byAge, people);\n */\nmodule.exports = _curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/descend.js\n// module id = 162\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\nvar assoc = require('./assoc');\nvar dissoc = require('./dissoc');\nvar remove = require('./remove');\nvar update = require('./update');\n\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nmodule.exports = _curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(path[0])) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dissocPath.js\n// module id = 163\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      var half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      var reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nmodule.exports = _curry2(function divide(a, b) { return a / b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/divide.js\n// module id = 164\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLast = require('./internal/_dropLast');\nvar _xdropLast = require('./internal/_xdropLast');\n\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLast, _dropLast));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dropLast.js\n// module id = 165\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _dropLastWhile = require('./internal/_dropLastWhile');\nvar _xdropLastWhile = require('./internal/_xdropLastWhile');\n\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} predicate The function to be called on each element\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      var lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dropLastWhile.js\n// module id = 166\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropRepeatsWith = require('./internal/_xdropRepeatsWith');\nvar dropRepeatsWith = require('./dropRepeatsWith');\nvar equals = require('./equals');\n\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nmodule.exports = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dropRepeats.js\n// module id = 167\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xdropWhile = require('./internal/_xdropWhile');\n\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      var lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n */\nmodule.exports = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && pred(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, idx);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/dropWhile.js\n// module id = 168\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isFunction = require('./internal/_isFunction');\nvar lift = require('./lift');\nvar or = require('./or');\n\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      var gt10 = x => x > 10;\n *      var even = x => x % 2 === 0;\n *      var f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n */\nmodule.exports = _curry2(function either(f, g) {\n  return _isFunction(f) ?\n    function _either() {\n      return f.apply(this, arguments) || g.apply(this, arguments);\n    } :\n    lift(or)(f, g);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/either.js\n// module id = 169\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar takeLast = require('./takeLast');\n\n/**\n * Checks if a list ends with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/endsWith.js\n// module id = 170\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nmodule.exports = _curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/eqBy.js\n// module id = 171\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nmodule.exports = _curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/eqProps.js\n// module id = 172\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nmodule.exports = _curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function'                 ? transformation(object[key])\n                : transformation && type === 'object' ? evolve(transformation, object[key])\n                                                      : object[key];\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/evolve.js\n// module id = 173\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfind = require('./internal/_xfind');\n\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/find.js\n// module id = 174\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindIndex = require('./internal/_xfindIndex');\n\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/findIndex.js\n// module id = 175\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLast = require('./internal/_xfindLast');\n\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/findLast.js\n// module id = 176\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xfindLastIndex = require('./internal/_xfindLastIndex');\n\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nmodule.exports = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/findLastIndex.js\n// module id = 177\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _makeFlat = require('./internal/_makeFlat');\n\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nmodule.exports = _curry1(_makeFlat(true));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/flatten.js\n// module id = 178\n// module chunks = 275795115718244","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      var printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nmodule.exports = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/forEach.js\n// module id = 179\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar keys = require('./keys');\n\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nmodule.exports = _curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/forEachObjIndexed.js\n// module id = 180\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/fromPairs.js\n// module id = 181\n// module chunks = 275795115718244","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\nvar reduceBy = require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.transduce\n * @example\n *\n *      var byGrade = R.groupBy(function(student) {\n *        var score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      var students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nmodule.exports = _curry2(_checkForMethod('groupBy', reduceBy(function(acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/groupBy.js\n// module id = 182\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nmodule.exports = _curry2(function(fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/groupWith.js\n// module id = 183\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gt(a, b) { return a > b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/gt.js\n// module id = 184\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nmodule.exports = _curry2(function gte(a, b) { return a >= b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/gte.js\n// module id = 185\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _has = require('./internal/_has');\n\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      var hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      var point = {x: 0, y: 0};\n *      var pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nmodule.exports = _curry2(_has);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/has.js\n// module id = 186\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      var square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nmodule.exports = _curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/hasIn.js\n// module id = 187\n// module chunks = 275795115718244","var nth = require('./nth');\n\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nmodule.exports = nth(0);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/head.js\n// module id = 188\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar curryN = require('./curryN');\n\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when\n * @example\n *\n *      var incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nmodule.exports = _curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length),\n    function _ifElse() {\n      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n    }\n  );\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/ifElse.js\n// module id = 189\n// module chunks = 275795115718244","var add = require('./add');\n\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nmodule.exports = add(1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/inc.js\n// module id = 190\n// module chunks = 275795115718244","var reduceBy = require('./reduceBy');\n\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nmodule.exports = reduceBy(function(acc, elem) { return elem; }, null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/indexBy.js\n// module id = 191\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _indexOf = require('./internal/_indexOf');\nvar _isArray = require('./internal/_isArray');\n\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ?\n    xs.indexOf(target) :\n    _indexOf(xs, target, 0);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/indexOf.js\n// module id = 192\n// module chunks = 275795115718244","var slice = require('./slice');\n\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nmodule.exports = slice(0, -1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/init.js\n// module id = 193\n// module chunks = 275795115718244","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar _filter = require('./internal/_filter');\n\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function(x) { return _containsWith(pred, x, ys); }, xs);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/innerJoin.js\n// module id = 194\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nmodule.exports = _curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/insert.js\n// module id = 195\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nmodule.exports = _curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx),\n                   elts,\n                   Array.prototype.slice.call(list, idx));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/insertAll.js\n// module id = 196\n// module chunks = 275795115718244","var _contains = require('./_contains');\n\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = (function() {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function(item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function(item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  function hasOrAdd(item, shouldAdd, set) {\n    var type = typeof item;\n    var prevSize, newSize;\n    switch (type) {\n      case 'string':\n      case 'number':\n        // distinguish between +0 and -0\n        if (item === 0 && 1 / item === -Infinity) {\n          if (set._items['-0']) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items['-0'] = true;\n            }\n            return false;\n          }\n        }\n        // these types can all utilise the native Set\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = {};\n              set._items[type][item] = true;\n            }\n            return false;\n          } else if (item in set._items[type]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][item] = true;\n            }\n            return false;\n          }\n        }\n\n      case 'boolean':\n        // set._items['boolean'] holds a two element array\n        // representing [ falseExists, trueExists ]\n        if (type in set._items) {\n          var bIdx = item ? 1 : 0;\n          if (set._items[type][bIdx]) {\n            return true;\n          } else {\n            if (shouldAdd) {\n              set._items[type][bIdx] = true;\n            }\n            return false;\n          }\n        } else {\n          if (shouldAdd) {\n            set._items[type] = item ? [false, true] : [true, false];\n          }\n          return false;\n        }\n\n      case 'function':\n        // compare functions for reference equality\n        if (set._nativeSet !== null) {\n          if (shouldAdd) {\n            prevSize = set._nativeSet.size;\n            set._nativeSet.add(item);\n            newSize = set._nativeSet.size;\n            return newSize === prevSize;\n          } else {\n            return set._nativeSet.has(item);\n          }\n        } else {\n          if (!(type in set._items)) {\n            if (shouldAdd) {\n              set._items[type] = [item];\n            }\n            return false;\n          }\n          if (!_contains(item, set._items[type])) {\n            if (shouldAdd) {\n              set._items[type].push(item);\n            }\n            return false;\n          }\n          return true;\n        }\n\n      case 'undefined':\n        if (set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type] = true;\n          }\n          return false;\n        }\n\n      case 'object':\n        if (item === null) {\n          if (!set._items['null']) {\n            if (shouldAdd) {\n              set._items['null'] = true;\n            }\n            return false;\n          }\n          return true;\n        }\n      /* falls through */\n      default:\n        // reduce the search size of heterogeneous sets by creating buckets\n        // for each type.\n        type = Object.prototype.toString.call(item);\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        // scan through all previously applied items\n        if (!_contains(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n    }\n  }\n  return _Set;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_Set.js\n// module id = 197\n// module chunks = 275795115718244","module.exports = function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_aperture.js\n// module id = 198\n// module chunks = 275795115718244","module.exports = function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_arrayFromIterator.js\n// module id = 199\n// module chunks = 275795115718244","var take = require('../take');\n\nmodule.exports = function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_dropLast.js\n// module id = 200\n// module chunks = 275795115718244","module.exports = function dropLastWhile(pred, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && pred(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx + 1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_dropLastWhile.js\n// module id = 201\n// module chunks = 275795115718244","var _arrayFromIterator = require('./_arrayFromIterator');\nvar _functionName = require('./_functionName');\nvar _has = require('./_has');\nvar identical = require('../identical');\nvar keys = require('../keys');\nvar type = require('../type');\n\n\nmodule.exports = function _equals(a, b, stackA, stackB) {\n  if (identical(a, b)) {\n    return true;\n  }\n\n  if (type(a) !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) &&\n           typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) &&\n           typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (type(a)) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' &&\n          _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!identical(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source &&\n            a.global === b.global &&\n            a.ignoreCase === b.ignoreCase &&\n            a.multiline === b.multiline &&\n            a.sticky === b.sticky &&\n            a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n    case 'Map':\n    case 'Set':\n      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n        return false;\n      }\n      break;\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n      break;\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  stackA.push(a);\n  stackB.push(b);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  stackA.pop();\n  stackB.pop();\n  return true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_equals.js\n// module id = 202\n// module chunks = 275795115718244","var _forceReduced = require('./_forceReduced');\nvar _isArrayLike = require('./_isArrayLike');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  var preservingReduced = function(xf) {\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return xf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        var ret = xf['@@transducer/step'](result, input);\n        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n      }\n    };\n  };\n\n  return function _xcat(xf) {\n    var rxf = preservingReduced(xf);\n    return {\n      '@@transducer/init': _xfBase.init,\n      '@@transducer/result': function(result) {\n        return rxf['@@transducer/result'](result);\n      },\n      '@@transducer/step': function(result, input) {\n        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n      }\n    };\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_flatCat.js\n// module id = 203\n// module chunks = 275795115718244","module.exports = function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_forceReduced.js\n// module id = 204\n// module chunks = 275795115718244","module.exports = function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_functionName.js\n// module id = 205\n// module chunks = 275795115718244","module.exports = function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_isRegExp.js\n// module id = 206\n// module chunks = 275795115718244","var _has = require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nmodule.exports = function _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_objectAssign.js\n// module id = 207\n// module chunks = 275795115718244","module.exports = function _of(x) { return [x]; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_of.js\n// module id = 208\n// module chunks = 275795115718244","module.exports = function _pipe(f, g) {\n  return function() {\n    return g.call(this, f.apply(this, arguments));\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_pipe.js\n// module id = 209\n// module chunks = 275795115718244","module.exports = function _pipeP(f, g) {\n  return function() {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function(x) {\n      return g.call(ctx, x);\n    });\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_pipeP.js\n// module id = 210\n// module chunks = 275795115718244","module.exports = function _quote(s) {\n  var escaped = s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/[\\b]/g, '\\\\b')  // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f')\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    .replace(/\\v/g, '\\\\v')\n    .replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_quote.js\n// module id = 211\n// module chunks = 275795115718244","var _assign = require('./_assign');\nvar _identity = require('./_identity');\nvar _isArrayLike = require('./_isArrayLike');\nvar _isTransformer = require('./_isTransformer');\nvar objOf = require('../objOf');\n\n\nmodule.exports = (function() {\n  var _stepCatArray = {\n    '@@transducer/init': Array,\n    '@@transducer/step': function(xs, x) {\n      xs.push(x);\n      return xs;\n    },\n    '@@transducer/result': _identity\n  };\n  var _stepCatString = {\n    '@@transducer/init': String,\n    '@@transducer/step': function(a, b) { return a + b; },\n    '@@transducer/result': _identity\n  };\n  var _stepCatObject = {\n    '@@transducer/init': Object,\n    '@@transducer/step': function(result, input) {\n      return _assign(\n        result,\n        _isArrayLike(input) ? objOf(input[0], input[1]) : input\n      );\n    },\n    '@@transducer/result': _identity\n  };\n\n  return function _stepCat(obj) {\n    if (_isTransformer(obj)) {\n      return obj;\n    }\n    if (_isArrayLike(obj)) {\n      return _stepCatArray;\n    }\n    if (typeof obj === 'string') {\n      return _stepCatString;\n    }\n    if (typeof obj === 'object') {\n      return _stepCatObject;\n    }\n    throw new Error('Cannot create transformer for ' + obj);\n  };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_stepCat.js\n// module id = 212\n// module chunks = 275795115718244","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nmodule.exports = (function() {\n  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };\n\n  return typeof Date.prototype.toISOString === 'function' ?\n    function _toISOString(d) {\n      return d.toISOString();\n    } :\n    function _toISOString(d) {\n      return (\n        d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds()) + '.' +\n        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'\n      );\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_toISOString.js\n// module id = 213\n// module chunks = 275795115718244","var _contains = require('./_contains');\nvar _map = require('./_map');\nvar _quote = require('./_quote');\nvar _toISOString = require('./_toISOString');\nvar keys = require('../keys');\nvar reject = require('../reject');\n\n\nmodule.exports = function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function(obj, keys) {\n    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\\d+$/.test(k); }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_toString.js\n// module id = 214\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function(result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function(result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return _curry2(function _xall(f, xf) { return new XAll(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xall.js\n// module id = 215\n// module chunks = 275795115718244","var _concat = require('./_concat');\nvar _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function(result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function() {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos),\n                   Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return _curry2(function _xaperture(n, xf) { return new XAperture(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xaperture.js\n// module id = 216\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _flatCat = require('./_flatCat');\nvar map = require('../map');\n\n\nmodule.exports = _curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xchain.js\n// module id = 217\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function(result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdrop(n, xf) { return new XDrop(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xdrop.js\n// module id = 218\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] =  function(result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function(input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return _curry2(function _xdropLast(n, xf) { return new XDropLast(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xdropLast.js\n// module id = 219\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduce = require('./_reduce');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function(result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.retain(result, input)\n                         : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function(result, input) {\n    result = _reduce(\n      this.xf['@@transducer/step'],\n      result,\n      this.retained\n    );\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function(result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return _curry2(function _xdropLastWhile(fn, xf) { return new XDropLastWhile(fn, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xdropLastWhile.js\n// module id = 220\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return _curry2(function _xdropWhile(f, xf) { return new XDropWhile(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xdropWhile.js\n// module id = 221\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfilter.js\n// module id = 222\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfind(f, xf) { return new XFind(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfind.js\n// module id = 223\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function(result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfindIndex.js\n// module id = 224\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function(result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLast(f, xf) { return new XFindLast(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfindLast.js\n// module id = 225\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function(result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function(result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return _curry2(function _xfindLastIndex(f, xf) { return new XFindLastIndex(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xfindLastIndex.js\n// module id = 226\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function(result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xmap.js\n// module id = 227\n// module chunks = 275795115718244","var _curryN = require('./_curryN');\nvar _has = require('./_has');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function(result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function(result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return _curryN(4, [],\n                 function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n                   return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n                 });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xreduceBy.js\n// module id = 228\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\nmodule.exports = (function() {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function(result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return _curry2(function _xtake(n, xf) { return new XTake(n, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xtake.js\n// module id = 229\n// module chunks = 275795115718244","var _curry2 = require('./_curry2');\nvar _reduced = require('./_reduced');\nvar _xfBase = require('./_xfBase');\n\n\nmodule.exports = (function() {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function(result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return _curry2(function _xtakeWhile(f, xf) { return new XTakeWhile(f, xf); });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/internal/_xtakeWhile.js\n// module id = 230\n// module chunks = 275795115718244","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar _filter = require('./internal/_filter');\nvar flip = require('./flip');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nmodule.exports = _curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_contains)(lookupList), filteredList));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/intersection.js\n// module id = 231\n// module chunks = 275795115718244","var _containsWith = require('./internal/_containsWith');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate function that determines whether\n *        the two supplied elements are equal.\n * @param {Array} list1 One list of items to compare\n * @param {Array} list2 A second list of items to compare\n * @return {Array} A new list containing those elements common to both lists.\n * @see R.innerJoin\n * @deprecated since v0.24.0\n * @example\n *\n *      var buffaloSpringfield = [\n *        {id: 824, name: 'Richie Furay'},\n *        {id: 956, name: 'Dewey Martin'},\n *        {id: 313, name: 'Bruce Palmer'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *      var csny = [\n *        {id: 204, name: 'David Crosby'},\n *        {id: 456, name: 'Stephen Stills'},\n *        {id: 539, name: 'Graham Nash'},\n *        {id: 177, name: 'Neil Young'}\n *      ];\n *\n *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nmodule.exports = _curry3(function intersectionWith(pred, list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  var results = [];\n  var idx = 0;\n  while (idx < filteredList.length) {\n    if (_containsWith(pred, filteredList[idx], lookupList)) {\n      results[results.length] = filteredList[idx];\n    }\n    idx += 1;\n  }\n  return uniqWith(pred, results);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/intersectionWith.js\n// module id = 232\n// module chunks = 275795115718244","var _checkForMethod = require('./internal/_checkForMethod');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n */\nmodule.exports = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/intersperse.js\n// module id = 233\n// module chunks = 275795115718244","var _clone = require('./internal/_clone');\nvar _curry3 = require('./internal/_curry3');\nvar _isTransformer = require('./internal/_isTransformer');\nvar _reduce = require('./internal/_reduce');\nvar _stepCat = require('./internal/_stepCat');\n\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      var intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nmodule.exports = _curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ?\n    _reduce(xf(acc), acc['@@transducer/init'](), list) :\n    _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/into.js\n// module id = 234\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\nvar keys = require('./keys');\n\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      var raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nmodule.exports = _curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : (out[val] = []);\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/invert.js\n// module id = 235\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar keys = require('./keys');\n\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      var raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      var raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nmodule.exports = _curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/invertObj.js\n// module id = 236\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar empty = require('./empty');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nmodule.exports = _curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/isEmpty.js\n// module id = 237\n// module chunks = 275795115718244","var invoker = require('./invoker');\n\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      var spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nmodule.exports = invoker(1, 'join');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/join.js\n// module id = 238\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nmodule.exports = _curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/keysIn.js\n// module id = 239\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isArray = require('./internal/_isArray');\nvar equals = require('./equals');\n\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nmodule.exports = _curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lastIndexOf.js\n// module id = 240\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar lens = require('./lens');\nvar nth = require('./nth');\nvar update = require('./update');\n\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nmodule.exports = _curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lensIndex.js\n// module id = 241\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar assocPath = require('./assocPath');\nvar lens = require('./lens');\nvar path = require('./path');\n\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nmodule.exports = _curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lensPath.js\n// module id = 242\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar assoc = require('./assoc');\nvar lens = require('./lens');\nvar prop = require('./prop');\n\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nmodule.exports = _curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lensProp.js\n// module id = 243\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lt(a, b) { return a < b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lt.js\n// module id = 244\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nmodule.exports = _curry2(function lte(a, b) { return a <= b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/lte.js\n// module id = 245\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccumRight\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nmodule.exports = _curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mapAccum.js\n// module id = 246\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *value* and *acc*, and should\n * return a tuple *[value, acc]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      var digits = ['1', '2', '3', '4'];\n *      var append = (a, b) => [a + b, a + b];\n *\n *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   [\n *     f(b, f(c, f(d, a)[0])[0])[1],\n *     f(c, f(d, a)[0])[1],\n *     f(d, a)[1],\n *   ]\n *   f(b, f(c, f(d, a)[0])[0])[0],\n * ]\n */\nmodule.exports = _curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(list[idx], tuple[0]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [result, tuple[0]];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mapAccumRight.js\n// module id = 247\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _reduce = require('./internal/_reduce');\nvar keys = require('./keys');\n\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      var values = { x: 1, y: 2, z: 3 };\n *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nmodule.exports = _curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function(acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mapObjIndexed.js\n// module id = 248\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nmodule.exports = _curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/match.js\n// module id = 249\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isInteger = require('./internal/_isInteger');\n\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      var clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      var seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nmodule.exports = _curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) { return NaN; }\n  if (!_isInteger(p) || p < 1) { return NaN; }\n  return ((m % p) + p) % p;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mathMod.js\n// module id = 250\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nmodule.exports = _curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/maxBy.js\n// module id = 251\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar mean = require('./mean');\n\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nmodule.exports = _curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/median.js\n// module id = 252\n// module chunks = 275795115718244","var memoizeWith = require('./memoizeWith');\nvar toString = require('./toString');\n\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @see R.memoizeWith\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoize(n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nmodule.exports = memoizeWith(function() {\n  return toString(arguments);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/memoize.js\n// module id = 253\n// module chunks = 275795115718244","var _assign = require('./internal/_assign');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      var resetToDefault = R.merge(R.__, {x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }\n */\nmodule.exports = _curry2(function merge(l, r) {\n  return _assign({}, l, r);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/merge.js\n// module id = 254\n// module chunks = 275795115718244","var _assign = require('./internal/_assign');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nmodule.exports = _curry1(function mergeAll(list) {\n  return _assign.apply(null, [{}].concat(list));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeAll.js\n// module id = 255\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeDeepLeft.js\n// module id = 256\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nmodule.exports = _curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeDeepRight.js\n// module id = 257\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar mergeDeepWithKey = require('./mergeDeepWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nmodule.exports = _curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function(k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeDeepWith.js\n// module id = 258\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar mergeWithKey = require('./mergeWithKey');\n\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nmodule.exports = _curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function(_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/mergeWith.js\n// module id = 259\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nmodule.exports = _curry2(function min(a, b) { return b < a ? b : a; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/min.js\n// module id = 260\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      var square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nmodule.exports = _curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/minBy.js\n// module id = 261\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      var isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nmodule.exports = _curry2(function modulo(a, b) { return a % b; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/modulo.js\n// module id = 262\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nmodule.exports = _curry1(function negate(n) { return -n; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/negate.js\n// module id = 263\n// module chunks = 275795115718244","var _complement = require('./internal/_complement');\nvar _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xany = require('./internal/_xany');\nvar any = require('./any');\n\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      var isEven = n => n % 2 === 0;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n */\nmodule.exports = _curry2(_complement(_dispatchable(['any'], _xany, any)));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/none.js\n// module id = 264\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar curryN = require('./curryN');\nvar nth = require('./nth');\n\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nmodule.exports = _curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function() {\n    return nth(n, arguments);\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/nthArg.js\n// module id = 265\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      var classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + lastName\n *      var yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nmodule.exports = _curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/o.js\n// module id = 266\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _of = require('./internal/_of');\n\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nmodule.exports = _curry1(_of);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/of.js\n// module id = 267\n// module chunks = 275795115718244","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nmodule.exports = _curry2(function omit(names, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (!_contains(prop, names)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/omit.js\n// module id = 268\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _curry1 = require('./internal/_curry1');\n\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      var addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nmodule.exports = _curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function() {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/once.js\n// module id = 269\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nmodule.exports = _curry2(function pair(fst, snd) { return [fst, snd]; });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pair.js\n// module id = 270\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight\n * @example\n *\n *      var multiply2 = (a, b) => a * b;\n *      var double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var sayHello = R.partial(greet, ['Hello']);\n *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nmodule.exports = _createPartialApplicator(_concat);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/partial.js\n// module id = 271\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _createPartialApplicator = require('./internal/_createPartialApplicator');\nvar flip = require('./flip');\n\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      var greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nmodule.exports = _createPartialApplicator(flip(_concat));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/partialRight.js\n// module id = 272\n// module chunks = 275795115718244","var filter = require('./filter');\nvar juxt = require('./juxt');\nvar reject = require('./reject');\n\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nmodule.exports = juxt([filter, reject]);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/partition.js\n// module id = 273\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\nvar path = require('./path');\n\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      var user1 = { address: { zipCode: 90210 } };\n *      var user2 = { address: { zipCode: 55555 } };\n *      var user3 = { name: 'Bob' };\n *      var users = [ user1, user2, user3 ];\n *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nmodule.exports = _curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pathEq.js\n// module id = 274\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar defaultTo = require('./defaultTo');\nvar path = require('./path');\n\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nmodule.exports = _curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pathOr.js\n// module id = 275\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar path = require('./path');\n\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nmodule.exports = _curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pathSatisfies.js\n// module id = 276\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nmodule.exports = _curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pick.js\n// module id = 277\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nmodule.exports = _curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pickBy.js\n// module id = 278\n// module chunks = 275795115718244","var composeK = require('./composeK');\nvar reverse = require('./reverse');\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      var getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nmodule.exports = function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/pipeK.js\n// module id = 279\n// module chunks = 275795115718244","var multiply = require('./multiply');\nvar reduce = require('./reduce');\n\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nmodule.exports = reduce(multiply, 1);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/product.js\n// module id = 280\n// module chunks = 275795115718244","var _map = require('./internal/_map');\nvar identity = require('./identity');\nvar pickAll = require('./pickAll');\nvar useWith = require('./useWith');\n\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      var kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nmodule.exports = useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/project.js\n// module id = 281\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar equals = require('./equals');\n\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.equals, R.propSatisfies\n * @example\n *\n *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      var kids = [abby, fred, rusty, alois];\n *      var hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nmodule.exports = _curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/propEq.js\n// module id = 282\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar is = require('./is');\n\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nmodule.exports = _curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/propIs.js\n// module id = 283\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar _has = require('./internal/_has');\n\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var favorite = R.prop('favoriteLibrary');\n *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nmodule.exports = _curry3(function propOr(val, p, obj) {\n  return (obj != null && _has(p, obj)) ? obj[p] : val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/propOr.js\n// module id = 284\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nmodule.exports = _curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/propSatisfies.js\n// module id = 285\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nmodule.exports = _curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/props.js\n// module id = 286\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _isNumber = require('./internal/_isNumber');\n\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in tthe set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nmodule.exports = _curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/range.js\n// module id = 287\n// module chunks = 275795115718244","var _curryN = require('./internal/_curryN');\nvar _reduce = require('./internal/_reduce');\nvar _reduced = require('./internal/_reduced');\n\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      var isOdd = (acc, x) => x % 2 === 1;\n *      var xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      var ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nmodule.exports = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function(acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduceWhile.js\n// module id = 288\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _reduced = require('./internal/_reduced');\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is unavailable to functions not explicitly listed\n * above. For instance, it is not currently supported by\n * [`reduceRight`](#reduceRight).\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nmodule.exports = _curry1(_reduced);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/reduced.js\n// module id = 289\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar always = require('./always');\nvar times = require('./times');\n\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      var obj = {};\n *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nmodule.exports = _curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/repeat.js\n// module id = 290\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nmodule.exports = _curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/replace.js\n// module id = 291\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a,b -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nmodule.exports = _curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/scan.js\n// module id = 292\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar always = require('./always');\nvar over = require('./over');\n\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nmodule.exports = _curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/set.js\n// module id = 293\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,a -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      var diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nmodule.exports = _curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/sort.js\n// module id = 294\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      var sortByFirstItem = R.sortBy(R.prop(0));\n *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *      var alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      var bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      var people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nmodule.exports = _curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/sortBy.js\n// module id = 295\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [a -> a -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      var alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      var bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      var clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      var people = [clara, bob, alice];\n *      var ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nmodule.exports = _curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function(a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/sortWith.js\n// module id = 296\n// module chunks = 275795115718244","var invoker = require('./invoker');\n\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      var pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nmodule.exports = invoker(1, 'split');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/split.js\n// module id = 297\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar length = require('./length');\nvar slice = require('./slice');\n\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nmodule.exports = _curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/splitAt.js\n// module id = 298\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar slice = require('./slice');\n\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nmodule.exports = _curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/splitEvery.js\n// module id = 299\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nmodule.exports = _curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/splitWhen.js\n// module id = 300\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar take = require('./take');\n\n/**\n * Checks if a list starts with the provided values\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> Boolean\n * @sig String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nmodule.exports = _curry2(function(prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/startsWith.js\n// module id = 301\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      var minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      var complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nmodule.exports = _curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/subtract.js\n// module id = 302\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar concat = require('./concat');\nvar difference = require('./difference');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nmodule.exports = _curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/symmetricDifference.js\n// module id = 303\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar concat = require('./concat');\nvar differenceWith = require('./differenceWith');\n\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      var eqA = R.eqBy(R.prop('a'));\n *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nmodule.exports = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/symmetricDifferenceWith.js\n// module id = 304\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      var isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n */\nmodule.exports = _curry2(function takeLastWhile(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0 && fn(list[idx])) {\n    idx -= 1;\n  }\n  return Array.prototype.slice.call(list, idx + 1);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/takeLastWhile.js\n// module id = 305\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar _dispatchable = require('./internal/_dispatchable');\nvar _xtakeWhile = require('./internal/_xtakeWhile');\n\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @param {Function} fn The function called per iteration.\n * @param {Array} list The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      var isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n */\nmodule.exports = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len && fn(list[idx])) {\n    idx += 1;\n  }\n  return Array.prototype.slice.call(list, 0, idx);\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/takeWhile.js\n// module id = 306\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      var sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nmodule.exports = _curry2(function tap(fn, x) {\n  fn(x);\n  return x;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/tap.js\n// module id = 307\n// module chunks = 275795115718244","var _cloneRegExp = require('./internal/_cloneRegExp');\nvar _curry2 = require('./internal/_curry2');\nvar _isRegExp = require('./internal/_isRegExp');\nvar toString = require('./toString');\n\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nmodule.exports = _curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/test.js\n// module id = 308\n// module chunks = 275795115718244","var invoker = require('./invoker');\n\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nmodule.exports = invoker(0, 'toLowerCase');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toLower.js\n// module id = 309\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar _has = require('./internal/_has');\n\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nmodule.exports = _curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toPairs.js\n// module id = 310\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nmodule.exports = _curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toPairsIn.js\n// module id = 311\n// module chunks = 275795115718244","var invoker = require('./invoker');\n\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nmodule.exports = invoker(0, 'toUpperCase');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/toUpper.js\n// module id = 312\n// module chunks = 275795115718244","var _reduce = require('./internal/_reduce');\nvar _xwrap = require('./internal/_xwrap');\nvar curryN = require('./curryN');\n\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      var numbers = [1, 2, 3, 4];\n *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      var isOdd = (x) => x % 2 === 1;\n *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nmodule.exports = curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/transduce.js\n// module id = 313\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nmodule.exports = _curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/transpose.js\n// module id = 314\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\nvar map = require('./map');\nvar sequence = require('./sequence');\n\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Nothing` if the given divisor is `0`\n *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n */\nmodule.exports = _curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ?\n    traversable['fantasy-land/traverse'](f, of) :\n    sequence(of, map(f, traversable));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/traverse.js\n// module id = 315\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nmodule.exports = (function() {\n  var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n           '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' +\n           '\\u2029\\uFEFF';\n  var zeroWidth = '\\u200b';\n  var hasProtoTrim = (typeof String.prototype.trim === 'function');\n  if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n    return _curry1(function trim(str) {\n      var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n      var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n      return str.replace(beginRx, '').replace(endRx, '');\n    });\n  } else {\n    return _curry1(function trim(str) {\n      return str.trim();\n    });\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/trim.js\n// module id = 316\n// module chunks = 275795115718244","var _arity = require('./internal/_arity');\nvar _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\n\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n */\nmodule.exports = _curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function() {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/tryCatch.js\n// module id = 317\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nmodule.exports = _curry1(function unapply(fn) {\n  return function() {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unapply.js\n// module id = 318\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\nvar nAry = require('./nAry');\n\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      var takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      var takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nmodule.exports = _curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unary.js\n// module id = 319\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar curryN = require('./curryN');\n\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      var addFour = a => b => c => d => a + b + c + d;\n *\n *      var uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nmodule.exports = _curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function() {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/uncurryN.js\n// module id = 320\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      var f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nmodule.exports = _curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unfold.js\n// module id = 321\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry2 = require('./internal/_curry2');\nvar compose = require('./compose');\nvar uniq = require('./uniq');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nmodule.exports = _curry2(compose(uniq, _concat));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/union.js\n// module id = 322\n// module chunks = 275795115718244","var _concat = require('./internal/_concat');\nvar _curry3 = require('./internal/_curry3');\nvar uniqWith = require('./uniqWith');\n\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      var l1 = [{a: 1}, {a: 2}];\n *      var l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nmodule.exports = _curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unionWith.js\n// module id = 323\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nmodule.exports = _curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unless.js\n// module id = 324\n// module chunks = 275795115718244","var _identity = require('./internal/_identity');\nvar chain = require('./chain');\n\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nmodule.exports = chain(_identity);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/unnest.js\n// module id = 325\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nmodule.exports = _curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/until.js\n// module id = 326\n// module chunks = 275795115718244","var _curry1 = require('./internal/_curry1');\n\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      var F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      var f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nmodule.exports = _curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/valuesIn.js\n// module id = 327\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      var xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nmodule.exports = (function() {\n  // `Const` is a functor that effectively ignores the function given to `map`.\n  var Const = function(x) {\n    return {value: x, 'fantasy-land/map': function() { return this; }};\n  };\n\n  return _curry2(function view(lens, x) {\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    return lens(Const)(x).value;\n  });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/view.js\n// module id = 328\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless\n * @example\n *\n *      // truncate :: String -> String\n *      var truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nmodule.exports = _curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/when.js\n// module id = 329\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\nvar equals = require('./equals');\nvar map = require('./map');\nvar where = require('./where');\n\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      var pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nmodule.exports = _curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/whereEq.js\n// module id = 330\n// module chunks = 275795115718244","var _contains = require('./internal/_contains');\nvar _curry2 = require('./internal/_curry2');\nvar flip = require('./flip');\nvar reject = require('./reject');\n\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nmodule.exports = _curry2(function(xs, list) {\n  return reject(flip(_contains)(xs), list);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/without.js\n// module id = 331\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nmodule.exports = _curry2(function xprod(a, b) { // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/xprod.js\n// module id = 332\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nmodule.exports = _curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/zip.js\n// module id = 333\n// module chunks = 275795115718244","var _curry2 = require('./internal/_curry2');\n\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nmodule.exports = _curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/zipObj.js\n// module id = 334\n// module chunks = 275795115718244","var _curry3 = require('./internal/_curry3');\n\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a,b -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      var f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nmodule.exports = _curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ramda/src/zipWith.js\n// module id = 335\n// module chunks = 275795115718244","/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2017 Juan Cazala - https://caza.la\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE\n * \n * \n * \n * ********************************************************************************************\n *                                   SYNAPTIC (v1.1.4)\n * ********************************************************************************************\n * \n * Synaptic is a javascript neural network library for node.js and the browser, its generalized\n * algorithm is architecture-free, so you can build and train basically any type of first order\n * or even second order neural network architectures.\n * \n * http://en.wikipedia.org/wiki/Recurrent_neural_network#Second_Order_Recurrent_Neural_Network\n * \n * The library includes a few built-in architectures like multilayer perceptrons, multilayer\n * long-short term memory networks (LSTM) or liquid state machines, and a trainer capable of\n * training any given network, and includes built-in training tasks/tests like solving an XOR,\n * passing a Distracted Sequence Recall test or an Embeded Reber Grammar test.\n * \n * The algorithm implemented by this library has been taken from Derek D. Monner's paper:\n * \n * \n * A generalized LSTM-like training algorithm for second-order recurrent neural networks\n * http://www.overcomplete.net/papers/nn2012.pdf\n * \n * There are references to the equations in that paper commented through the source code.\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"synaptic\"] = factory();\n\telse\n\t\troot[\"synaptic\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _LayerConnection = __webpack_require__(6);\n\nvar _LayerConnection2 = _interopRequireDefault(_LayerConnection);\n\nvar _Neuron = __webpack_require__(2);\n\nvar _Neuron2 = _interopRequireDefault(_Neuron);\n\nvar _Network = __webpack_require__(1);\n\nvar _Network2 = _interopRequireDefault(_Network);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// types of connections\nvar connectionType = {\n  ALL_TO_ALL: \"ALL TO ALL\",\n  ONE_TO_ONE: \"ONE TO ONE\",\n  ALL_TO_ELSE: \"ALL TO ELSE\"\n};\n\n// types of gates\nvar gateType = {\n  INPUT: \"INPUT\",\n  OUTPUT: \"OUTPUT\",\n  ONE_TO_ONE: \"ONE TO ONE\"\n};\n\nvar Layer = function () {\n  function Layer(size) {\n    _classCallCheck(this, Layer);\n\n    this.size = size | 0;\n    this.list = [];\n\n    this.connectedTo = [];\n\n    while (size--) {\n      var neuron = new _Neuron2.default();\n      this.list.push(neuron);\n    }\n  }\n\n  // activates all the neurons in the layer\n\n\n  _createClass(Layer, [{\n    key: 'activate',\n    value: function activate(input) {\n\n      var activations = [];\n\n      if (typeof input != 'undefined') {\n        if (input.length != this.size) throw new Error('INPUT size and LAYER size must be the same to activate!');\n\n        for (var id in this.list) {\n          var neuron = this.list[id];\n          var activation = neuron.activate(input[id]);\n          activations.push(activation);\n        }\n      } else {\n        for (var id in this.list) {\n          var neuron = this.list[id];\n          var activation = neuron.activate();\n          activations.push(activation);\n        }\n      }\n      return activations;\n    }\n\n    // propagates the error on all the neurons of the layer\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n\n      if (typeof target != 'undefined') {\n        if (target.length != this.size) throw new Error('TARGET size and LAYER size must be the same to propagate!');\n\n        for (var id = this.list.length - 1; id >= 0; id--) {\n          var neuron = this.list[id];\n          neuron.propagate(rate, target[id]);\n        }\n      } else {\n        for (var id = this.list.length - 1; id >= 0; id--) {\n          var neuron = this.list[id];\n          neuron.propagate(rate);\n        }\n      }\n    }\n\n    // projects a connection from this layer to another one\n\n  }, {\n    key: 'project',\n    value: function project(layer, type, weights) {\n\n      if (layer instanceof _Network2.default) layer = layer.layers.input;\n\n      if (layer instanceof Layer) {\n        if (!this.connected(layer)) return new _LayerConnection2.default(this, layer, type, weights);\n      } else throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n    }\n\n    // gates a connection betwenn two layers\n\n  }, {\n    key: 'gate',\n    value: function gate(connection, type) {\n\n      if (type == Layer.gateType.INPUT) {\n        if (connection.to.size != this.size) throw new Error('GATER layer and CONNECTION.TO layer must be the same size in order to gate!');\n\n        for (var id in connection.to.list) {\n          var neuron = connection.to.list[id];\n          var gater = this.list[id];\n          for (var input in neuron.connections.inputs) {\n            var gated = neuron.connections.inputs[input];\n            if (gated.ID in connection.connections) gater.gate(gated);\n          }\n        }\n      } else if (type == Layer.gateType.OUTPUT) {\n        if (connection.from.size != this.size) throw new Error('GATER layer and CONNECTION.FROM layer must be the same size in order to gate!');\n\n        for (var id in connection.from.list) {\n          var neuron = connection.from.list[id];\n          var gater = this.list[id];\n          for (var projected in neuron.connections.projected) {\n            var gated = neuron.connections.projected[projected];\n            if (gated.ID in connection.connections) gater.gate(gated);\n          }\n        }\n      } else if (type == Layer.gateType.ONE_TO_ONE) {\n        if (connection.size != this.size) throw new Error('The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!');\n\n        for (var id in connection.list) {\n          var gater = this.list[id];\n          var gated = connection.list[id];\n          gater.gate(gated);\n        }\n      }\n      connection.gatedfrom.push({ layer: this, type: type });\n    }\n\n    // true or false whether the whole layer is self-connected or not\n\n  }, {\n    key: 'selfconnected',\n    value: function selfconnected() {\n\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        if (!neuron.selfconnected()) return false;\n      }\n      return true;\n    }\n\n    // true of false whether the layer is connected to another layer (parameter) or not\n\n  }, {\n    key: 'connected',\n    value: function connected(layer) {\n      // Check if ALL to ALL connection\n      var connections = 0;\n      for (var here in this.list) {\n        for (var there in layer.list) {\n          var from = this.list[here];\n          var to = layer.list[there];\n          var connected = from.connected(to);\n          if (connected.type == 'projected') connections++;\n        }\n      }\n      if (connections == this.size * layer.size) return Layer.connectionType.ALL_TO_ALL;\n\n      // Check if ONE to ONE connection\n      connections = 0;\n      for (var neuron in this.list) {\n        var from = this.list[neuron];\n        var to = layer.list[neuron];\n        var connected = from.connected(to);\n        if (connected.type == 'projected') connections++;\n      }\n      if (connections == this.size) return Layer.connectionType.ONE_TO_ONE;\n    }\n\n    // clears all the neuorns in the layer\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        neuron.clear();\n      }\n    }\n\n    // resets all the neurons in the layer\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        neuron.reset();\n      }\n    }\n\n    // returns all the neurons in the layer (array)\n\n  }, {\n    key: 'neurons',\n    value: function neurons() {\n      return this.list;\n    }\n\n    // adds a neuron to the layer\n\n  }, {\n    key: 'add',\n    value: function add(neuron) {\n      neuron = neuron || new _Neuron2.default();\n      this.list.push(neuron);\n      this.size++;\n    }\n  }, {\n    key: 'set',\n    value: function set(options) {\n      options = options || {};\n\n      for (var i in this.list) {\n        var neuron = this.list[i];\n        if (options.label) neuron.label = options.label + '_' + neuron.ID;\n        if (options.squash) neuron.squash = options.squash;\n        if (options.bias) neuron.bias = options.bias;\n      }\n      return this;\n    }\n  }]);\n\n  return Layer;\n}();\n\nLayer.connectionType = connectionType;\nLayer.gateType = gateType;\nexports.default = Layer;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Neuron = __webpack_require__(2);\n\nvar _Neuron2 = _interopRequireDefault(_Neuron);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nvar _Trainer = __webpack_require__(3);\n\nvar _Trainer2 = _interopRequireDefault(_Trainer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Network = function () {\n  function Network(layers) {\n    _classCallCheck(this, Network);\n\n    if (typeof layers != 'undefined') {\n      this.layers = {\n        input: layers.input || null,\n        hidden: layers.hidden || [],\n        output: layers.output || null\n      };\n      this.optimized = null;\n    }\n  }\n\n  // feed-forward activation of all the layers to produce an ouput\n\n\n  _createClass(Network, [{\n    key: 'activate',\n    value: function activate(input) {\n      if (this.optimized === false) {\n        this.layers.input.activate(input);\n        for (var i = 0; i < this.layers.hidden.length; i++) {\n          this.layers.hidden[i].activate();\n        }return this.layers.output.activate();\n      } else {\n        if (this.optimized == null) this.optimize();\n        return this.optimized.activate(input);\n      }\n    }\n\n    // back-propagate the error thru the network\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n      if (this.optimized === false) {\n        this.layers.output.propagate(rate, target);\n        for (var i = this.layers.hidden.length - 1; i >= 0; i--) {\n          this.layers.hidden[i].propagate(rate);\n        }\n      } else {\n        if (this.optimized == null) this.optimize();\n        this.optimized.propagate(rate, target);\n      }\n    }\n\n    // project a connection to another unit (either a network or a layer)\n\n  }, {\n    key: 'project',\n    value: function project(unit, type, weights) {\n      if (this.optimized) this.optimized.reset();\n\n      if (unit instanceof Network) return this.layers.output.project(unit.layers.input, type, weights);\n\n      if (unit instanceof _Layer2.default) return this.layers.output.project(unit, type, weights);\n\n      throw new Error('Invalid argument, you can only project connections to LAYERS and NETWORKS!');\n    }\n\n    // let this network gate a connection\n\n  }, {\n    key: 'gate',\n    value: function gate(connection, type) {\n      if (this.optimized) this.optimized.reset();\n      this.layers.output.gate(connection, type);\n    }\n\n    // clear all elegibility traces and extended elegibility traces (the network forgets its context, but not what was trained)\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.restore();\n\n      var inputLayer = this.layers.input,\n          outputLayer = this.layers.output;\n\n      inputLayer.clear();\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        this.layers.hidden[i].clear();\n      }\n      outputLayer.clear();\n\n      if (this.optimized) this.optimized.reset();\n    }\n\n    // reset all weights and clear all traces (ends up like a new network)\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.restore();\n\n      var inputLayer = this.layers.input,\n          outputLayer = this.layers.output;\n\n      inputLayer.reset();\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        this.layers.hidden[i].reset();\n      }\n      outputLayer.reset();\n\n      if (this.optimized) this.optimized.reset();\n    }\n\n    // hardcodes the behaviour of the whole network into a single optimized function\n\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      var that = this;\n      var optimized = {};\n      var neurons = this.neurons();\n\n      for (var i = 0; i < neurons.length; i++) {\n        var neuron = neurons[i].neuron;\n        var layer = neurons[i].layer;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }optimized = neuron.optimize(optimized, layer);\n      }\n\n      for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n        optimized.propagation_sentences[i].reverse();\n      }optimized.propagation_sentences.reverse();\n\n      var hardcode = '';\n      hardcode += 'var F = Float64Array ? new Float64Array(' + optimized.memory + ') : []; ';\n      for (var i in optimized.variables) {\n        hardcode += 'F[' + optimized.variables[i].id + '] = ' + (optimized.variables[i].value || 0) + '; ';\n      }hardcode += 'var activate = function(input){\\n';\n      for (var i = 0; i < optimized.inputs.length; i++) {\n        hardcode += 'F[' + optimized.inputs[i] + '] = input[' + i + ']; ';\n      }for (var i = 0; i < optimized.activation_sentences.length; i++) {\n        if (optimized.activation_sentences[i].length > 0) {\n          for (var j = 0; j < optimized.activation_sentences[i].length; j++) {\n            hardcode += optimized.activation_sentences[i][j].join(' ');\n            hardcode += optimized.trace_sentences[i][j].join(' ');\n          }\n        }\n      }\n      hardcode += ' var output = []; ';\n      for (var i = 0; i < optimized.outputs.length; i++) {\n        hardcode += 'output[' + i + '] = F[' + optimized.outputs[i] + ']; ';\n      }hardcode += 'return output; }; ';\n      hardcode += 'var propagate = function(rate, target){\\n';\n      hardcode += 'F[' + optimized.variables.rate.id + '] = rate; ';\n      for (var i = 0; i < optimized.targets.length; i++) {\n        hardcode += 'F[' + optimized.targets[i] + '] = target[' + i + ']; ';\n      }for (var i = 0; i < optimized.propagation_sentences.length; i++) {\n        for (var j = 0; j < optimized.propagation_sentences[i].length; j++) {\n          hardcode += optimized.propagation_sentences[i][j].join(' ') + ' ';\n        }\n      }hardcode += ' };\\n';\n      hardcode += 'var ownership = function(memoryBuffer){\\nF = memoryBuffer;\\nthis.memory = F;\\n};\\n';\n      hardcode += 'return {\\nmemory: F,\\nactivate: activate,\\npropagate: propagate,\\nownership: ownership\\n};';\n      hardcode = hardcode.split(';').join(';\\n');\n\n      var constructor = new Function(hardcode);\n\n      var network = constructor();\n      network.data = {\n        variables: optimized.variables,\n        activate: optimized.activation_sentences,\n        propagate: optimized.propagation_sentences,\n        trace: optimized.trace_sentences,\n        inputs: optimized.inputs,\n        outputs: optimized.outputs,\n        check_activation: this.activate,\n        check_propagation: this.propagate\n      };\n\n      network.reset = function () {\n        if (that.optimized) {\n          that.optimized = null;\n          that.activate = network.data.check_activation;\n          that.propagate = network.data.check_propagation;\n        }\n      };\n\n      this.optimized = network;\n      this.activate = network.activate;\n      this.propagate = network.propagate;\n    }\n\n    // restores all the values from the optimized network the their respective objects in order to manipulate the network\n\n  }, {\n    key: 'restore',\n    value: function restore() {\n      if (!this.optimized) return;\n\n      var optimized = this.optimized;\n\n      var getValue = function getValue() {\n        var args = Array.prototype.slice.call(arguments);\n\n        var unit = args.shift();\n        var prop = args.pop();\n\n        var id = prop + '_';\n        for (var property in args) {\n          id += args[property] + '_';\n        }id += unit.ID;\n\n        var memory = optimized.memory;\n        var variables = optimized.data.variables;\n\n        if (id in variables) return memory[variables[id].id];\n        return 0;\n      };\n\n      var list = this.neurons();\n\n      // link id's to positions in the array\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }neuron.state = getValue(neuron, 'state');\n        neuron.old = getValue(neuron, 'old');\n        neuron.activation = getValue(neuron, 'activation');\n        neuron.bias = getValue(neuron, 'bias');\n\n        for (var input in neuron.trace.elegibility) {\n          neuron.trace.elegibility[input] = getValue(neuron, 'trace', 'elegibility', input);\n        }for (var gated in neuron.trace.extended) {\n          for (var input in neuron.trace.extended[gated]) {\n            neuron.trace.extended[gated][input] = getValue(neuron, 'trace', 'extended', gated, input);\n          }\n        } // get connections\n        for (var j in neuron.connections.projected) {\n          var connection = neuron.connections.projected[j];\n          connection.weight = getValue(connection, 'weight');\n          connection.gain = getValue(connection, 'gain');\n        }\n      }\n    }\n\n    // returns all the neurons in the network\n\n  }, {\n    key: 'neurons',\n    value: function neurons() {\n      var neurons = [];\n\n      var inputLayer = this.layers.input.neurons(),\n          outputLayer = this.layers.output.neurons();\n\n      for (var i = 0; i < inputLayer.length; i++) {\n        neurons.push({\n          neuron: inputLayer[i],\n          layer: 'input'\n        });\n      }\n\n      for (var i = 0; i < this.layers.hidden.length; i++) {\n        var hiddenLayer = this.layers.hidden[i].neurons();\n        for (var j = 0; j < hiddenLayer.length; j++) {\n          neurons.push({\n            neuron: hiddenLayer[j],\n            layer: i\n          });\n        }\n      }\n\n      for (var i = 0; i < outputLayer.length; i++) {\n        neurons.push({\n          neuron: outputLayer[i],\n          layer: 'output'\n        });\n      }\n\n      return neurons;\n    }\n\n    // returns number of inputs of the network\n\n  }, {\n    key: 'inputs',\n    value: function inputs() {\n      return this.layers.input.size;\n    }\n\n    // returns number of outputs of hte network\n\n  }, {\n    key: 'outputs',\n    value: function outputs() {\n      return this.layers.output.size;\n    }\n\n    // sets the layers of the network\n\n  }, {\n    key: 'set',\n    value: function set(layers) {\n      this.layers = {\n        input: layers.input || null,\n        hidden: layers.hidden || [],\n        output: layers.output || null\n      };\n      if (this.optimized) this.optimized.reset();\n    }\n  }, {\n    key: 'setOptimize',\n    value: function setOptimize(bool) {\n      this.restore();\n      if (this.optimized) this.optimized.reset();\n      this.optimized = bool ? null : false;\n    }\n\n    // returns a json that represents all the neurons and connections of the network\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON(ignoreTraces) {\n      this.restore();\n\n      var list = this.neurons();\n      var neurons = [];\n      var connections = [];\n\n      // link id's to positions in the array\n      var ids = {};\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }ids[neuron.ID] = i;\n\n        var copy = {\n          trace: {\n            elegibility: {},\n            extended: {}\n          },\n          state: neuron.state,\n          old: neuron.old,\n          activation: neuron.activation,\n          bias: neuron.bias,\n          layer: list[i].layer\n        };\n\n        copy.squash = neuron.squash == _Neuron2.default.squash.LOGISTIC ? 'LOGISTIC' : neuron.squash == _Neuron2.default.squash.TANH ? 'TANH' : neuron.squash == _Neuron2.default.squash.IDENTITY ? 'IDENTITY' : neuron.squash == _Neuron2.default.squash.HLIM ? 'HLIM' : neuron.squash == _Neuron2.default.squash.RELU ? 'RELU' : null;\n\n        neurons.push(copy);\n      }\n\n      for (var i = 0; i < list.length; i++) {\n        var neuron = list[i].neuron;\n        while (neuron.neuron) {\n          neuron = neuron.neuron;\n        }for (var j in neuron.connections.projected) {\n          var connection = neuron.connections.projected[j];\n          connections.push({\n            from: ids[connection.from.ID],\n            to: ids[connection.to.ID],\n            weight: connection.weight,\n            gater: connection.gater ? ids[connection.gater.ID] : null\n          });\n        }\n        if (neuron.selfconnected()) {\n          connections.push({\n            from: ids[neuron.ID],\n            to: ids[neuron.ID],\n            weight: neuron.selfconnection.weight,\n            gater: neuron.selfconnection.gater ? ids[neuron.selfconnection.gater.ID] : null\n          });\n        }\n      }\n\n      return {\n        neurons: neurons,\n        connections: connections\n      };\n    }\n\n    // export the topology into dot language which can be visualized as graphs using dot\n    /* example: ... console.log(net.toDotLang());\n                $ node example.js > example.dot\n                $ dot example.dot -Tpng > out.png\n    */\n\n  }, {\n    key: 'toDot',\n    value: function toDot(edgeConnection) {\n      if (!(typeof edgeConnection === 'undefined' ? 'undefined' : _typeof(edgeConnection))) edgeConnection = false;\n      var code = 'digraph nn {\\n    rankdir = BT\\n';\n      var layers = [this.layers.input].concat(this.layers.hidden, this.layers.output);\n      for (var i = 0; i < layers.length; i++) {\n        for (var j = 0; j < layers[i].connectedTo.length; j++) {\n          // projections\n          var connection = layers[i].connectedTo[j];\n          var layerTo = connection.to;\n          var size = connection.size;\n          var layerID = layers.indexOf(layers[i]);\n          var layerToID = layers.indexOf(layerTo);\n          /* http://stackoverflow.com/questions/26845540/connect-edges-with-graph-dot\n           * DOT does not support edge-to-edge connections\n           * This workaround produces somewhat weird graphs ...\n          */\n          if (edgeConnection) {\n            if (connection.gatedfrom.length) {\n              var fakeNode = 'fake' + layerID + '_' + layerToID;\n              code += '    ' + fakeNode + ' [label = \"\", shape = point, width = 0.01, height = 0.01]\\n';\n              code += '    ' + layerID + ' -> ' + fakeNode + ' [label = ' + size + ', arrowhead = none]\\n';\n              code += '    ' + fakeNode + ' -> ' + layerToID + '\\n';\n            } else code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n            for (var from in connection.gatedfrom) {\n              // gatings\n              var layerfrom = connection.gatedfrom[from].layer;\n              var layerfromID = layers.indexOf(layerfrom);\n              code += '    ' + layerfromID + ' -> ' + fakeNode + ' [color = blue]\\n';\n            }\n          } else {\n            code += '    ' + layerID + ' -> ' + layerToID + ' [label = ' + size + ']\\n';\n            for (var from in connection.gatedfrom) {\n              // gatings\n              var layerfrom = connection.gatedfrom[from].layer;\n              var layerfromID = layers.indexOf(layerfrom);\n              code += '    ' + layerfromID + ' -> ' + layerToID + ' [color = blue]\\n';\n            }\n          }\n        }\n      }\n      code += '}\\n';\n      return {\n        code: code,\n        link: 'https://chart.googleapis.com/chart?chl=' + escape(code.replace('/ /g', '+')) + '&cht=gv'\n      };\n    }\n\n    // returns a function that works as the activation of the network and can be used without depending on the library\n\n  }, {\n    key: 'standalone',\n    value: function standalone() {\n      if (!this.optimized) this.optimize();\n\n      var data = this.optimized.data;\n\n      // build activation function\n      var activation = 'function (input) {\\n';\n\n      // build inputs\n      for (var i = 0; i < data.inputs.length; i++) {\n        activation += 'F[' + data.inputs[i] + '] = input[' + i + '];\\n';\n      } // build network activation\n      for (var i = 0; i < data.activate.length; i++) {\n        // shouldn't this be layer?\n        for (var j = 0; j < data.activate[i].length; j++) {\n          activation += data.activate[i][j].join('') + '\\n';\n        }\n      }\n\n      // build outputs\n      activation += 'var output = [];\\n';\n      for (var i = 0; i < data.outputs.length; i++) {\n        activation += 'output[' + i + '] = F[' + data.outputs[i] + '];\\n';\n      }activation += 'return output;\\n}';\n\n      // reference all the positions in memory\n      var memory = activation.match(/F\\[(\\d+)\\]/g);\n      var dimension = 0;\n      var ids = {};\n\n      for (var i = 0; i < memory.length; i++) {\n        var tmp = memory[i].match(/\\d+/)[0];\n        if (!(tmp in ids)) {\n          ids[tmp] = dimension++;\n        }\n      }\n      var hardcode = 'F = {\\n';\n\n      for (var i in ids) {\n        hardcode += ids[i] + ': ' + this.optimized.memory[i] + ',\\n';\n      }hardcode = hardcode.substring(0, hardcode.length - 2) + '\\n};\\n';\n      hardcode = 'var run = ' + activation.replace(/F\\[(\\d+)]/g, function (index) {\n        return 'F[' + ids[index.match(/\\d+/)[0]] + ']';\n      }).replace('{\\n', '{\\n' + hardcode + '') + ';\\n';\n      hardcode += 'return run';\n\n      // return standalone function\n      return new Function(hardcode)();\n    }\n\n    // Return a HTML5 WebWorker specialized on training the network stored in `memory`.\n    // Train based on the given dataSet and options.\n    // The worker returns the updated `memory` when done.\n\n  }, {\n    key: 'worker',\n    value: function worker(memory, set, options) {\n      // Copy the options and set defaults (options might be different for each worker)\n      var workerOptions = {};\n      if (options) workerOptions = options;\n      workerOptions.rate = workerOptions.rate || .2;\n      workerOptions.iterations = workerOptions.iterations || 100000;\n      workerOptions.error = workerOptions.error || .005;\n      workerOptions.cost = workerOptions.cost || null;\n      workerOptions.crossValidate = workerOptions.crossValidate || null;\n\n      // Cost function might be different for each worker\n      var costFunction = '// REPLACED BY WORKER\\nvar cost = ' + (options && options.cost || this.cost || _Trainer2.default.cost.MSE) + ';\\n';\n      var workerFunction = Network.getWorkerSharedFunctions();\n      workerFunction = workerFunction.replace(/var cost = options && options\\.cost \\|\\| this\\.cost \\|\\| Trainer\\.cost\\.MSE;/g, costFunction);\n\n      // Set what we do when training is finished\n      workerFunction = workerFunction.replace('return results;', 'postMessage({action: \"done\", message: results, memoryBuffer: F}, [F.buffer]);');\n\n      // Replace log with postmessage\n      workerFunction = workerFunction.replace('console.log(\\'iterations\\', iterations, \\'error\\', error, \\'rate\\', currentRate)', 'postMessage({action: \\'log\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\n      // Replace schedule with postmessage\n      workerFunction = workerFunction.replace('abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate })', 'postMessage({action: \\'schedule\\', message: {\\n' + 'iterations: iterations,\\n' + 'error: error,\\n' + 'rate: currentRate\\n' + '}\\n' + '})');\n\n      if (!this.optimized) this.optimize();\n\n      var hardcode = 'var inputs = ' + this.optimized.data.inputs.length + ';\\n';\n      hardcode += 'var outputs = ' + this.optimized.data.outputs.length + ';\\n';\n      hardcode += 'var F =  new Float64Array([' + this.optimized.memory.toString() + ']);\\n';\n      hardcode += 'var activate = ' + this.optimized.activate.toString() + ';\\n';\n      hardcode += 'var propagate = ' + this.optimized.propagate.toString() + ';\\n';\n      hardcode += 'onmessage = function(e) {\\n' + 'if (e.data.action == \\'startTraining\\') {\\n' + 'train(' + JSON.stringify(set) + ',' + JSON.stringify(workerOptions) + ');\\n' + '}\\n' + '}';\n\n      var workerSourceCode = workerFunction + '\\n' + hardcode;\n      var blob = new Blob([workerSourceCode]);\n      var blobURL = window.URL.createObjectURL(blob);\n\n      return new Worker(blobURL);\n    }\n\n    // returns a copy of the network\n\n  }, {\n    key: 'clone',\n    value: function clone() {\n      return Network.fromJSON(this.toJSON());\n    }\n\n    /**\n     * Creates a static String to store the source code of the functions\n     *  that are identical for all the workers (train, _trainSet, test)\n     *\n     * @return {String} Source code that can train a network inside a worker.\n     * @static\n     */\n\n  }], [{\n    key: 'getWorkerSharedFunctions',\n    value: function getWorkerSharedFunctions() {\n      // If we already computed the source code for the shared functions\n      if (typeof Network._SHARED_WORKER_FUNCTIONS !== 'undefined') return Network._SHARED_WORKER_FUNCTIONS;\n\n      // Otherwise compute and return the source code\n      // We compute them by simply copying the source code of the train, _trainSet and test functions\n      //  using the .toString() method\n\n      // Load and name the train function\n      var train_f = _Trainer2.default.prototype.train.toString();\n      train_f = train_f.replace(/this._trainSet/g, '_trainSet');\n      train_f = train_f.replace(/this.test/g, 'test');\n      train_f = train_f.replace(/this.crossValidate/g, 'crossValidate');\n      train_f = train_f.replace('crossValidate = true', '// REMOVED BY WORKER');\n\n      // Load and name the _trainSet function\n      var _trainSet_f = _Trainer2.default.prototype._trainSet.toString().replace(/this.network./g, '');\n\n      // Load and name the test function\n      var test_f = _Trainer2.default.prototype.test.toString().replace(/this.network./g, '');\n\n      return Network._SHARED_WORKER_FUNCTIONS = train_f + '\\n' + _trainSet_f + '\\n' + test_f;\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var neurons = [];\n\n      var layers = {\n        input: new _Layer2.default(),\n        hidden: [],\n        output: new _Layer2.default()\n      };\n\n      for (var i = 0; i < json.neurons.length; i++) {\n        var config = json.neurons[i];\n\n        var neuron = new _Neuron2.default();\n        neuron.trace.elegibility = {};\n        neuron.trace.extended = {};\n        neuron.state = config.state;\n        neuron.old = config.old;\n        neuron.activation = config.activation;\n        neuron.bias = config.bias;\n        neuron.squash = config.squash in _Neuron2.default.squash ? _Neuron2.default.squash[config.squash] : _Neuron2.default.squash.LOGISTIC;\n        neurons.push(neuron);\n\n        if (config.layer == 'input') layers.input.add(neuron);else if (config.layer == 'output') layers.output.add(neuron);else {\n          if (typeof layers.hidden[config.layer] == 'undefined') layers.hidden[config.layer] = new _Layer2.default();\n          layers.hidden[config.layer].add(neuron);\n        }\n      }\n\n      for (var i = 0; i < json.connections.length; i++) {\n        var config = json.connections[i];\n        var from = neurons[config.from];\n        var to = neurons[config.to];\n        var weight = config.weight;\n        var gater = neurons[config.gater];\n\n        var connection = from.project(to, weight);\n        if (gater) gater.gate(connection);\n      }\n\n      return new Network(layers);\n    }\n  }]);\n\n  return Network;\n}();\n\nexports.default = Network;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Connection = __webpack_require__(5);\n\nvar _Connection2 = _interopRequireDefault(_Connection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar neurons = 0;\n\n// squashing functions\nvar squash = {\n  // eq. 5 & 5'\n  LOGISTIC: function LOGISTIC(x, derivate) {\n    var fx = 1 / (1 + Math.exp(-x));\n    if (!derivate) return fx;\n    return fx * (1 - fx);\n  },\n  TANH: function TANH(x, derivate) {\n    if (derivate) return 1 - Math.pow(Math.tanh(x), 2);\n    return Math.tanh(x);\n  },\n  IDENTITY: function IDENTITY(x, derivate) {\n    return derivate ? 1 : x;\n  },\n  HLIM: function HLIM(x, derivate) {\n    return derivate ? 1 : x > 0 ? 1 : 0;\n  },\n  RELU: function RELU(x, derivate) {\n    if (derivate) return x > 0 ? 1 : 0;\n    return x > 0 ? x : 0;\n  }\n};\n\nvar Neuron = function () {\n  function Neuron() {\n    _classCallCheck(this, Neuron);\n\n    this.ID = Neuron.uid();\n\n    this.connections = {\n      inputs: {},\n      projected: {},\n      gated: {}\n    };\n    this.error = {\n      responsibility: 0,\n      projected: 0,\n      gated: 0\n    };\n    this.trace = {\n      elegibility: {},\n      extended: {},\n      influences: {}\n    };\n    this.state = 0;\n    this.old = 0;\n    this.activation = 0;\n    this.selfconnection = new _Connection2.default(this, this, 0); // weight = 0 -> not connected\n    this.squash = Neuron.squash.LOGISTIC;\n    this.neighboors = {};\n    this.bias = Math.random() * .2 - .1;\n  }\n\n  // activate the neuron\n\n\n  _createClass(Neuron, [{\n    key: 'activate',\n    value: function activate(input) {\n      // activation from enviroment (for input neurons)\n      if (typeof input != 'undefined') {\n        this.activation = input;\n        this.derivative = 0;\n        this.bias = 0;\n        return this.activation;\n      }\n\n      // old state\n      this.old = this.state;\n\n      // eq. 15\n      this.state = this.selfconnection.gain * this.selfconnection.weight * this.state + this.bias;\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        this.state += input.from.activation * input.weight * input.gain;\n      }\n\n      // eq. 16\n      this.activation = this.squash(this.state);\n\n      // f'(s)\n      this.derivative = this.squash(this.state, true);\n\n      // update traces\n      var influences = [];\n      for (var id in this.trace.extended) {\n        // extended elegibility trace\n        var neuron = this.neighboors[id];\n\n        // if gated neuron's selfconnection is gated by this unit, the influence keeps track of the neuron's old state\n        var influence = neuron.selfconnection.gater == this ? neuron.old : 0;\n\n        // index runs over all the incoming connections to the gated neuron that are gated by this unit\n        for (var incoming in this.trace.influences[neuron.ID]) {\n          // captures the effect that has an input connection to this unit, on a neuron that is gated by this unit\n          influence += this.trace.influences[neuron.ID][incoming].weight * this.trace.influences[neuron.ID][incoming].from.activation;\n        }\n        influences[neuron.ID] = influence;\n      }\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n\n        // elegibility trace - Eq. 17\n        this.trace.elegibility[input.ID] = this.selfconnection.gain * this.selfconnection.weight * this.trace.elegibility[input.ID] + input.gain * input.from.activation;\n\n        for (var id in this.trace.extended) {\n          // extended elegibility trace\n          var xtrace = this.trace.extended[id];\n          var neuron = this.neighboors[id];\n          var influence = influences[neuron.ID];\n\n          // eq. 18\n          xtrace[input.ID] = neuron.selfconnection.gain * neuron.selfconnection.weight * xtrace[input.ID] + this.derivative * this.trace.elegibility[input.ID] * influence;\n        }\n      }\n\n      //  update gated connection's gains\n      for (var connection in this.connections.gated) {\n        this.connections.gated[connection].gain = this.activation;\n      }\n\n      return this.activation;\n    }\n\n    // back-propagate the error\n\n  }, {\n    key: 'propagate',\n    value: function propagate(rate, target) {\n      // error accumulator\n      var error = 0;\n\n      // whether or not this neuron is in the output layer\n      var isOutput = typeof target != 'undefined';\n\n      // output neurons get their error from the enviroment\n      if (isOutput) this.error.responsibility = this.error.projected = target - this.activation; // Eq. 10\n\n      else // the rest of the neuron compute their error responsibilities by backpropagation\n        {\n          // error responsibilities from all the connections projected from this neuron\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            // Eq. 21\n            error += neuron.error.responsibility * connection.gain * connection.weight;\n          }\n\n          // projected error responsibility\n          this.error.projected = this.derivative * error;\n\n          error = 0;\n          // error responsibilities from all the connections gated by this neuron\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id]; // gated neuron\n            var influence = neuron.selfconnection.gater == this ? neuron.old : 0; // if gated neuron's selfconnection is gated by this neuron\n\n            // index runs over all the connections to the gated neuron that are gated by this neuron\n            for (var input in this.trace.influences[id]) {\n              // captures the effect that the input connection of this neuron have, on a neuron which its input/s is/are gated by this neuron\n              influence += this.trace.influences[id][input].weight * this.trace.influences[neuron.ID][input].from.activation;\n            }\n            // eq. 22\n            error += neuron.error.responsibility * influence;\n          }\n\n          // gated error responsibility\n          this.error.gated = this.derivative * error;\n\n          // error responsibility - Eq. 23\n          this.error.responsibility = this.error.projected + this.error.gated;\n        }\n\n      // learning rate\n      rate = rate || .1;\n\n      // adjust all the neuron's incoming connections\n      for (var id in this.connections.inputs) {\n        var input = this.connections.inputs[id];\n\n        // Eq. 24\n        var gradient = this.error.projected * this.trace.elegibility[input.ID];\n        for (var id in this.trace.extended) {\n          var neuron = this.neighboors[id];\n          gradient += neuron.error.responsibility * this.trace.extended[neuron.ID][input.ID];\n        }\n        input.weight += rate * gradient; // adjust weights - aka learn\n      }\n\n      // adjust bias\n      this.bias += rate * this.error.responsibility;\n    }\n  }, {\n    key: 'project',\n    value: function project(neuron, weight) {\n      // self-connection\n      if (neuron == this) {\n        this.selfconnection.weight = 1;\n        return this.selfconnection;\n      }\n\n      // check if connection already exists\n      var connected = this.connected(neuron);\n      if (connected && connected.type == 'projected') {\n        // update connection\n        if (typeof weight != 'undefined') connected.connection.weight = weight;\n        // return existing connection\n        return connected.connection;\n      } else {\n        // create a new connection\n        var connection = new _Connection2.default(this, neuron, weight);\n      }\n\n      // reference all the connections and traces\n      this.connections.projected[connection.ID] = connection;\n      this.neighboors[neuron.ID] = neuron;\n      neuron.connections.inputs[connection.ID] = connection;\n      neuron.trace.elegibility[connection.ID] = 0;\n\n      for (var id in neuron.trace.extended) {\n        var trace = neuron.trace.extended[id];\n        trace[connection.ID] = 0;\n      }\n\n      return connection;\n    }\n  }, {\n    key: 'gate',\n    value: function gate(connection) {\n      // add connection to gated list\n      this.connections.gated[connection.ID] = connection;\n\n      var neuron = connection.to;\n      if (!(neuron.ID in this.trace.extended)) {\n        // extended trace\n        this.neighboors[neuron.ID] = neuron;\n        var xtrace = this.trace.extended[neuron.ID] = {};\n        for (var id in this.connections.inputs) {\n          var input = this.connections.inputs[id];\n          xtrace[input.ID] = 0;\n        }\n      }\n\n      // keep track\n      if (neuron.ID in this.trace.influences) this.trace.influences[neuron.ID].push(connection);else this.trace.influences[neuron.ID] = [connection];\n\n      // set gater\n      connection.gater = this;\n    }\n\n    // returns true or false whether the neuron is self-connected or not\n\n  }, {\n    key: 'selfconnected',\n    value: function selfconnected() {\n      return this.selfconnection.weight !== 0;\n    }\n\n    // returns true or false whether the neuron is connected to another neuron (parameter)\n\n  }, {\n    key: 'connected',\n    value: function connected(neuron) {\n      var result = {\n        type: null,\n        connection: false\n      };\n\n      if (this == neuron) {\n        if (this.selfconnected()) {\n          result.type = 'selfconnection';\n          result.connection = this.selfconnection;\n          return result;\n        } else return false;\n      }\n\n      for (var type in this.connections) {\n        for (var connection in this.connections[type]) {\n          var connection = this.connections[type][connection];\n          if (connection.to == neuron) {\n            result.type = type;\n            result.connection = connection;\n            return result;\n          } else if (connection.from == neuron) {\n            result.type = type;\n            result.connection = connection;\n            return result;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    // clears all the traces (the neuron forgets it's context, but the connections remain intact)\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      for (var trace in this.trace.elegibility) {\n        this.trace.elegibility[trace] = 0;\n      }\n\n      for (var trace in this.trace.extended) {\n        for (var extended in this.trace.extended[trace]) {\n          this.trace.extended[trace][extended] = 0;\n        }\n      }\n\n      this.error.responsibility = this.error.projected = this.error.gated = 0;\n    }\n\n    // all the connections are randomized and the traces are cleared\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.clear();\n\n      for (var type in this.connections) {\n        for (var connection in this.connections[type]) {\n          this.connections[type][connection].weight = Math.random() * .2 - .1;\n        }\n      }\n\n      this.bias = Math.random() * .2 - .1;\n      this.old = this.state = this.activation = 0;\n    }\n\n    // hardcodes the behaviour of the neuron into an optimized function\n\n  }, {\n    key: 'optimize',\n    value: function optimize(optimized, layer) {\n\n      optimized = optimized || {};\n      var store_activation = [];\n      var store_trace = [];\n      var store_propagation = [];\n      var varID = optimized.memory || 0;\n      var neurons = optimized.neurons || 1;\n      var inputs = optimized.inputs || [];\n      var targets = optimized.targets || [];\n      var outputs = optimized.outputs || [];\n      var variables = optimized.variables || {};\n      var activation_sentences = optimized.activation_sentences || [];\n      var trace_sentences = optimized.trace_sentences || [];\n      var propagation_sentences = optimized.propagation_sentences || [];\n      var layers = optimized.layers || { __count: 0, __neuron: 0 };\n\n      // allocate sentences\n      var allocate = function allocate(store) {\n        var allocated = layer in layers && store[layers.__count];\n        if (!allocated) {\n          layers.__count = store.push([]) - 1;\n          layers[layer] = layers.__count;\n        }\n      };\n      allocate(activation_sentences);\n      allocate(trace_sentences);\n      allocate(propagation_sentences);\n      var currentLayer = layers.__count;\n\n      // get/reserve space in memory by creating a unique ID for a variablel\n      var getVar = function getVar() {\n        var args = Array.prototype.slice.call(arguments);\n\n        if (args.length == 1) {\n          if (args[0] == 'target') {\n            var id = 'target_' + targets.length;\n            targets.push(varID);\n          } else var id = args[0];\n          if (id in variables) return variables[id];\n          return variables[id] = {\n            value: 0,\n            id: varID++\n          };\n        } else {\n          var extended = args.length > 2;\n          if (extended) var value = args.pop();\n\n          var unit = args.shift();\n          var prop = args.pop();\n\n          if (!extended) var value = unit[prop];\n\n          var id = prop + '_';\n          for (var i = 0; i < args.length; i++) {\n            id += args[i] + '_';\n          }id += unit.ID;\n          if (id in variables) return variables[id];\n\n          return variables[id] = {\n            value: value,\n            id: varID++\n          };\n        }\n      };\n\n      // build sentence\n      var buildSentence = function buildSentence() {\n        var args = Array.prototype.slice.call(arguments);\n        var store = args.pop();\n        var sentence = '';\n        for (var i = 0; i < args.length; i++) {\n          if (typeof args[i] == 'string') sentence += args[i];else sentence += 'F[' + args[i].id + ']';\n        }store.push(sentence + ';');\n      };\n\n      // helper to check if an object is empty\n      var isEmpty = function isEmpty(obj) {\n        for (var prop in obj) {\n          if (obj.hasOwnProperty(prop)) return false;\n        }\n        return true;\n      };\n\n      // characteristics of the neuron\n      var noProjections = isEmpty(this.connections.projected);\n      var noGates = isEmpty(this.connections.gated);\n      var isInput = layer == 'input' ? true : isEmpty(this.connections.inputs);\n      var isOutput = layer == 'output' ? true : noProjections && noGates;\n\n      // optimize neuron's behaviour\n      var rate = getVar('rate');\n      var activation = getVar(this, 'activation');\n      if (isInput) inputs.push(activation.id);else {\n        activation_sentences[currentLayer].push(store_activation);\n        trace_sentences[currentLayer].push(store_trace);\n        propagation_sentences[currentLayer].push(store_propagation);\n        var old = getVar(this, 'old');\n        var state = getVar(this, 'state');\n        var bias = getVar(this, 'bias');\n        if (this.selfconnection.gater) var self_gain = getVar(this.selfconnection, 'gain');\n        if (this.selfconnected()) var self_weight = getVar(this.selfconnection, 'weight');\n        buildSentence(old, ' = ', state, store_activation);\n        if (this.selfconnected()) {\n          if (this.selfconnection.gater) buildSentence(state, ' = ', self_gain, ' * ', self_weight, ' * ', state, ' + ', bias, store_activation);else buildSentence(state, ' = ', self_weight, ' * ', state, ' + ', bias, store_activation);\n        } else buildSentence(state, ' = ', bias, store_activation);\n        for (var i in this.connections.inputs) {\n          var input = this.connections.inputs[i];\n          var input_activation = getVar(input.from, 'activation');\n          var input_weight = getVar(input, 'weight');\n          if (input.gater) var input_gain = getVar(input, 'gain');\n          if (this.connections.inputs[i].gater) buildSentence(state, ' += ', input_activation, ' * ', input_weight, ' * ', input_gain, store_activation);else buildSentence(state, ' += ', input_activation, ' * ', input_weight, store_activation);\n        }\n        var derivative = getVar(this, 'derivative');\n        switch (this.squash) {\n          case Neuron.squash.LOGISTIC:\n            buildSentence(activation, ' = (1 / (1 + Math.exp(-', state, ')))', store_activation);\n            buildSentence(derivative, ' = ', activation, ' * (1 - ', activation, ')', store_activation);\n            break;\n          case Neuron.squash.TANH:\n            var eP = getVar('aux');\n            var eN = getVar('aux_2');\n            buildSentence(eP, ' = Math.exp(', state, ')', store_activation);\n            buildSentence(eN, ' = 1 / ', eP, store_activation);\n            buildSentence(activation, ' = (', eP, ' - ', eN, ') / (', eP, ' + ', eN, ')', store_activation);\n            buildSentence(derivative, ' = 1 - (', activation, ' * ', activation, ')', store_activation);\n            break;\n          case Neuron.squash.IDENTITY:\n            buildSentence(activation, ' = ', state, store_activation);\n            buildSentence(derivative, ' = 1', store_activation);\n            break;\n          case Neuron.squash.HLIM:\n            buildSentence(activation, ' = +(', state, ' > 0)', store_activation);\n            buildSentence(derivative, ' = 1', store_activation);\n            break;\n          case Neuron.squash.RELU:\n            buildSentence(activation, ' = ', state, ' > 0 ? ', state, ' : 0', store_activation);\n            buildSentence(derivative, ' = ', state, ' > 0 ? 1 : 0', store_activation);\n            break;\n        }\n\n        for (var id in this.trace.extended) {\n          // calculate extended elegibility traces in advance\n          var neuron = this.neighboors[id];\n          var influence = getVar('influences[' + neuron.ID + ']');\n          var neuron_old = getVar(neuron, 'old');\n          var initialized = false;\n          if (neuron.selfconnection.gater == this) {\n            buildSentence(influence, ' = ', neuron_old, store_trace);\n            initialized = true;\n          }\n          for (var incoming in this.trace.influences[neuron.ID]) {\n            var incoming_weight = getVar(this.trace.influences[neuron.ID][incoming], 'weight');\n            var incoming_activation = getVar(this.trace.influences[neuron.ID][incoming].from, 'activation');\n\n            if (initialized) buildSentence(influence, ' += ', incoming_weight, ' * ', incoming_activation, store_trace);else {\n              buildSentence(influence, ' = ', incoming_weight, ' * ', incoming_activation, store_trace);\n              initialized = true;\n            }\n          }\n        }\n\n        for (var i in this.connections.inputs) {\n          var input = this.connections.inputs[i];\n          if (input.gater) var input_gain = getVar(input, 'gain');\n          var input_activation = getVar(input.from, 'activation');\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n          if (this.selfconnected()) {\n            if (this.selfconnection.gater) {\n              if (input.gater) buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_gain, ' * ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n            } else {\n              if (input.gater) buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ', input_activation, store_trace);\n            }\n          } else {\n            if (input.gater) buildSentence(trace, ' = ', input_gain, ' * ', input_activation, store_trace);else buildSentence(trace, ' = ', input_activation, store_trace);\n          }\n          for (var id in this.trace.extended) {\n            // extended elegibility trace\n            var neuron = this.neighboors[id];\n            var influence = getVar('influences[' + neuron.ID + ']');\n\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n            var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n            if (neuron.selfconnected()) var neuron_self_weight = getVar(neuron.selfconnection, 'weight');\n            if (neuron.selfconnection.gater) var neuron_self_gain = getVar(neuron.selfconnection, 'gain');\n            if (neuron.selfconnected()) {\n              if (neuron.selfconnection.gater) buildSentence(xtrace, ' = ', neuron_self_gain, ' * ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);else buildSentence(xtrace, ' = ', neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ', trace, ' * ', influence, store_trace);\n            } else buildSentence(xtrace, ' = ', derivative, ' * ', trace, ' * ', influence, store_trace);\n          }\n        }\n        for (var connection in this.connections.gated) {\n          var gated_gain = getVar(this.connections.gated[connection], 'gain');\n          buildSentence(gated_gain, ' = ', activation, store_activation);\n        }\n      }\n      if (!isInput) {\n        var responsibility = getVar(this, 'error', 'responsibility', this.error.responsibility);\n        if (isOutput) {\n          var target = getVar('target');\n          buildSentence(responsibility, ' = ', target, ' - ', activation, store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n          }\n          outputs.push(activation.id);\n        } else {\n          if (!noProjections && !noGates) {\n            var error = getVar('aux');\n            for (var id in this.connections.projected) {\n              var connection = this.connections.projected[id];\n              var neuron = connection.to;\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              if (connection.gater) {\n                var connection_gain = getVar(connection, 'gain');\n                buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n              } else buildSentence(error, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n            }\n            var projected = getVar(this, 'error', 'projected', this.error.projected);\n            buildSentence(projected, ' = ', derivative, ' * ', error, store_propagation);\n            buildSentence(error, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var influence = getVar('aux_2');\n              var neuron_old = getVar(neuron, 'old');\n              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n              for (var input in this.trace.influences[neuron.ID]) {\n                var connection = this.trace.influences[neuron.ID][input];\n                var connection_weight = getVar(connection, 'weight');\n                var neuron_activation = getVar(connection.from, 'activation');\n                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n              }\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              buildSentence(error, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n            }\n            var gated = getVar(this, 'error', 'gated', this.error.gated);\n            buildSentence(gated, ' = ', derivative, ' * ', error, store_propagation);\n            buildSentence(responsibility, ' = ', projected, ' + ', gated, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var gradient = getVar('aux');\n              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n              buildSentence(gradient, ' = ', projected, ' * ', trace, store_propagation);\n              for (var id in this.trace.extended) {\n                var neuron = this.neighboors[id];\n                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n              }\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n            }\n          } else if (noGates) {\n            buildSentence(responsibility, ' = 0', store_propagation);\n            for (var id in this.connections.projected) {\n              var connection = this.connections.projected[id];\n              var neuron = connection.to;\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              if (connection.gater) {\n                var connection_gain = getVar(connection, 'gain');\n                buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_gain, ' * ', connection_weight, store_propagation);\n              } else buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', connection_weight, store_propagation);\n            }\n            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace.elegibility[input.ID]);\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * (', responsibility, ' * ', trace, ')', store_propagation);\n            }\n          } else if (noProjections) {\n            buildSentence(responsibility, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var influence = getVar('aux');\n              var neuron_old = getVar(neuron, 'old');\n              if (neuron.selfconnection.gater == this) buildSentence(influence, ' = ', neuron_old, store_propagation);else buildSentence(influence, ' = 0', store_propagation);\n              for (var input in this.trace.influences[neuron.ID]) {\n                var connection = this.trace.influences[neuron.ID][input];\n                var connection_weight = getVar(connection, 'weight');\n                var neuron_activation = getVar(connection.from, 'activation');\n                buildSentence(influence, ' += ', connection_weight, ' * ', neuron_activation, store_propagation);\n              }\n              var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n              buildSentence(responsibility, ' += ', neuron_responsibility, ' * ', influence, store_propagation);\n            }\n            buildSentence(responsibility, ' *= ', derivative, store_propagation);\n            for (var id in this.connections.inputs) {\n              var input = this.connections.inputs[id];\n              var gradient = getVar('aux');\n              buildSentence(gradient, ' = 0', store_propagation);\n              for (var id in this.trace.extended) {\n                var neuron = this.neighboors[id];\n                var neuron_responsibility = getVar(neuron, 'error', 'responsibility', neuron.error.responsibility);\n                var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID, this.trace.extended[neuron.ID][input.ID]);\n                buildSentence(gradient, ' += ', neuron_responsibility, ' * ', xtrace, store_propagation);\n              }\n              var input_weight = getVar(input, 'weight');\n              buildSentence(input_weight, ' += ', rate, ' * ', gradient, store_propagation);\n            }\n          }\n        }\n        buildSentence(bias, ' += ', rate, ' * ', responsibility, store_propagation);\n      }\n      return {\n        memory: varID,\n        neurons: neurons + 1,\n        inputs: inputs,\n        outputs: outputs,\n        targets: targets,\n        variables: variables,\n        activation_sentences: activation_sentences,\n        trace_sentences: trace_sentences,\n        propagation_sentences: propagation_sentences,\n        layers: layers\n      };\n    }\n  }], [{\n    key: 'uid',\n    value: function uid() {\n      return neurons++;\n    }\n  }, {\n    key: 'quantity',\n    value: function quantity() {\n      return {\n        neurons: neurons,\n        connections: _Connection.connections\n      };\n    }\n  }]);\n\n  return Neuron;\n}();\n\nNeuron.squash = squash;\nexports.default = Neuron;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//+ Jonas Raoni Soares Silva\n//@ http://jsfromhell.com/array/shuffle [v1.0]\nfunction shuffleInplace(o) {\n  //v1.0\n  for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {}\n  return o;\n};\n\n// Built-in cost functions\nvar cost = {\n  // Eq. 9\n  CROSS_ENTROPY: function CROSS_ENTROPY(target, output) {\n    var crossentropy = 0;\n    for (var i in output) {\n      crossentropy -= target[i] * Math.log(output[i] + 1e-15) + (1 - target[i]) * Math.log(1 + 1e-15 - output[i]);\n    } // +1e-15 is a tiny push away to avoid Math.log(0)\n    return crossentropy;\n  },\n  MSE: function MSE(target, output) {\n    var mse = 0;\n    for (var i = 0; i < output.length; i++) {\n      mse += Math.pow(target[i] - output[i], 2);\n    }return mse / output.length;\n  },\n  BINARY: function BINARY(target, output) {\n    var misses = 0;\n    for (var i = 0; i < output.length; i++) {\n      misses += Math.round(target[i] * 2) != Math.round(output[i] * 2);\n    }return misses;\n  }\n};\n\nvar Trainer = function () {\n  function Trainer(network, options) {\n    _classCallCheck(this, Trainer);\n\n    options = options || {};\n    this.network = network;\n    this.rate = options.rate || .2;\n    this.iterations = options.iterations || 100000;\n    this.error = options.error || .005;\n    this.cost = options.cost || null;\n    this.crossValidate = options.crossValidate || null;\n  }\n\n  // trains any given set to a network\n\n\n  _createClass(Trainer, [{\n    key: 'train',\n    value: function train(set, options) {\n      var error = 1;\n      var iterations = bucketSize = 0;\n      var abort = false;\n      var currentRate;\n      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n      var crossValidate = false,\n          testSet,\n          trainSet;\n\n      var start = Date.now();\n\n      if (options) {\n        if (options.iterations) this.iterations = options.iterations;\n        if (options.error) this.error = options.error;\n        if (options.rate) this.rate = options.rate;\n        if (options.cost) this.cost = options.cost;\n        if (options.schedule) this.schedule = options.schedule;\n        if (options.customLog) {\n          // for backward compatibility with code that used customLog\n          console.log('Deprecated: use schedule instead of customLog');\n          this.schedule = options.customLog;\n        }\n        if (this.crossValidate || options.crossValidate) {\n          if (!this.crossValidate) this.crossValidate = {};\n          crossValidate = true;\n          if (options.crossValidate.testSize) this.crossValidate.testSize = options.crossValidate.testSize;\n          if (options.crossValidate.testError) this.crossValidate.testError = options.crossValidate.testError;\n        }\n      }\n\n      currentRate = this.rate;\n      if (Array.isArray(this.rate)) {\n        var bucketSize = Math.floor(this.iterations / this.rate.length);\n      }\n\n      if (crossValidate) {\n        var numTrain = Math.ceil((1 - this.crossValidate.testSize) * set.length);\n        trainSet = set.slice(0, numTrain);\n        testSet = set.slice(numTrain);\n      }\n\n      var lastError = 0;\n      while (!abort && iterations < this.iterations && error > this.error) {\n        if (crossValidate && error <= this.crossValidate.testError) {\n          break;\n        }\n\n        var currentSetSize = set.length;\n        error = 0;\n        iterations++;\n\n        if (bucketSize > 0) {\n          var currentBucket = Math.floor(iterations / bucketSize);\n          currentRate = this.rate[currentBucket] || currentRate;\n        }\n\n        if (typeof this.rate === 'function') {\n          currentRate = this.rate(iterations, lastError);\n        }\n\n        if (crossValidate) {\n          this._trainSet(trainSet, currentRate, cost);\n          error += this.test(testSet).error;\n          currentSetSize = 1;\n        } else {\n          error += this._trainSet(set, currentRate, cost);\n          currentSetSize = set.length;\n        }\n\n        // check error\n        error /= currentSetSize;\n        lastError = error;\n\n        if (options) {\n          if (this.schedule && this.schedule.every && iterations % this.schedule.every == 0) abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate });else if (options.log && iterations % options.log == 0) {\n            console.log('iterations', iterations, 'error', error, 'rate', currentRate);\n          }\n          ;\n          if (options.shuffle) shuffleInplace(set);\n        }\n      }\n\n      var results = {\n        error: error,\n        iterations: iterations,\n        time: Date.now() - start\n      };\n\n      return results;\n    }\n\n    // trains any given set to a network, using a WebWorker (only for the browser). Returns a Promise of the results.\n\n  }, {\n    key: 'trainAsync',\n    value: function trainAsync(set, options) {\n      var train = this.workerTrain.bind(this);\n      return new Promise(function (resolve, reject) {\n        try {\n          train(set, resolve, options, true);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    // preforms one training epoch and returns the error (private function used in this.train)\n\n  }, {\n    key: '_trainSet',\n    value: function _trainSet(set, currentRate, costFunction) {\n      var errorSum = 0;\n      for (var i = 0; i < set.length; i++) {\n        var input = set[i].input;\n        var target = set[i].output;\n\n        var output = this.network.activate(input);\n        this.network.propagate(currentRate, target);\n\n        errorSum += costFunction(target, output);\n      }\n      return errorSum;\n    }\n\n    // tests a set and returns the error and elapsed time\n\n  }, {\n    key: 'test',\n    value: function test(set, options) {\n      var error = 0;\n      var input, output, target;\n      var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\n      var start = Date.now();\n\n      for (var i = 0; i < set.length; i++) {\n        input = set[i].input;\n        target = set[i].output;\n        output = this.network.activate(input);\n        error += cost(target, output);\n      }\n\n      error /= set.length;\n\n      var results = {\n        error: error,\n        time: Date.now() - start\n      };\n\n      return results;\n    }\n\n    // trains any given set to a network using a WebWorker [deprecated: use trainAsync instead]\n\n  }, {\n    key: 'workerTrain',\n    value: function workerTrain(set, callback, options, suppressWarning) {\n      if (!suppressWarning) {\n        console.warn('Deprecated: do not use `workerTrain`, use `trainAsync` instead.');\n      }\n      var that = this;\n\n      if (!this.network.optimized) this.network.optimize();\n\n      // Create a new worker\n      var worker = this.network.worker(this.network.optimized.memory, set, options);\n\n      // train the worker\n      worker.onmessage = function (e) {\n        switch (e.data.action) {\n          case 'done':\n            var iterations = e.data.message.iterations;\n            var error = e.data.message.error;\n            var time = e.data.message.time;\n\n            that.network.optimized.ownership(e.data.memoryBuffer);\n\n            // Done callback\n            callback({\n              error: error,\n              iterations: iterations,\n              time: time\n            });\n\n            // Delete the worker and all its associated memory\n            worker.terminate();\n            break;\n\n          case 'log':\n            console.log(e.data.message);\n\n          case 'schedule':\n            if (options && options.schedule && typeof options.schedule.do === 'function') {\n              var scheduled = options.schedule.do;\n              scheduled(e.data.message);\n            }\n            break;\n        }\n      };\n\n      // Start the worker\n      worker.postMessage({ action: 'startTraining' });\n    }\n\n    // trains an XOR to the network\n\n  }, {\n    key: 'XOR',\n    value: function XOR(options) {\n      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Incompatible network (2 inputs, 1 output)');\n\n      var defaults = {\n        iterations: 100000,\n        log: false,\n        shuffle: true,\n        cost: Trainer.cost.MSE\n      };\n\n      if (options) for (var i in options) {\n        defaults[i] = options[i];\n      }return this.train([{\n        input: [0, 0],\n        output: [0]\n      }, {\n        input: [1, 0],\n        output: [1]\n      }, {\n        input: [0, 1],\n        output: [1]\n      }, {\n        input: [1, 1],\n        output: [0]\n      }], defaults);\n    }\n\n    // trains the network to pass a Distracted Sequence Recall test\n\n  }, {\n    key: 'DSR',\n    value: function DSR(options) {\n      options = options || {};\n\n      var targets = options.targets || [2, 4, 7, 8];\n      var distractors = options.distractors || [3, 5, 6, 9];\n      var prompts = options.prompts || [0, 1];\n      var length = options.length || 24;\n      var criterion = options.success || 0.95;\n      var iterations = options.iterations || 100000;\n      var rate = options.rate || .1;\n      var log = options.log || 0;\n      var schedule = options.schedule || {};\n      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n      var trial, correct, i, j, success;\n      trial = correct = i = j = success = 0;\n      var error = 1,\n          symbols = targets.length + distractors.length + prompts.length;\n\n      var noRepeat = function noRepeat(range, avoid) {\n        var number = Math.random() * range | 0;\n        var used = false;\n        for (var i in avoid) {\n          if (number == avoid[i]) used = true;\n        }return used ? noRepeat(range, avoid) : number;\n      };\n\n      var equal = function equal(prediction, output) {\n        for (var i in prediction) {\n          if (Math.round(prediction[i]) != output[i]) return false;\n        }return true;\n      };\n\n      var start = Date.now();\n\n      while (trial < iterations && (success < criterion || trial % 1000 != 0)) {\n        // generate sequence\n        var sequence = [],\n            sequenceLength = length - prompts.length;\n        for (i = 0; i < sequenceLength; i++) {\n          var any = Math.random() * distractors.length | 0;\n          sequence.push(distractors[any]);\n        }\n        var indexes = [],\n            positions = [];\n        for (i = 0; i < prompts.length; i++) {\n          indexes.push(Math.random() * targets.length | 0);\n          positions.push(noRepeat(sequenceLength, positions));\n        }\n        positions = positions.sort();\n        for (i = 0; i < prompts.length; i++) {\n          sequence[positions[i]] = targets[indexes[i]];\n          sequence.push(prompts[i]);\n        }\n\n        //train sequence\n        var distractorsCorrect;\n        var targetsCorrect = distractorsCorrect = 0;\n        error = 0;\n        for (i = 0; i < length; i++) {\n          // generate input from sequence\n          var input = [];\n          for (j = 0; j < symbols; j++) {\n            input[j] = 0;\n          }input[sequence[i]] = 1;\n\n          // generate target output\n          var output = [];\n          for (j = 0; j < targets.length; j++) {\n            output[j] = 0;\n          }if (i >= sequenceLength) {\n            var index = i - sequenceLength;\n            output[indexes[index]] = 1;\n          }\n\n          // check result\n          var prediction = this.network.activate(input);\n\n          if (equal(prediction, output)) {\n            if (i < sequenceLength) distractorsCorrect++;else targetsCorrect++;\n          } else {\n            this.network.propagate(rate, output);\n          }\n\n          error += cost(output, prediction);\n\n          if (distractorsCorrect + targetsCorrect == length) correct++;\n        }\n\n        // calculate error\n        if (trial % 1000 == 0) correct = 0;\n        trial++;\n        var divideError = trial % 1000;\n        divideError = divideError == 0 ? 1000 : divideError;\n        success = correct / divideError;\n        error /= length;\n\n        // log\n        if (log && trial % log == 0) console.log('iterations:', trial, ' success:', success, ' correct:', correct, ' time:', Date.now() - start, ' error:', error);\n        if (schedule.do && schedule.every && trial % schedule.every == 0) schedule.do({\n          iterations: trial,\n          success: success,\n          error: error,\n          time: Date.now() - start,\n          correct: correct\n        });\n      }\n\n      return {\n        iterations: trial,\n        success: success,\n        error: error,\n        time: Date.now() - start\n      };\n    }\n\n    // train the network to learn an Embeded Reber Grammar\n\n  }, {\n    key: 'ERG',\n    value: function ERG(options) {\n\n      options = options || {};\n      var iterations = options.iterations || 150000;\n      var criterion = options.error || .05;\n      var rate = options.rate || .1;\n      var log = options.log || 500;\n      var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n      // gramar node\n      var Node = function Node() {\n        this.paths = [];\n      };\n      Node.prototype = {\n        connect: function connect(node, value) {\n          this.paths.push({\n            node: node,\n            value: value\n          });\n          return this;\n        },\n        any: function any() {\n          if (this.paths.length == 0) return false;\n          var index = Math.random() * this.paths.length | 0;\n          return this.paths[index];\n        },\n        test: function test(value) {\n          for (var i in this.paths) {\n            if (this.paths[i].value == value) return this.paths[i];\n          }return false;\n        }\n      };\n\n      var reberGrammar = function reberGrammar() {\n\n        // build a reber grammar\n        var output = new Node();\n        var n1 = new Node().connect(output, 'E');\n        var n2 = new Node().connect(n1, 'S');\n        var n3 = new Node().connect(n1, 'V').connect(n2, 'P');\n        var n4 = new Node().connect(n2, 'X');\n        n4.connect(n4, 'S');\n        var n5 = new Node().connect(n3, 'V');\n        n5.connect(n5, 'T');\n        n2.connect(n5, 'X');\n        var n6 = new Node().connect(n4, 'T').connect(n5, 'P');\n        var input = new Node().connect(n6, 'B');\n\n        return {\n          input: input,\n          output: output\n        };\n      };\n\n      // build an embeded reber grammar\n      var embededReberGrammar = function embededReberGrammar() {\n        var reber1 = reberGrammar();\n        var reber2 = reberGrammar();\n\n        var output = new Node();\n        var n1 = new Node().connect(output, 'E');\n        reber1.output.connect(n1, 'T');\n        reber2.output.connect(n1, 'P');\n        var n2 = new Node().connect(reber1.input, 'P').connect(reber2.input, 'T');\n        var input = new Node().connect(n2, 'B');\n\n        return {\n          input: input,\n          output: output\n        };\n      };\n\n      // generate an ERG sequence\n      var generate = function generate() {\n        var node = embededReberGrammar().input;\n        var next = node.any();\n        var str = '';\n        while (next) {\n          str += next.value;\n          next = next.node.any();\n        }\n        return str;\n      };\n\n      // test if a string matches an embeded reber grammar\n      var test = function test(str) {\n        var node = embededReberGrammar().input;\n        var i = 0;\n        var ch = str.charAt(i);\n        while (i < str.length) {\n          var next = node.test(ch);\n          if (!next) return false;\n          node = next.node;\n          ch = str.charAt(++i);\n        }\n        return true;\n      };\n\n      // helper to check if the output and the target vectors match\n      var different = function different(array1, array2) {\n        var max1 = 0;\n        var i1 = -1;\n        var max2 = 0;\n        var i2 = -1;\n        for (var i in array1) {\n          if (array1[i] > max1) {\n            max1 = array1[i];\n            i1 = i;\n          }\n          if (array2[i] > max2) {\n            max2 = array2[i];\n            i2 = i;\n          }\n        }\n\n        return i1 != i2;\n      };\n\n      var iteration = 0;\n      var error = 1;\n      var table = {\n        'B': 0,\n        'P': 1,\n        'T': 2,\n        'X': 3,\n        'S': 4,\n        'E': 5\n      };\n\n      var start = Date.now();\n      while (iteration < iterations && error > criterion) {\n        var i = 0;\n        error = 0;\n\n        // ERG sequence to learn\n        var sequence = generate();\n\n        // input\n        var read = sequence.charAt(i);\n        // target\n        var predict = sequence.charAt(i + 1);\n\n        // train\n        while (i < sequence.length - 1) {\n          var input = [];\n          var target = [];\n          for (var j = 0; j < 6; j++) {\n            input[j] = 0;\n            target[j] = 0;\n          }\n          input[table[read]] = 1;\n          target[table[predict]] = 1;\n\n          var output = this.network.activate(input);\n\n          if (different(output, target)) this.network.propagate(rate, target);\n\n          read = sequence.charAt(++i);\n          predict = sequence.charAt(i + 1);\n\n          error += cost(target, output);\n        }\n        error /= sequence.length;\n        iteration++;\n        if (iteration % log == 0) {\n          console.log('iterations:', iteration, ' time:', Date.now() - start, ' error:', error);\n        }\n      }\n\n      return {\n        iterations: iteration,\n        error: error,\n        time: Date.now() - start,\n        test: test,\n        generate: generate\n      };\n    }\n  }, {\n    key: 'timingTask',\n    value: function timingTask(options) {\n\n      if (this.network.inputs() != 2 || this.network.outputs() != 1) throw new Error('Invalid Network: must have 2 inputs and one output');\n\n      if (typeof options == 'undefined') options = {};\n\n      // helper\n      function getSamples(trainingSize, testSize) {\n\n        // sample size\n        var size = trainingSize + testSize;\n\n        // generate samples\n        var t = 0;\n        var set = [];\n        for (var i = 0; i < size; i++) {\n          set.push({ input: [0, 0], output: [0] });\n        }\n        while (t < size - 20) {\n          var n = Math.round(Math.random() * 20);\n          set[t].input[0] = 1;\n          for (var j = t; j <= t + n; j++) {\n            set[j].input[1] = n / 20;\n            set[j].output[0] = 0.5;\n          }\n          t += n;\n          n = Math.round(Math.random() * 20);\n          for (var k = t + 1; k <= t + n && k < size; k++) {\n            set[k].input[1] = set[t].input[1];\n          }t += n;\n        }\n\n        // separate samples between train and test sets\n        var trainingSet = [];\n        var testSet = [];\n        for (var l = 0; l < size; l++) {\n          (l < trainingSize ? trainingSet : testSet).push(set[l]);\n        } // return samples\n        return {\n          train: trainingSet,\n          test: testSet\n        };\n      }\n\n      var iterations = options.iterations || 200;\n      var error = options.error || .005;\n      var rate = options.rate || [.03, .02];\n      var log = options.log === false ? false : options.log || 10;\n      var cost = options.cost || this.cost || Trainer.cost.MSE;\n      var trainingSamples = options.trainSamples || 7000;\n      var testSamples = options.trainSamples || 1000;\n\n      // samples for training and testing\n      var samples = getSamples(trainingSamples, testSamples);\n\n      // train\n      var result = this.train(samples.train, {\n        rate: rate,\n        log: log,\n        iterations: iterations,\n        error: error,\n        cost: cost\n      });\n\n      return {\n        train: result,\n        test: this.test(samples.test)\n      };\n    }\n  }]);\n\n  return Trainer;\n}();\n\nTrainer.cost = cost;\nexports.default = Trainer;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Architect = exports.Network = exports.Trainer = exports.Layer = exports.Neuron = undefined;\n\nvar _Neuron = __webpack_require__(2);\n\nObject.defineProperty(exports, 'Neuron', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Neuron).default;\n  }\n});\n\nvar _Layer = __webpack_require__(0);\n\nObject.defineProperty(exports, 'Layer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Layer).default;\n  }\n});\n\nvar _Trainer = __webpack_require__(3);\n\nObject.defineProperty(exports, 'Trainer', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Trainer).default;\n  }\n});\n\nvar _Network = __webpack_require__(1);\n\nObject.defineProperty(exports, 'Network', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Network).default;\n  }\n});\n\nvar _architect = __webpack_require__(7);\n\nvar Architect = _interopRequireWildcard(_architect);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Architect = Architect;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar connections = exports.connections = 0;\n\nvar Connection = function () {\n  function Connection(from, to, weight) {\n    _classCallCheck(this, Connection);\n\n    if (!from || !to) throw new Error(\"Connection Error: Invalid neurons\");\n\n    this.ID = Connection.uid();\n    this.from = from;\n    this.to = to;\n    this.weight = typeof weight == 'undefined' ? Math.random() * .2 - .1 : weight;\n    this.gain = 1;\n    this.gater = null;\n  }\n\n  _createClass(Connection, null, [{\n    key: \"uid\",\n    value: function uid() {\n      return exports.connections = connections += 1, connections - 1;\n    }\n  }]);\n\n  return Connection;\n}();\n\nexports.default = Connection;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connections = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// represents a connection from one layer to another, and keeps track of its weight and gain\nvar connections = exports.connections = 0;\n\nvar LayerConnection = function () {\n  function LayerConnection(fromLayer, toLayer, type, weights) {\n    _classCallCheck(this, LayerConnection);\n\n    this.ID = LayerConnection.uid();\n    this.from = fromLayer;\n    this.to = toLayer;\n    this.selfconnection = toLayer == fromLayer;\n    this.type = type;\n    this.connections = {};\n    this.list = [];\n    this.size = 0;\n    this.gatedfrom = [];\n\n    if (typeof this.type == 'undefined') {\n      if (fromLayer == toLayer) this.type = _Layer2.default.connectionType.ONE_TO_ONE;else this.type = _Layer2.default.connectionType.ALL_TO_ALL;\n    }\n\n    if (this.type == _Layer2.default.connectionType.ALL_TO_ALL || this.type == _Layer2.default.connectionType.ALL_TO_ELSE) {\n      for (var here in this.from.list) {\n        for (var there in this.to.list) {\n          var from = this.from.list[here];\n          var to = this.to.list[there];\n          if (this.type == _Layer2.default.connectionType.ALL_TO_ELSE && from == to) continue;\n          var connection = from.project(to, weights);\n\n          this.connections[connection.ID] = connection;\n          this.size = this.list.push(connection);\n        }\n      }\n    } else if (this.type == _Layer2.default.connectionType.ONE_TO_ONE) {\n\n      for (var neuron in this.from.list) {\n        var from = this.from.list[neuron];\n        var to = this.to.list[neuron];\n        var connection = from.project(to, weights);\n\n        this.connections[connection.ID] = connection;\n        this.size = this.list.push(connection);\n      }\n    }\n\n    fromLayer.connectedTo.push(this);\n  }\n\n  _createClass(LayerConnection, null, [{\n    key: 'uid',\n    value: function uid() {\n      return exports.connections = connections += 1, connections - 1;\n    }\n  }]);\n\n  return LayerConnection;\n}();\n\nexports.default = LayerConnection;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Perceptron = __webpack_require__(8);\n\nObject.defineProperty(exports, 'Perceptron', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Perceptron).default;\n  }\n});\n\nvar _LSTM = __webpack_require__(9);\n\nObject.defineProperty(exports, 'LSTM', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_LSTM).default;\n  }\n});\n\nvar _Liquid = __webpack_require__(10);\n\nObject.defineProperty(exports, 'Liquid', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Liquid).default;\n  }\n});\n\nvar _Hopfield = __webpack_require__(11);\n\nObject.defineProperty(exports, 'Hopfield', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Hopfield).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Perceptron = function (_Network) {\n  _inherits(Perceptron, _Network);\n\n  function Perceptron() {\n    _classCallCheck(this, Perceptron);\n\n    var _this = _possibleConstructorReturn(this, (Perceptron.__proto__ || Object.getPrototypeOf(Perceptron)).call(this));\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to Array\n    if (args.length < 3) throw new Error('not enough layers (minimum 3) !!');\n\n    var inputs = args.shift(); // first argument\n    var outputs = args.pop(); // last argument\n    var layers = args; // all the arguments in the middle\n\n    var input = new _Layer2.default(inputs);\n    var hidden = [];\n    var output = new _Layer2.default(outputs);\n\n    var previous = input;\n\n    // generate hidden layers\n    for (var i = 0; i < layers.length; i++) {\n      var size = layers[i];\n      var layer = new _Layer2.default(size);\n      hidden.push(layer);\n      previous.project(layer);\n      previous = layer;\n    }\n    previous.project(output);\n\n    // set layers of the neural network\n    _this.set({\n      input: input,\n      hidden: hidden,\n      output: output\n    });\n    return _this;\n  }\n\n  return Perceptron;\n}(_Network3.default);\n\nexports.default = Perceptron;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LSTM = function (_Network) {\n  _inherits(LSTM, _Network);\n\n  function LSTM() {\n    _classCallCheck(this, LSTM);\n\n    var _this = _possibleConstructorReturn(this, (LSTM.__proto__ || Object.getPrototypeOf(LSTM)).call(this));\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to array\n    if (args.length < 3) throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var last = args.pop();\n    var option = {\n      peepholes: _Layer2.default.connectionType.ALL_TO_ALL,\n      hiddenToHidden: false,\n      outputToHidden: false,\n      outputToGates: false,\n      inputToOutput: true\n    };\n    if (typeof last != 'number') {\n      var outputs = args.pop();\n      if (last.hasOwnProperty('peepholes')) option.peepholes = last.peepholes;\n      if (last.hasOwnProperty('hiddenToHidden')) option.hiddenToHidden = last.hiddenToHidden;\n      if (last.hasOwnProperty('outputToHidden')) option.outputToHidden = last.outputToHidden;\n      if (last.hasOwnProperty('outputToGates')) option.outputToGates = last.outputToGates;\n      if (last.hasOwnProperty('inputToOutput')) option.inputToOutput = last.inputToOutput;\n    } else {\n      var outputs = last;\n    }\n\n    var inputs = args.shift();\n    var layers = args;\n\n    var inputLayer = new _Layer2.default(inputs);\n    var hiddenLayers = [];\n    var outputLayer = new _Layer2.default(outputs);\n\n    var previous = null;\n\n    // generate layers\n    for (var i = 0; i < layers.length; i++) {\n      // generate memory blocks (memory cell and respective gates)\n      var size = layers[i];\n\n      var inputGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n      var forgetGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n      var memoryCell = new _Layer2.default(size);\n      var outputGate = new _Layer2.default(size).set({\n        bias: 1\n      });\n\n      hiddenLayers.push(inputGate);\n      hiddenLayers.push(forgetGate);\n      hiddenLayers.push(memoryCell);\n      hiddenLayers.push(outputGate);\n\n      // connections from input layer\n      var input = inputLayer.project(memoryCell);\n      inputLayer.project(inputGate);\n      inputLayer.project(forgetGate);\n      inputLayer.project(outputGate);\n\n      // connections from previous memory-block layer to this one\n      if (previous != null) {\n        var cell = previous.project(memoryCell);\n        previous.project(inputGate);\n        previous.project(forgetGate);\n        previous.project(outputGate);\n      }\n\n      // connections from memory cell\n      var output = memoryCell.project(outputLayer);\n\n      // self-connection\n      var self = memoryCell.project(memoryCell);\n\n      // hidden to hidden recurrent connection\n      if (option.hiddenToHidden) memoryCell.project(memoryCell, _Layer2.default.connectionType.ALL_TO_ELSE);\n\n      // out to hidden recurrent connection\n      if (option.outputToHidden) outputLayer.project(memoryCell);\n\n      // out to gates recurrent connection\n      if (option.outputToGates) {\n        outputLayer.project(inputGate);\n        outputLayer.project(outputGate);\n        outputLayer.project(forgetGate);\n      }\n\n      // peepholes\n      memoryCell.project(inputGate, option.peepholes);\n      memoryCell.project(forgetGate, option.peepholes);\n      memoryCell.project(outputGate, option.peepholes);\n\n      // gates\n      inputGate.gate(input, _Layer2.default.gateType.INPUT);\n      forgetGate.gate(self, _Layer2.default.gateType.ONE_TO_ONE);\n      outputGate.gate(output, _Layer2.default.gateType.OUTPUT);\n      if (previous != null) inputGate.gate(cell, _Layer2.default.gateType.INPUT);\n\n      previous = memoryCell;\n    }\n\n    // input to output direct connection\n    if (option.inputToOutput) inputLayer.project(outputLayer);\n\n    // set the layers of the neural network\n    _this.set({\n      input: inputLayer,\n      hidden: hiddenLayers,\n      output: outputLayer\n    });\n    return _this;\n  }\n\n  return LSTM;\n}(_Network3.default);\n\nexports.default = LSTM;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Liquid = function (_Network) {\n  _inherits(Liquid, _Network);\n\n  function Liquid(inputs, hidden, outputs, connections, gates) {\n    _classCallCheck(this, Liquid);\n\n    // create layers\n    var _this = _possibleConstructorReturn(this, (Liquid.__proto__ || Object.getPrototypeOf(Liquid)).call(this));\n\n    var inputLayer = new _Layer2.default(inputs);\n    var hiddenLayer = new _Layer2.default(hidden);\n    var outputLayer = new _Layer2.default(outputs);\n\n    // make connections and gates randomly among the neurons\n    var neurons = hiddenLayer.neurons();\n    var connectionList = [];\n\n    for (var i = 0; i < connections; i++) {\n      // connect two random neurons\n      var from = Math.random() * neurons.length | 0;\n      var to = Math.random() * neurons.length | 0;\n      var connection = neurons[from].project(neurons[to]);\n      connectionList.push(connection);\n    }\n\n    for (var j = 0; j < gates; j++) {\n      // pick a random gater neuron\n      var gater = Math.random() * neurons.length | 0;\n      // pick a random connection to gate\n      var connection = Math.random() * connectionList.length | 0;\n      // let the gater gate the connection\n      neurons[gater].gate(connectionList[connection]);\n    }\n\n    // connect the layers\n    inputLayer.project(hiddenLayer);\n    hiddenLayer.project(outputLayer);\n\n    // set the layers of the network\n    _this.set({\n      input: inputLayer,\n      hidden: [hiddenLayer],\n      output: outputLayer\n    });\n    return _this;\n  }\n\n  return Liquid;\n}(_Network3.default);\n\nexports.default = Liquid;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Network2 = __webpack_require__(1);\n\nvar _Network3 = _interopRequireDefault(_Network2);\n\nvar _Trainer = __webpack_require__(3);\n\nvar _Trainer2 = _interopRequireDefault(_Trainer);\n\nvar _Layer = __webpack_require__(0);\n\nvar _Layer2 = _interopRequireDefault(_Layer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Hopfield = function (_Network) {\n  _inherits(Hopfield, _Network);\n\n  function Hopfield(size) {\n    _classCallCheck(this, Hopfield);\n\n    var _this = _possibleConstructorReturn(this, (Hopfield.__proto__ || Object.getPrototypeOf(Hopfield)).call(this));\n\n    var inputLayer = new _Layer2.default(size);\n    var outputLayer = new _Layer2.default(size);\n\n    inputLayer.project(outputLayer, _Layer2.default.connectionType.ALL_TO_ALL);\n\n    _this.set({\n      input: inputLayer,\n      hidden: [],\n      output: outputLayer\n    });\n\n    _this.trainer = new _Trainer2.default(_this);\n    return _this;\n  }\n\n  _createClass(Hopfield, [{\n    key: 'learn',\n    value: function learn(patterns) {\n      var set = [];\n      for (var p in patterns) {\n        set.push({\n          input: patterns[p],\n          output: patterns[p]\n        });\n      }return this.trainer.train(set, {\n        iterations: 500000,\n        error: .00005,\n        rate: 1\n      });\n    }\n  }, {\n    key: 'feed',\n    value: function feed(pattern) {\n      var output = this.activate(pattern);\n\n      var pattern = [];\n      for (var i in output) {\n        pattern[i] = output[i] > .5 ? 1 : 0;\n      }return pattern;\n    }\n  }]);\n\n  return Hopfield;\n}(_Network3.default);\n\nexports.default = Hopfield;\n\n/***/ })\n/******/ ]);\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/dist/synaptic.js\n// module id = 336\n// module chunks = 275795115718244"],"sourceRoot":""}